[{"path":"https://pwwang.github.io/biopipen.utils.R/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 biopipen.utils authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Panwen Wang. Author, maintainer.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang P (2024). biopipen.utils: Common Utility Functions Biopipen. R package version 0.0.4.","code":"@Manual{,   title = {biopipen.utils: Common Utility Functions for Biopipen},   author = {Panwen Wang},   year = {2024},   note = {R package version 0.0.4}, }"},{"path":"https://pwwang.github.io/biopipen.utils.R/index.html","id":"biopipenutilsr","dir":"","previous_headings":"","what":"Common Utility Functions for Biopipen","title":"Common Utility Functions for Biopipen","text":"Common utility R functions biopipen processes.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Common Utility Functions for Biopipen","text":"","code":"devtools::install_github(\"pwwang/biopipen-utils.R\")"},{"path":"https://pwwang.github.io/biopipen.utils.R/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Common Utility Functions for Biopipen","text":"","code":"library(biopipen.utils)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/AddSeuratCommand.html","id":null,"dir":"Reference","previous_headings":"","what":"AddSeuratCommand — AddSeuratCommand","title":"AddSeuratCommand — AddSeuratCommand","text":"Add command Seurat object @commands slot","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/AddSeuratCommand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AddSeuratCommand — AddSeuratCommand","text":"","code":"AddSeuratCommand(   object,   name,   call.string = paste0(name, \"(object, ...)\"),   params = list(),   assay.used = NULL )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/AddSeuratCommand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AddSeuratCommand — AddSeuratCommand","text":"object Seurat object name Name command call.string Call string command params Parameters command assay.used Assay used command","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/AddSeuratCommand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AddSeuratCommand — AddSeuratCommand","text":"Seurat object command added","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/AddSeuratCommand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AddSeuratCommand — AddSeuratCommand","text":"","code":"object <- SeuratObject::pbmc_small names(object@commands) #>  [1] \"NormalizeData.RNA\"        \"ScaleData.RNA\"            #>  [3] \"RunPCA.RNA\"               \"BuildSNN.RNA.pca\"         #>  [5] \"FindClusters\"             \"RunTSNE.pca\"              #>  [7] \"JackStraw.RNA.pca\"        \"ScoreJackStraw.pca\"       #>  [9] \"ProjectDim.RNA.pca\"       \"FindVariableFeatures.RNA\"  object <- AddSeuratCommand(object, \"RunSeuratDEAnalysis\",  \"RunSeuratDEAnalysis(object, group.by = 'groups', ident.1 = 'g1', ident.2 = 'g2')\",  list(group.by = 'groups', ident.1 = 'g1', ident.2 = 'g2')) object@commands$RunSeuratDEAnalysis #> Command: RunSeuratDEAnalysis(object, group.by = 'groups', ident.1 = 'g1', ident.2 = 'g2') #> Time: 2024-12-31 20:49:50.825593 #> group.by : groups  #> ident.1 : g1  #> ident.2 : g2"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/LoadSeuratAndPerformQC.html","id":null,"dir":"Reference","previous_headings":"","what":"Load samples into a Seurat object — LoadSeuratAndPerformQC","title":"Load samples into a Seurat object — LoadSeuratAndPerformQC","text":"Cell QC performed, either per-sample whole object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/LoadSeuratAndPerformQC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load samples into a Seurat object — LoadSeuratAndPerformQC","text":"","code":"LoadSeuratAndPerformQC(   meta,   samples = NULL,   per_sample_qc = FALSE,   cell_qc = NULL,   gene_qc = NULL,   tmpdir = NULL,   log = NULL,   cache = NULL )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/LoadSeuratAndPerformQC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load samples into a Seurat object — LoadSeuratAndPerformQC","text":"meta Metadata samples Required columns: Sample, RNAData. RNAData column contain path 10X data, either directory file path directory, function look barcodes.tsv.gz, features.tsv.gz matrix.mtx.gz. directory loaded Seurat::Read10X. Sometimes, may prefix file names, e.g. \"'prefix'.barcodes.tsv.gz\", also supported. path file, h5 file can loaded Seurat::Read10X_h5 samples Samples load. NULL, samples loaded per_sample_qc Whether perform per-sample cell QC cell_qc Cell QC criteria gene_qc Gene QC criteria list containing following fields: min_cells: Minimum number cells gene expressed kept excludes: string strings exclude certain genes. Regular expressions supported. Multiple strings can also separated commas single string. tmpdir Temporary directory store intermediate files prefix file names log Logger cache Directory cache results. Set FALSE disable caching","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/LoadSeuratAndPerformQC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load samples into a Seurat object — LoadSeuratAndPerformQC","text":"Seurat object. slot misc, two fields: cell_qc_df gene_qc, list gene QC results","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/LoadSeuratAndPerformQC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load samples into a Seurat object — LoadSeuratAndPerformQC","text":"","code":"# \\donttest{ datadir <- system.file(\"extdata\", \"scrna\", package = \"biopipen.utils\") meta <- data.frame(     Sample = c(\"Sample1\", \"Sample2\"),     RNAData = c(         file.path(datadir, \"Sample1\"),         file.path(datadir, \"Sample2\")     ) ) obj <- LoadSeuratAndPerformQC(meta, cache = FALSE, gene_qc = list(min_cells = 3)) #> INFO    [2024-12-31 20:49:51] Loading each sample ... #> INFO    [2024-12-31 20:49:51] - Loading sample Sample1 ... #> INFO    [2024-12-31 20:49:51] - Loading sample Sample2 ... #> INFO    [2024-12-31 20:49:51] Merging samples ... #> INFO    [2024-12-31 20:49:53] Performing cell QC ... #> INFO    [2024-12-31 20:49:53] Performing gene QC ... head(obj@misc$cell_qc_df) #>                  Sample nFeature_RNA nCount_RNA percent.mt percent.ribo #> Sample1_TEINH_1 Sample1         1153       2196          0            0 #> Sample1_TEINH_2 Sample1         1219       2560          0            0 #> Sample1_TEINH_3 Sample1          981       1784          0            0 #> Sample1_TEINH_4 Sample1         1159       2159          0            0 #> Sample1_TEINH_5 Sample1         1111       1841          0            0 #> Sample1_TEINH_6 Sample1          766       1236          0            0 #>                 percent.hb percent.plat  .QC #> Sample1_TEINH_1          0            0 TRUE #> Sample1_TEINH_2          0            0 TRUE #> Sample1_TEINH_3          0            0 TRUE #> Sample1_TEINH_4          0            0 TRUE #> Sample1_TEINH_5          0            0 TRUE #> Sample1_TEINH_6          0            0 TRUE print(obj@misc$gene_qc) #> $before #> [1] 3636 #>  #> $criteria #> $criteria$min_cells #> [1] 3 #>  #>  #> $ncells #>       Sample         feature ncells #> 79   Sample1 ENSG00000145708      2 #> 182  Sample1 ENSG00000100097      4 #> 383  Sample1 ENSG00000225968      3 #> 398  Sample1 ENSG00000211445      0 #> 703  Sample1 ENSG00000152822      1 #> 749  Sample1 ENSG00000277586      5 #> 996  Sample1 ENSG00000143479      4 #> 1054 Sample1 ENSG00000072657      2 #> 1547 Sample1 ENSG00000101463      0 #> 1554 Sample1 ENSG00000079102      0 #> 1558 Sample1 ENSG00000172137      2 #> 1560 Sample1 ENSG00000188803      2 #> 1684 Sample1 ENSG00000183773      2 #> 1703 Sample1 ENSG00000150556      3 #> 1785 Sample1 ENSG00000101327      1 #> 1942 Sample1 ENSG00000106852      2 #> 2011 Sample1 ENSG00000006128      2 #> 2040 Sample1 ENSG00000130751      1 #> 2126 Sample1 ENSG00000082074      2 #> 2279 Sample1 ENSG00000188647      1 #> 2316 Sample1 ENSG00000166407      0 #> 2340 Sample1 ENSG00000118733      3 #> 2343 Sample1 ENSG00000151693      3 #> 2446 Sample1 ENSG00000166863      2 #> 2453 Sample1 ENSG00000133101      2 #> 2543 Sample1 ENSG00000185513      1 #> 2561 Sample1 ENSG00000123096      2 #> 2881 Sample1 ENSG00000162631      4 #> 2982 Sample1 ENSG00000163873      2 #> 3028 Sample1 ENSG00000112893      2 #> 3057 Sample1 ENSG00000262655      1 #> 3085 Sample1 ENSG00000164326      0 #> 3172 Sample1 ENSG00000090006      5 #> 3188 Sample1 ENSG00000181234      1 #> 3202 Sample1 ENSG00000113657      4 #> 3386 Sample1 ENSG00000168546      2 #> 3506 Sample1 ENSG00000189409      2 #> 3510 Sample1 ENSG00000165973      2 #> 3594 Sample1 ENSG00000054803      0 #> 3715 Sample2 ENSG00000145708      5 #> 3818 Sample2 ENSG00000100097      2 #> 4019 Sample2 ENSG00000225968      0 #> 4034 Sample2 ENSG00000211445      3 #> 4339 Sample2 ENSG00000152822      3 #> 4385 Sample2 ENSG00000277586      2 #> 4632 Sample2 ENSG00000143479      1 #> 4690 Sample2 ENSG00000072657      3 #> 5183 Sample2 ENSG00000101463      0 #> 5190 Sample2 ENSG00000079102      1 #> 5194 Sample2 ENSG00000172137      1 #> 5196 Sample2 ENSG00000188803      0 #> 5320 Sample2 ENSG00000183773      4 #> 5339 Sample2 ENSG00000150556      2 #> 5421 Sample2 ENSG00000101327      0 #> 5578 Sample2 ENSG00000106852      2 #> 5647 Sample2 ENSG00000006128      1 #> 5676 Sample2 ENSG00000130751      4 #> 5762 Sample2 ENSG00000082074      5 #> 5915 Sample2 ENSG00000188647      3 #> 5952 Sample2 ENSG00000166407      0 #> 5976 Sample2 ENSG00000118733      1 #> 5979 Sample2 ENSG00000151693      2 #> 6082 Sample2 ENSG00000166863      1 #> 6089 Sample2 ENSG00000133101      2 #> 6179 Sample2 ENSG00000185513      5 #> 6197 Sample2 ENSG00000123096      5 #> 6517 Sample2 ENSG00000162631      1 #> 6618 Sample2 ENSG00000163873      1 #> 6664 Sample2 ENSG00000112893      2 #> 6693 Sample2 ENSG00000262655      0 #> 6721 Sample2 ENSG00000164326      0 #> 6808 Sample2 ENSG00000090006      2 #> 6824 Sample2 ENSG00000181234      2 #> 6838 Sample2 ENSG00000113657      2 #> 7022 Sample2 ENSG00000168546      3 #> 7142 Sample2 ENSG00000189409      1 #> 7146 Sample2 ENSG00000165973      2 #> 7230 Sample2 ENSG00000054803      1 #>  #> $after #> [1] 3597 #>  # }"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/PerformSeuratCellQC.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform cell QC — PerformSeuratCellQC","title":"Perform cell QC — PerformSeuratCellQC","text":"Perform cell QC","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/PerformSeuratCellQC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform cell QC — PerformSeuratCellQC","text":"","code":"PerformSeuratCellQC(object, cell_qc)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/PerformSeuratCellQC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform cell QC — PerformSeuratCellQC","text":"object Seurat object cell_qc Cell QC criteria","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/PerformSeuratCellQC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform cell QC — PerformSeuratCellQC","text":"Seurat object cell QC results @misc$cell_qc_df","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":null,"dir":"Reference","previous_headings":"","what":"Add and save report — Reporter","title":"Add and save report — Reporter","text":"Add report report.json pipen-report build report","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Add and save report — Reporter","text":"report report","code":""},{"path":[]},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Add and save report — Reporter","text":"Reporter$new() Reporter$add() Reporter$add2() Reporter$image() Reporter$clear() Reporter$save() Reporter$clone()","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Add and save report — Reporter","text":"Initialize reporter","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add and save report — Reporter","text":"","code":"Reporter$new()"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"method-add-","dir":"Reference","previous_headings":"","what":"Method add()","title":"Add and save report — Reporter","text":"Add content report","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Add and save report — Reporter","text":"","code":"Reporter$add(..., h1, h2 = \"#\", h3 = \"#\", ui = \"flat\")"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add and save report — Reporter","text":"... content add h1 first level heading report h2 second level heading report h3 third level heading report ui user interface report","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"method-add--1","dir":"Reference","previous_headings":"","what":"Method add2()","title":"Add and save report — Reporter","text":"Add content report, infer headings headings sub-headings","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Add and save report — Reporter","text":"","code":"Reporter$add2(..., hs, hs2 = c(), ui = \"flat\", collapse = \": \")"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add and save report — Reporter","text":"... content add hs headings case hs2 headings must shown. items hs, concatenated. example, hs = c(\"Section1\", \"Case1\"), hs2 = c(\"\", \"B\"), headings h1 = \"Section1: Case1\" h2 = \"\" h3 = \"B\". ui user interface report collapse separator concatenate headings","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"method-image-","dir":"Reference","previous_headings":"","what":"Method image()","title":"Add and save report — Reporter","text":"Generate report image added","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Add and save report — Reporter","text":"","code":"Reporter$image(prefix, more_formats, save_code, kind = \"image\", ...)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add and save report — Reporter","text":"prefix prefix image more_formats formats image available save_code Whether save code reproduce plot kind kind report, default \"image\" ... arguments add report","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Add and save report — Reporter","text":"list report image","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add and save report — Reporter","text":"","code":"reporter <- get_reporter() reporter$add(   list(      name = \"Image 1\",      contents = list(reporter$image(\"/path/to/image1\", \"pdf\", save_code = TRUE))   ),   h1 = \"Images\",   h2 = \"Image 1\" )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"method-clear-","dir":"Reference","previous_headings":"","what":"Method clear()","title":"Add and save report — Reporter","text":"Clear report","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Add and save report — Reporter","text":"","code":"Reporter$clear()"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"method-save-","dir":"Reference","previous_headings":"","what":"Method save()","title":"Add and save report — Reporter","text":"Save report file","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Add and save report — Reporter","text":"","code":"Reporter$save(path, clear = TRUE)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add and save report — Reporter","text":"path path save report path directory, report saved report.json directory Otherwise, report saved path clear Whether clear report saving","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Add and save report — Reporter","text":"objects class cloneable method.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Add and save report — Reporter","text":"","code":"Reporter$clone(deep = FALSE)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add and save report — Reporter","text":"deep Whether make deep clone.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add and save report — Reporter","text":"","code":"## ------------------------------------------------ ## Method `Reporter$image` ## ------------------------------------------------  reporter <- get_reporter() reporter$add(   list(      name = \"Image 1\",      contents = list(reporter$image(\"/path/to/image1\", \"pdf\", save_code = TRUE))   ),   h1 = \"Images\",   h2 = \"Image 1\" )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunEnrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Enrichment Analysis (Over-representation Analysis) — RunEnrichment","title":"Run Enrichment Analysis (Over-representation Analysis) — RunEnrichment","text":"Run enrichment analysis list differentially expressed genes (DEGs)","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunEnrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Enrichment Analysis (Over-representation Analysis) — RunEnrichment","text":"","code":"RunEnrichment(   degs,   deg = \"p_val_adj < 0.05\",   dbs = \"KEGG_2021_Human\",   cache = NULL,   error = TRUE,   site = \"Enrichr\",   ... )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunEnrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Enrichment Analysis (Over-representation Analysis) — RunEnrichment","text":"degs data frame DEGs, typically generated RunSeuratDEAnalysis deg string specifying condition gene considered differentially expressed dbs string specifying database use enrichment analysis list available databases can found https://maayanlab.cloud/Enrichr/#libraries cache string specifying directory cache results Set FALSE disable caching error boolean specifying whether throw error enrichment analysis fails site string specifying Enrichr site use ... Additional arguments pass RunEnrichment","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunEnrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Enrichment Analysis (Over-representation Analysis) — RunEnrichment","text":"","code":"degs <- suppressWarnings(RunSeuratDEAnalysis(SeuratObject::pbmc_small, \"groups\", \"g1\", \"g2\")) RunEnrichment(degs, deg = \"abs(avg_log2FC) > 1\") #> Connection changed to https://maayanlab.cloud/Enrichr/ #> Connection is Live! #> Uploading data to Enrichr... Uploading data to Enrichr...  #> Error in f(init, x[[i]]): is.request(y) is not TRUE"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDEAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"RunSeuratDEAnalysis — RunSeuratDEAnalysis","title":"RunSeuratDEAnalysis — RunSeuratDEAnalysis","text":"Run differential expression analysis Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDEAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RunSeuratDEAnalysis — RunSeuratDEAnalysis","text":"","code":"RunSeuratDEAnalysis(   object,   group.by,   ident.1 = NULL,   ident.2 = NULL,   assay = NULL,   subset = NULL,   cache = NULL,   error = TRUE,   ... )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDEAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RunSeuratDEAnalysis — RunSeuratDEAnalysis","text":"object Seurat object group.Column name meta.data group cells ident.1 Identity first group cells ident.2 Identity second group cells assay Assay use analysis subset Subset cells use analysis string expression pass dplyr::filter function cache Directory cache results. Set FALSE disable caching results analysis saved directory Anything changed object arguments trigger re-run error Whether raise error analysis fails Otherwise, return empty data frame ... Additional arguments pass Seurat::FindMarkers","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDEAnalysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RunSeuratDEAnalysis — RunSeuratDEAnalysis","text":"","code":"RunSeuratDEAnalysis(SeuratObject::pbmc_small, \"groups\", \"g1\", \"g2\") #>                    p_val avg_log2FC pct.1 pct.2 p_val_adj          gene groups #> NOSIP         0.02870319  1.2224797 0.455 0.194         1         NOSIP     NA #> LYAR          0.02920961  0.8205500 0.159 0.389         1          LYAR     NA #> SNHG7         0.03189563  0.9583741 0.295 0.083         1         SNHG7     NA #> TMUB1         0.03592718  1.7965894 0.182 0.028         1         TMUB1     NA #> ZNF330        0.03911949  9.7197369 0.114 0.000         1        ZNF330     NA #> FUOM          0.03911949  7.6369685 0.114 0.000         1          FUOM     NA #> CCL4          0.04262696  3.6666376 0.205 0.056         1          CCL4     NA #> LINC00936     0.04918625  0.7604677 0.386 0.167         1     LINC00936     NA #> TSPO          0.05000053  0.8252648 0.659 0.361         1          TSPO     NA #> IFI6          0.05588343  0.8570195 0.432 0.222         1          IFI6     NA #> VDAC3         0.06665008  3.6742886 0.318 0.139         1         VDAC3     NA #> SPON2         0.07526141  1.7237839 0.273 0.111         1         SPON2     NA #> LGALS2        0.08238383  1.4537375 0.341 0.167         1        LGALS2     NA #> RPL7L1        0.08259804 -2.5594238 0.091 0.222         1        RPL7L1     NA #> TAF7          0.08349570  1.5772505 0.341 0.167         1          TAF7     NA #> FCGR3A        0.08436567  1.1275295 0.432 0.250         1        FCGR3A     NA #> LGALS9        0.08733037  1.1241969 0.273 0.111         1        LGALS9     NA #> GZMB          0.08733037  1.1698448 0.273 0.111         1          GZMB     NA #> CLEC10A       0.09071524  1.6996524 0.182 0.056         1       CLEC10A     NA #> FCER1A        0.09397257  1.9329064 0.182 0.056         1        FCER1A     NA #> LRRC25        0.09529164  0.4200849 0.273 0.111         1        LRRC25     NA #> BANK1         0.09545145  2.0219200 0.136 0.028         1         BANK1     NA #> GSTP1         0.09628003  0.7713358 0.591 0.444         1         GSTP1     NA #> SIT1          0.09934503 -3.6034439 0.023 0.111         1          SIT1     NA #> ARHGDIA       0.10084609 -0.4601009 0.432 0.250         1       ARHGDIA     NA #> HLA-DMA       0.10813435  1.0195709 0.386 0.222         1       HLA-DMA     NA #> GRN           0.11667166  0.5547349 0.409 0.222         1           GRN     NA #> RUFY1         0.11768586 -0.9810894 0.091 0.222         1         RUFY1     NA #> MS4A7         0.12277557  0.5415504 0.227 0.083         1         MS4A7     NA #> IFI30         0.13211385  0.4138543 0.341 0.167         1         IFI30     NA #> RGS1          0.13634254  2.5506416 0.159 0.056         1          RGS1     NA #> THYN1         0.14336601  1.5281674 0.205 0.083         1         THYN1     NA #> PARVB         0.15081270 -1.4496990 0.068 0.167         1         PARVB     NA #> PCMT1         0.15207496  3.3593272 0.295 0.167         1         PCMT1     NA #> FCGRT         0.16468927  0.9702779 0.409 0.250         1         FCGRT     NA #> BID           0.17214063  1.1827776 0.386 0.222         1           BID     NA #> GNLY          0.17975936  1.3725474 0.295 0.167         1          GNLY     NA #> FCER1G        0.18735817  0.6490939 0.636 0.472         1        FCER1G     NA #> TAGAP         0.18771440 -0.4875612 0.114 0.222         1         TAGAP     NA #> BLVRA         0.19048552 -1.1214685 0.227 0.333         1         BLVRA     NA #> COTL1         0.19393336  0.4875465 0.750 0.583         1         COTL1     NA #> HLA-DQA1      0.21368858  0.9605902 0.386 0.250         1      HLA-DQA1     NA #> VPS28         0.21488446 -1.2334213 0.318 0.444         1         VPS28     NA #> GIMAP1        0.22134291  0.9678929 0.409 0.250         1        GIMAP1     NA #> PRF1          0.22555711  0.3097331 0.295 0.167         1          PRF1     NA #> SAFB2         0.23520876  2.4093824 0.091 0.028         1         SAFB2     NA #> EIF3G         0.23894997  0.7393618 0.591 0.417         1         EIF3G     NA #> NRBP1         0.24206600 -2.2937805 0.091 0.167         1         NRBP1     NA #> HLA-DQA2      0.24489452  0.6449536 0.250 0.139         1      HLA-DQA2     NA #> SCO2          0.24808905  0.8095112 0.182 0.083         1          SCO2     NA #> PTPN22        0.25724622 -2.1902685 0.045 0.111         1        PTPN22     NA #> PPP3CC        0.26106405  0.7908963 0.136 0.056         1        PPP3CC     NA #> ZNF76         0.26360996  1.2855973 0.091 0.028         1         ZNF76     NA #> CD1C          0.26360996  1.5571143 0.091 0.028         1          CD1C     NA #> WARS          0.26808657 -1.3804565 0.159 0.250         1          WARS     NA #> EPC1          0.27173354  0.8665448 0.205 0.111         1          EPC1     NA #> TCL1A         0.27307223 -1.8951067 0.068 0.139         1         TCL1A     NA #> CCDC104       0.27358239  0.9099128 0.091 0.028         1       CCDC104     NA #> GZMH          0.28136356  1.6970640 0.159 0.083         1          GZMH     NA #> HLA-DRA       0.28215715  0.2258141 0.727 0.639         1       HLA-DRA     NA #> RBP7          0.28966268 -1.1441332 0.068 0.139         1          RBP7     NA #> RGS2          0.29358016 -0.6789153 0.409 0.278         1          RGS2     NA #> MPHOSPH6      0.29667195  1.4082929 0.159 0.083         1      MPHOSPH6     NA #> TREML1        0.29820733 -1.3982890 0.068 0.139         1        TREML1     NA #> TCF7          0.30419782 -0.9406441 0.114 0.194         1          TCF7     NA #> PTCRA         0.30440015 -0.2643378 0.045 0.111         1         PTCRA     NA #> BLOC1S4       0.30851235 -1.2148305 0.091 0.167         1       BLOC1S4     NA #> CD9           0.30851235  0.1021292 0.091 0.167         1           CD9     NA #> TNFRSF1B      0.30987432  0.8275763 0.227 0.139         1      TNFRSF1B     NA #> TPM4          0.31495381  0.4273507 0.409 0.278         1          TPM4     NA #> LST1          0.32907845  0.1394113 0.500 0.361         1          LST1     NA #> FAM96A        0.33150327 -0.4500508 0.205 0.111         1        FAM96A     NA #> SERPINA1      0.33384685  0.8580429 0.341 0.250         1      SERPINA1     NA #> C12orf75      0.34229821 -0.5783239 0.114 0.194         1      C12orf75     NA #> HLA-DRB1      0.34667535  0.3435079 0.568 0.444         1      HLA-DRB1     NA #> HLA-DPA1      0.35432386  0.6422033 0.545 0.500         1      HLA-DPA1     NA #> CARD16        0.35475812  0.1396680 0.409 0.278         1        CARD16     NA #> HLA-DRB5      0.35956376  0.1505533 0.523 0.361         1      HLA-DRB5     NA #> ZFP36L1       0.36236507 -2.0075334 0.136 0.194         1       ZFP36L1     NA #> RHOC          0.36735744 -0.2360902 0.409 0.250         1          RHOC     NA #> CD247         0.37584672  0.4950876 0.250 0.167         1         CD247     NA #> CFP           0.38055093 -0.4032603 0.364 0.250         1           CFP     NA #> GZMM          0.38163435  0.7040406 0.273 0.194         1          GZMM     NA #> SAT1          0.38637069  0.1496136 0.773 0.639         1          SAT1     NA #> TALDO1        0.38799801 -1.4821323 0.500 0.500         1        TALDO1     NA #> YWHAB         0.40132815  0.3123683 0.523 0.528         1         YWHAB     NA #> FPR1          0.40338593 -1.3374693 0.136 0.194         1          FPR1     NA #> TNFAIP8       0.41017526 -0.6427122 0.250 0.306         1       TNFAIP8     NA #> TTC38         0.41239096  1.2736847 0.136 0.083         1         TTC38     NA #> HVCN1         0.41463077 -2.2939901 0.114 0.167         1         HVCN1     NA #> CCL5          0.41474716 -0.9043819 0.432 0.472         1          CCL5     NA #> LYZ           0.42215674  0.2979607 0.682 0.583         1           LYZ     NA #> VSTM1         0.42420482 -0.2914488 0.114 0.056         1         VSTM1     NA #> CD8A          0.42421612 -0.4965425 0.114 0.056         1          CD8A     NA #> LAMP1         0.42538075 -0.5861493 0.205 0.278         1         LAMP1     NA #> CD200         0.43621807 -2.5445648 0.023 0.056         1         CD200     NA #> CD19          0.44237088 -1.0048143 0.068 0.028         1          CD19     NA #> DLGAP1-AS1    0.44237088  0.5505892 0.068 0.028         1    DLGAP1-AS1     NA #> FCER2         0.45379221 -1.7096009 0.045 0.083         1         FCER2     NA #> FCRLA         0.45379221 -2.2473152 0.045 0.083         1         FCRLA     NA #> TMEM40        0.45934038 -1.4708196 0.068 0.111         1        TMEM40     NA #> ASGR1         0.46444068  1.3781397 0.136 0.083         1         ASGR1     NA #> MMADHC        0.46691934 -1.2601668 0.205 0.250         1        MMADHC     NA #> RP11-693J15.5 0.46780299 -1.9053842 0.045 0.083         1 RP11-693J15.5     NA #> IGLL5         0.47162751 -0.2402105 0.023 0.056         1         IGLL5     NA #> ANXA2         0.47261188  0.1269778 0.614 0.444         1         ANXA2     NA #> S1PR4         0.47993990  1.7654906 0.273 0.194         1         S1PR4     NA #> MYL9          0.48363363 -0.9581845 0.068 0.111         1          MYL9     NA #> COPS6         0.49620744 -0.8663350 0.273 0.194         1         COPS6     NA #> FCN1          0.49830814 -0.5499683 0.386 0.417         1          FCN1     NA #> CD68          0.49979451  0.4068668 0.295 0.222         1          CD68     NA #> SP100         0.50025570 -0.5112157 0.295 0.194         1         SP100     NA #> CD79A         0.50287239 -0.6183097 0.136 0.194         1         CD79A     NA #> GPX1          0.51192812 -0.6122229 0.682 0.639         1          GPX1     NA #> CCR7          0.51836193  1.9506907 0.091 0.056         1          CCR7     NA #> ADAR          0.52877864 -0.1155165 0.182 0.222         1          ADAR     NA #> ACRBP         0.53424169  0.8715893 0.068 0.111         1         ACRBP     NA #> FGFBP2        0.53811724  1.3991481 0.250 0.222         1        FGFBP2     NA #> TYROBP        0.54258037  0.1047340 0.636 0.500         1        TYROBP     NA #> GP9           0.54308166 -0.2629969 0.091 0.139         1           GP9     NA #> ODC1          0.54704146 -0.8462178 0.182 0.222         1          ODC1     NA #> MS4A1         0.54893336 -1.7447339 0.136 0.167         1         MS4A1     NA #> KLRD1         0.55544738  0.5675050 0.159 0.111         1         KLRD1     NA #> LY86          0.56056635  0.1599974 0.250 0.194         1          LY86     NA #> NFKBIA        0.56488054  0.6054230 0.591 0.472         1        NFKBIA     NA #> NKG7          0.56823957  0.2819263 0.477 0.389         1          NKG7     NA #> DNAJB1        0.57140408 -0.2655006 0.227 0.278         1        DNAJB1     NA #> LCK           0.57352870  0.3533948 0.318 0.250         1           LCK     NA #> MPEG1         0.57892640 -0.7608735 0.205 0.139         1         MPEG1     NA #> SMCO4         0.58895599 -0.3460177 0.205 0.139         1         SMCO4     NA #> IL1B          0.60418281  1.0822189 0.205 0.167         1          IL1B     NA #> AIF1          0.60882656  0.1259509 0.545 0.444         1          AIF1     NA #> HNRNPA3       0.60921704 -0.1623689 0.409 0.306         1       HNRNPA3     NA #> AKR1C3        0.61597272  0.9619857 0.114 0.083         1        AKR1C3     NA #> CD14          0.61951529 -1.2948842 0.159 0.194         1          CD14     NA #> CD3E          0.62522103  0.4977330 0.341 0.278         1          CD3E     NA #> GNG11         0.63742523 -1.1347009 0.114 0.139         1         GNG11     NA #> CLIC3         0.64234460  0.9081385 0.114 0.083         1         CLIC3     NA #> CLU           0.64949087 -0.9996102 0.114 0.139         1           CLU     NA #> CTSW          0.65028217 -0.3922628 0.341 0.250         1          CTSW     NA #> STX10         0.65074656 -0.7783398 0.159 0.194         1         STX10     NA #> GZMK          0.66243894 -1.7574529 0.091 0.111         1          GZMK     NA #> IL7R          0.66674361  0.2082191 0.341 0.333         1          IL7R     NA #> PTGDR         0.66918992 -2.7669811 0.114 0.083         1         PTGDR     NA #> S100B         0.67009042  4.1497946 0.045 0.028         1         S100B     NA #> LILRA3        0.67596773 -1.9791945 0.091 0.111         1        LILRA3     NA #> DNAJC2        0.67885156 -0.1544783 0.182 0.139         1        DNAJC2     NA #> GYPC          0.68005668 -0.8651684 0.250 0.278         1          GYPC     NA #> MYO1G         0.68065858  0.6695113 0.409 0.333         1         MYO1G     NA #> IL2RB         0.68277191  0.2945914 0.114 0.083         1         IL2RB     NA #> PPP1R18       0.68939101  0.3244785 0.318 0.278         1       PPP1R18     NA #> NT5C          0.70343211 -1.2694963 0.227 0.167         1          NT5C     NA #> S100A11       0.70479142  0.1499056 0.591 0.528         1       S100A11     NA #> XBP1          0.71198923  0.1016697 0.318 0.250         1          XBP1     NA #> TMEM204       0.71342360  0.4482229 0.045 0.028         1       TMEM204     NA #> S100A8        0.71501151 -1.2624184 0.409 0.306         1        S100A8     NA #> NCOA4         0.73091444 -0.8719660 0.250 0.194         1         NCOA4     NA #> PGRMC1        0.73809476 -0.4498943 0.114 0.083         1        PGRMC1     NA #> CTSB          0.73923287 -0.6614962 0.318 0.250         1          CTSB     NA #> IGFBP7        0.75069884 -0.5043795 0.205 0.222         1        IGFBP7     NA #> CD79B         0.76680522 -1.2150744 0.295 0.278         1         CD79B     NA #> SATB1         0.76687418 -3.0600459 0.068 0.083         1         SATB1     NA #> RP11-290F20.3 0.76832326  0.1220792 0.136 0.111         1 RP11-290F20.3     NA #> HLA-DMB       0.77306125 -0.3343191 0.341 0.278         1       HLA-DMB     NA #> CD2           0.77334050  0.5941658 0.159 0.139         1           CD2     NA #> PIK3IP1       0.77930880  1.4533085 0.159 0.139         1       PIK3IP1     NA #> GZMA          0.78049937 -0.1186839 0.227 0.250         1          GZMA     NA #> PMPCB         0.78121854  0.1265535 0.136 0.111         1         PMPCB     NA #> KIAA0125      0.80780244 -1.8552812 0.045 0.056         1      KIAA0125     NA #> CYB561A3      0.80780244 -1.8289438 0.045 0.056         1      CYB561A3     NA #> CD180         0.80780244 -1.5002871 0.045 0.056         1         CD180     NA #> HNRNPH1       0.82024117 -0.2902894 0.136 0.111         1       HNRNPH1     NA #> IL32          0.82066860 -0.5310219 0.295 0.306         1          IL32     NA #> ASNSD1        0.82403692 -0.2054350 0.068 0.083         1        ASNSD1     NA #> MAL           0.83229313  0.2357011 0.068 0.083         1           MAL     NA #> LINC00926     0.84467238 -0.3201780 0.068 0.056         1     LINC00926     NA #> PPBP          0.85072316 -0.8161701 0.159 0.167         1          PPBP     NA #> HNRNPF        0.85270253 -0.1318392 0.432 0.361         1        HNRNPF     NA #> IL17RA        0.86275280 -1.1075541 0.068 0.056         1        IL17RA     NA #> SRSF7         0.87608406 -1.5599110 0.500 0.472         1         SRSF7     NA #> POP7          0.87628706  1.5192430 0.159 0.139         1          POP7     NA #> PPAPDC1B      0.88090539 -0.8740292 0.068 0.056         1      PPAPDC1B     NA #> NRGN          0.88965687  0.1178269 0.182 0.167         1          NRGN     NA #> XCL2          0.89794707  0.3356016 0.091 0.083         1          XCL2     NA #> CFD           0.90550039 -0.4594260 0.273 0.250         1           CFD     NA #> ITGA2B        0.90877741 -1.4419882 0.114 0.111         1        ITGA2B     NA #> LDHB          0.90895712 -0.1769172 0.523 0.444         1          LDHB     NA #> SDPR          0.91637557 -0.7586314 0.136 0.139         1          SDPR     NA #> EIF4A2        0.92216620 -0.1168652 0.523 0.500         1        EIF4A2     NA #> SPARC         0.92920397 -0.6536246 0.136 0.139         1         SPARC     NA #> S100A9        0.93413505 -0.7924142 0.386 0.389         1        S100A9     NA #> EAF2          0.93677400 -2.6687209 0.114 0.111         1          EAF2     NA #> KHDRBS1       0.94760219 -2.8736243 0.182 0.167         1       KHDRBS1     NA #> C5AR1         0.95034695 -0.9861914 0.159 0.139         1         C5AR1     NA #> HLA-DPB1      0.95531585  0.2193854 0.523 0.556         1      HLA-DPB1     NA #> TYMP          0.95715084 -0.1454613 0.432 0.417         1          TYMP     NA #> CRBN          0.95942509 -0.8320513 0.273 0.222         1          CRBN     NA #> CTSS          0.96412214  0.1540970 0.591 0.611         1          CTSS     NA #> KLRG1         0.96484898 -0.3207581 0.114 0.111         1         KLRG1     NA #> MS4A6A        0.98895497 -0.5252983 0.205 0.194         1        MS4A6A     NA #> NGFRAP1       0.99296761 -0.6881485 0.114 0.111         1       NGFRAP1     NA #> CA2           0.99296761  0.8072664 0.114 0.111         1           CA2     NA #> CD3D          0.99517096 -0.5121695 0.295 0.278         1          CD3D     NA #> RARRES3       0.99556237  0.1837819 0.364 0.389         1       RARRES3     NA #>               diff_pct #> NOSIP            0.261 #> LYAR            -0.230 #> SNHG7            0.212 #> TMUB1            0.154 #> ZNF330           0.114 #> FUOM             0.114 #> CCL4             0.149 #> LINC00936        0.219 #> TSPO             0.298 #> IFI6             0.210 #> VDAC3            0.179 #> SPON2            0.162 #> LGALS2           0.174 #> RPL7L1          -0.131 #> TAF7             0.174 #> FCGR3A           0.182 #> LGALS9           0.162 #> GZMB             0.162 #> CLEC10A          0.126 #> FCER1A           0.126 #> LRRC25           0.162 #> BANK1            0.108 #> GSTP1            0.147 #> SIT1            -0.088 #> ARHGDIA          0.182 #> HLA-DMA          0.164 #> GRN              0.187 #> RUFY1           -0.131 #> MS4A7            0.144 #> IFI30            0.174 #> RGS1             0.103 #> THYN1            0.122 #> PARVB           -0.099 #> PCMT1            0.128 #> FCGRT            0.159 #> BID              0.164 #> GNLY             0.128 #> FCER1G           0.164 #> TAGAP           -0.108 #> BLVRA           -0.106 #> COTL1            0.167 #> HLA-DQA1         0.136 #> VPS28           -0.126 #> GIMAP1           0.159 #> PRF1             0.128 #> SAFB2            0.063 #> EIF3G            0.174 #> NRBP1           -0.076 #> HLA-DQA2         0.111 #> SCO2             0.099 #> PTPN22          -0.066 #> PPP3CC           0.080 #> ZNF76            0.063 #> CD1C             0.063 #> WARS            -0.091 #> EPC1             0.094 #> TCL1A           -0.071 #> CCDC104          0.063 #> GZMH             0.076 #> HLA-DRA          0.088 #> RBP7            -0.071 #> RGS2             0.131 #> MPHOSPH6         0.076 #> TREML1          -0.071 #> TCF7            -0.080 #> PTCRA           -0.066 #> BLOC1S4         -0.076 #> CD9             -0.076 #> TNFRSF1B         0.088 #> TPM4             0.131 #> LST1             0.139 #> FAM96A           0.094 #> SERPINA1         0.091 #> C12orf75        -0.080 #> HLA-DRB1         0.124 #> HLA-DPA1         0.045 #> CARD16           0.131 #> HLA-DRB5         0.162 #> ZFP36L1         -0.058 #> RHOC             0.159 #> CD247            0.083 #> CFP              0.114 #> GZMM             0.079 #> SAT1             0.134 #> TALDO1           0.000 #> YWHAB           -0.005 #> FPR1            -0.058 #> TNFAIP8         -0.056 #> TTC38            0.053 #> HVCN1           -0.053 #> CCL5            -0.040 #> LYZ              0.099 #> VSTM1            0.058 #> CD8A             0.058 #> LAMP1           -0.073 #> CD200           -0.033 #> CD19             0.040 #> DLGAP1-AS1       0.040 #> FCER2           -0.038 #> FCRLA           -0.038 #> TMEM40          -0.043 #> ASGR1            0.053 #> MMADHC          -0.045 #> RP11-693J15.5   -0.038 #> IGLL5           -0.033 #> ANXA2            0.170 #> S1PR4            0.079 #> MYL9            -0.043 #> COPS6            0.079 #> FCN1            -0.031 #> CD68             0.073 #> SP100            0.101 #> CD79A           -0.058 #> GPX1             0.043 #> CCR7             0.035 #> ADAR            -0.040 #> ACRBP           -0.043 #> FGFBP2           0.028 #> TYROBP           0.136 #> GP9             -0.048 #> ODC1            -0.040 #> MS4A1           -0.031 #> KLRD1            0.048 #> LY86             0.056 #> NFKBIA           0.119 #> NKG7             0.088 #> DNAJB1          -0.051 #> LCK              0.068 #> MPEG1            0.066 #> SMCO4            0.066 #> IL1B             0.038 #> AIF1             0.101 #> HNRNPA3          0.103 #> AKR1C3           0.031 #> CD14            -0.035 #> CD3E             0.063 #> GNG11           -0.025 #> CLIC3            0.031 #> CLU             -0.025 #> CTSW             0.091 #> STX10           -0.035 #> GZMK            -0.020 #> IL7R             0.008 #> PTGDR            0.031 #> S100B            0.017 #> LILRA3          -0.020 #> DNAJC2           0.043 #> GYPC            -0.028 #> MYO1G            0.076 #> IL2RB            0.031 #> PPP1R18          0.040 #> NT5C             0.060 #> S100A11          0.063 #> XBP1             0.068 #> TMEM204          0.017 #> S100A8           0.103 #> NCOA4            0.056 #> PGRMC1           0.031 #> CTSB             0.068 #> IGFBP7          -0.017 #> CD79B            0.017 #> SATB1           -0.015 #> RP11-290F20.3    0.025 #> HLA-DMB          0.063 #> CD2              0.020 #> PIK3IP1          0.020 #> GZMA            -0.023 #> PMPCB            0.025 #> KIAA0125        -0.011 #> CYB561A3        -0.011 #> CD180           -0.011 #> HNRNPH1          0.025 #> IL32            -0.011 #> ASNSD1          -0.015 #> MAL             -0.015 #> LINC00926        0.012 #> PPBP            -0.008 #> HNRNPF           0.071 #> IL17RA           0.012 #> SRSF7            0.028 #> POP7             0.020 #> PPAPDC1B         0.012 #> NRGN             0.015 #> XCL2             0.008 #> CFD              0.023 #> ITGA2B           0.003 #> LDHB             0.079 #> SDPR            -0.003 #> EIF4A2           0.023 #> SPARC           -0.003 #> S100A9          -0.003 #> EAF2             0.003 #> KHDRBS1          0.015 #> C5AR1            0.020 #> HLA-DPB1        -0.033 #> TYMP             0.015 #> CRBN             0.051 #> CTSS            -0.020 #> KLRG1            0.003 #> MS4A6A           0.011 #> NGFRAP1          0.003 #> CA2              0.003 #> CD3D             0.017 #> RARRES3         -0.025"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDoubletDetection.html","id":null,"dir":"Reference","previous_headings":"","what":"Run doublet detection on a Seurat object — RunSeuratDoubletDetection","title":"Run doublet detection on a Seurat object — RunSeuratDoubletDetection","text":"Run doublet detection Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDoubletDetection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run doublet detection on a Seurat object — RunSeuratDoubletDetection","text":"","code":"RunSeuratDoubletDetection(   object,   tool = \"DoubletFinder\",   DoubletFinderArgs = list(),   scDblFinderArgs = list(),   filter = TRUE,   log = NULL,   cache = NULL )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDoubletDetection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run doublet detection on a Seurat object — RunSeuratDoubletDetection","text":"object Seurat object tool Doublet detection tool. Either \"DoubletFinder\" \"scDblFinder\" DoubletFinderArgs Arguments pass RunSeuratDoubletFinder scDblFinderArgs Arguments pass RunSeuratScDblFinder filter Whether filter doublets. Default TRUE. want visualize singlets doublets, set FALSE doublets filtered . need filter manually. example: object <- subset(object, subset = DoubletFinder_DropletType != \"doublet\") log Logger cache Directory cache results. Set FALSE disable caching","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDoubletDetection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run doublet detection on a Seurat object — RunSeuratDoubletDetection","text":"Seurat object doublet detection results @misc$doublets","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDoubletFinder.html","id":null,"dir":"Reference","previous_headings":"","what":"Run DoubletFinder on a Seurat object — RunSeuratDoubletFinder","title":"Run DoubletFinder on a Seurat object — RunSeuratDoubletFinder","text":"Run DoubletFinder Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDoubletFinder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run DoubletFinder on a Seurat object — RunSeuratDoubletFinder","text":"","code":"RunSeuratDoubletFinder(   object,   ncores = 1,   PCs = 30,   pN = 0.25,   doublets = 0.075,   log = NULL,   allow_warnings = FALSE )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDoubletFinder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run DoubletFinder on a Seurat object — RunSeuratDoubletFinder","text":"object Seurat object ncores Number cores use PCs Number statistically-significant principal components pN number generated artificial doublets, expressed proportion merged real-artificial data. Default set 0.25, based observation DoubletFinder performance largely pN-invariant (see McGinnis, Murrow Gartner 2019, Cell Systems). doublets expected proportion doublets dataset. Default set 0.075","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDoubletFinder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run DoubletFinder on a Seurat object — RunSeuratDoubletFinder","text":"Seurat object doublet detection results @misc$doubletFinder","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratIntegration.html","id":null,"dir":"Reference","previous_headings":"","what":"Run data integration on Seurat object — RunSeuratIntegration","title":"Run data integration on Seurat object — RunSeuratIntegration","text":"Run data integration Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratIntegration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run data integration on Seurat object — RunSeuratIntegration","text":"","code":"RunSeuratIntegration(   object,   no_integration = FALSE,   IntegrateLayersArgs = list(),   log = NULL,   cache = NULL )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratIntegration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run data integration on Seurat object — RunSeuratIntegration","text":"object Seurat object no_integration Whether skip integration, just join layers IntegrateLayersArgs Arguments pass Seurat::IntegrateLayers log Logger cache Directory cache results. Set FALSE disable caching","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratIntegration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run data integration on Seurat object — RunSeuratIntegration","text":"Seurat object integrated data","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratScDblFinder.html","id":null,"dir":"Reference","previous_headings":"","what":"Run SCDblFinder on a Seurat object — RunSeuratScDblFinder","title":"Run SCDblFinder on a Seurat object — RunSeuratScDblFinder","text":"Run SCDblFinder Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratScDblFinder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run SCDblFinder on a Seurat object — RunSeuratScDblFinder","text":"","code":"RunSeuratScDblFinder(object, ncores = 1, ...)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratScDblFinder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run SCDblFinder on a Seurat object — RunSeuratScDblFinder","text":"object Seurat object ncores Number cores use ... Additional arguments pass scDblFinder::scDblFinder","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratScDblFinder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run SCDblFinder on a Seurat object — RunSeuratScDblFinder","text":"Seurat object doublet detection results @misc$scDblFinder","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratTransformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Run transformations on a Seurat object — RunSeuratTransformation","title":"Run transformations on a Seurat object — RunSeuratTransformation","text":"Run transformations Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratTransformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run transformations on a Seurat object — RunSeuratTransformation","text":"","code":"RunSeuratTransformation(   object,   use_sct = FALSE,   SCTransformArgs = list(),   NormalizeDataArgs = list(),   FindVariableFeaturesArgs = list(),   ScaleDataArgs = list(),   RunPCAArgs = list(),   log = NULL,   cache = NULL )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratTransformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run transformations on a Seurat object — RunSeuratTransformation","text":"object Seurat object use_sct Whether use Seurat::SCTransform SCTransformArgs Arguments pass Seurat::SCTransform NormalizeDataArgs Arguments pass Seurat::NormalizeData FindVariableFeaturesArgs Arguments pass Seurat::FindVariableFeatures ScaleDataArgs Arguments pass Seurat::ScaleData RunPCAArgs Arguments pass Seurat::RunPCA log Logger cache Directory cache results. Set FALSE disable caching","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratTransformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run transformations on a Seurat object — RunSeuratTransformation","text":"transformed Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratTransformation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run transformations on a Seurat object — RunSeuratTransformation","text":"","code":"# \\donttest{ RunSeuratTransformation(SeuratObject::pbmc_small) #> INFO    [2024-12-31 20:49:58] Performing data transformation and scaling ... #> INFO    [2024-12-31 20:49:58] - Running NormalizeData ... #> INFO    [2024-12-31 20:49:59] - Running FindVariableFeatures ... #> INFO    [2024-12-31 20:50:00] - Running ScaleData ... #> Centering and scaling data matrix #> INFO    [2024-12-31 20:50:00] - Running RunPCA ... #> Warning: You're computing too large a percentage of total singular values, use a standard svd instead. #> PC_ 1  #> Positive:  TYMP, LST1, AIF1, CST3, IFITM3, LYZ, FCGRT, GRN, BID, SERPINA1  #> \t   S100A11, IFI30, CFP, S100A8, S100A9, HLA-DPA1, HLA-DPB1, HLA-DRB1, FCER1G, HCK  #> \t   CTSS, FCN1, CFD, RNF130, TYROBP, HLA-DRB5, LINC00936, SMCO4, HLA-DRA, LGALS1  #> Negative:  CCL5, LCK, CTSW, GZMA, GZMM, CST7, CD7, PRF1, CD3D, RARRES3  #> \t   IL32, CD3E, CD247, FGFBP2, GNLY, LAMP1, GP9, NKG7, GZMH, NGFRAP1  #> \t   TUBB1, GZMB, PF4, GNG11, KLRG1, HIST1H2AC, XBP1, CLU, PGRMC1, GYPC  #> PC_ 2  #> Positive:  GNG11, CLU, SDPR, SPARC, GP9, PF4, HIST1H2AC, PPBP, CD9, ITGA2B  #> \t   CA2, NRGN, TUBB1, TREML1, TMEM40, NGFRAP1, MYL9, PTCRA, PGRMC1, NCOA4  #> \t   RUFY1, ODC1, TSC22D1, ACRBP, GPX1, TPM4, PARVB, FERMT3, TALDO1, SAT1  #> Negative:  IFITM2, NKG7, CST7, CTSW, GZMA, GZMM, LCK, CD7, GNLY, FGFBP2  #> \t   SSR2, XBP1, GZMB, IL32, PRF1, CD247, EIF4A2, HNRNPA3, SRSF7, SPON2  #> \t   CD3D, GZMH, HNRNPF, KLRD1, CCL4, LAMP1, YWHAB, GIMAP1, EIF3G, GYPC  #> PC_ 3  #> Positive:  MS4A1, CD79A, TCL1A, CD79B, LTB, FCER2, HLA-DQB1, HVCN1, PPAPDC1B, CYB561A3  #> \t   CD180, HLA-DMB, FCRLA, LINC00926, KIAA0125, RP11-693J15.5, CXCR4, CD19, LY86, CD200  #> \t   IGLL5, NCF1, SP100, HLA-DRB5, SNHG7, HLA-DQA1, NT5C, HLA-DRB1, HLA-DRA, BANK1  #> Negative:  LGALS1, FCER1G, TYROBP, GZMB, PRF1, GNLY, CCL4, CCL5, FCGR3A, AKR1C3  #> \t   GZMA, FGFBP2, KLRD1, PSAP, GZMH, TTC38, IGFBP7, NKG7, C12orf75, CST7  #> \t   SPON2, RHOC, GZMM, CD247, PCMT1, LAMP1, CTSW, PTGDR, SAT1, GSTP1  #> PC_ 4  #> Positive:  FGFBP2, AKR1C3, GZMB, CCL4, MS4A1, CLIC3, HLA-DRB1, TTC38, CD79A, NT5C  #> \t   TCL1A, IL2RB, GNLY, KLRD1, GZMH, HLA-DMB, PRF1, CTSW, HLA-DPA1, NKG7  #> \t   HLA-DPB1, ARHGDIA, HLA-DQB1, IGFBP7, CST7, C12orf75, XCL2, LY86, CD79B, PTGDR  #> Negative:  CD3D, MAL, SAFB2, IL7R, MPHOSPH6, THYN1, ASNSD1, TAGAP, LDHB, CD2  #> \t   NOSIP, TMEM204, DNAJB1, CCR7, CCDC104, ACAP1, TAF7, TMUB1, LTB, CD3E  #> \t   TMEM123, PIK3IP1, IL32, ACSM3, SRSF7, EPC1, EIF4A2, GYPC, TNFAIP8, BLOC1S4  #> PC_ 5  #> Positive:  FCGR3A, LILRA3, C5AR1, RP11-290F20.3, CD79B, TNFRSF1B, SMCO4, CFD, CD68, CTSS  #> \t   ADAR, VSTM1, EPC1, HVCN1, RHOC, FCN1, SERPINA1, MPHOSPH6, MS4A7, NCF1  #> \t   CLIC3, RBP7, WARS, FAM96A, STX10, FPR1, SCO2, AKR1C3, CD200, BLOC1S4  #> Negative:  FCER1A, CLEC10A, RGS1, CD1C, LGALS2, IL1B, HLA-DMA, HLA-DQA2, FUOM, ZNF330  #> \t   HLA-DQA1, MMADHC, RNF130, MS4A6A, POP7, HNRNPH1, RPL7L1, GPX1, ZFP36L1, LINC00936  #> \t   HLA-DMB, LY86, SRSF7, HSP90AA1, GSTP1, SSR2, SATB1, GZMK, CCL5, HLA-DQB1  #> Warning: Number of dimensions changing from 19 to 50 #> # A Seurat-tibble abstraction: 80 × 15 #> # Features=230 | Cells=80 | Active assay=RNA | Assays=RNA #>    .cell orig.ident nCount_RNA nFeature_RNA RNA_snn_res.0.8 letter.idents groups #>    <chr> <fct>           <dbl>        <int> <fct>           <fct>         <chr>  #>  1 ATGC… SeuratPro…         70           47 0               A             g2     #>  2 CATG… SeuratPro…         85           52 0               A             g1     #>  3 GAAC… SeuratPro…         87           50 1               B             g2     #>  4 TGAC… SeuratPro…        127           56 0               A             g2     #>  5 AGTC… SeuratPro…        173           53 0               A             g2     #>  6 TCTG… SeuratPro…         70           48 0               A             g1     #>  7 TGGT… SeuratPro…         64           36 0               A             g1     #>  8 GCAG… SeuratPro…         72           45 0               A             g1     #>  9 GATA… SeuratPro…         52           36 0               A             g1     #> 10 AATG… SeuratPro…        100           41 0               A             g1     #> # ℹ 70 more rows #> # ℹ 8 more variables: RNA_snn_res.1 <fct>, PC_1 <dbl>, PC_2 <dbl>, PC_3 <dbl>, #> #   PC_4 <dbl>, PC_5 <dbl>, tSNE_1 <dbl>, tSNE_2 <dbl> # }"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizDEGs.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize DEGs — VizDEGs","title":"Visualize DEGs — VizDEGs","text":"Visualize differentially expressed genes","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizDEGs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize DEGs — VizDEGs","text":"","code":"VizDEGs(   degs,   plot_type = c(\"volcano_pct\", \"volcano_log2fc\", \"violin\", \"box\", \"bar\", \"ridge\", \"dim\",     \"heatmap\", \"dot\"),   order_by = \"desc(abs(avg_log2FC))\",   genes = 10,   outprefix = NULL,   devpars = list(res = 100),   more_formats = c(),   save_code = FALSE,   show_row_names = TRUE,   show_column_names = TRUE,   ... )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizDEGs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize DEGs — VizDEGs","text":"degs DEGs RunSeuratDEAnalysis plot_type Type plot generate One 'volcano_pct', 'volcano_log2fc', 'violin', 'box', 'bar', 'ridge', 'dim', 'heatmap', 'dot' order_by expression string order genes genes Number genes genes visualize (based 'order_by' expression) expression string filter genes (passed dplyr::filter) works plot_type volcano plot outprefix Prefix output file devpars List parameters save plot more_formats Additional formats save plot addition 'png' save_code Whether save code reproduce plot show_row_names Whether show row names heatmap show_column_names Whether show column names heatmap ... Additional arguments pass plot function 'volcano_pct' 'volcano_log2fc', additional arguments pass 'scplotter::VolcanoPlot' 'violin', 'box', 'bar', 'ridge', 'dim', 'heatmap', 'dot', additional arguments pass 'scplotter::FeatureStatPlot'","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizDEGs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize DEGs — VizDEGs","text":"ggplot object 'outprefix' NULL, otherwise, save plot output directory","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizDEGs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize DEGs — VizDEGs","text":"","code":"# \\donttest{ degs <- suppressWarnings(RunSeuratDEAnalysis(SeuratObject::pbmc_small, \"groups\", \"g1\", \"g2\")) VizDEGs(degs, plot_type = \"volcano_pct\")  VizDEGs(degs, plot_type = \"volcano_log2fc\")  VizDEGs(degs, plot_type = \"violin\")  VizDEGs(degs, plot_type = \"box\")  VizDEGs(degs, plot_type = \"bar\")  VizDEGs(degs, plot_type = \"ridge\") #> Picking joint bandwidth of 0.598 #> Picking joint bandwidth of 0.474 #> Picking joint bandwidth of 0.698 #> Picking joint bandwidth of 0.747 #> Picking joint bandwidth of 0.605 #> Picking joint bandwidth of 0.371 #> Picking joint bandwidth of 0.557 #> Picking joint bandwidth of 0.493 #> Picking joint bandwidth of 0.778 #> Picking joint bandwidth of 0.532 #> Picking joint bandwidth of 0.598 #> Picking joint bandwidth of 0.474 #> Picking joint bandwidth of 0.698 #> Picking joint bandwidth of 0.747 #> Picking joint bandwidth of 0.605 #> Picking joint bandwidth of 0.371 #> Picking joint bandwidth of 0.557 #> Picking joint bandwidth of 0.493 #> Picking joint bandwidth of 0.778 #> Picking joint bandwidth of 0.532  VizDEGs(degs, plot_type = \"dim\")  # VizDEGs(degs, plot_type = \"heatmap\") # VizDEGs(degs, plot_type = \"dot\") # }"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizEnrich.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Enrichment — VizEnrich","title":"Visualize Enrichment — VizEnrich","text":"Visualize enrichment (-representation) analysis results","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizEnrich.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Enrichment — VizEnrich","text":"","code":"VizEnrich(   enrich,   outprefix = NULL,   devpars = list(res = 100),   more_formats = c(),   save_code = FALSE,   ... )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizEnrich.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Enrichment — VizEnrich","text":"enrich Enrichment object RunEnrichment outprefix Prefix output file devpars List parameters save plot more_formats Additional formats save plot addition 'png' save_code Whether save code reproduce plot ... Additional arguments pass plot function scplotter::EnrichmentPlot","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizEnrich.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Enrichment — VizEnrich","text":"ggplot object 'outprefix' NULL, otherwise, save plot output directory","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizEnrich.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Enrichment — VizEnrich","text":"","code":"# \\donttest{ degs <- suppressWarnings(RunSeuratDEAnalysis(SeuratObject::pbmc_small, \"groups\", \"g1\", \"g2\")) enrich <- RunEnrichment(degs, deg = \"abs(avg_log2FC) > 1\") #> Connection changed to https://maayanlab.cloud/Enrichr/ #> Connection is Live! #> Uploading data to Enrichr... Uploading data to Enrichr...  #> Error in f(init, x[[i]]): is.request(y) is not TRUE VizEnrich(enrich) #> Error: object 'enrich' not found VizEnrich(enrich, plot_type = \"dot\") #> Error: object 'enrich' not found VizEnrich(enrich, plot_type = \"lollipop\") #> Error: object 'enrich' not found VizEnrich(enrich, plot_type = \"network\") #> Error: object 'enrich' not found # VizEnrich(enrich, plot_type = \"enrichmap\") # VizEnrich(enrich, plot_type = \"wordcloud\") # }"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratCellQC.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Cell QC metrics of Seurat object — VizSeuratCellQC","title":"Visualize Cell QC metrics of Seurat object — VizSeuratCellQC","text":"Visualize Cell QC metrics Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratCellQC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Cell QC metrics of Seurat object — VizSeuratCellQC","text":"","code":"VizSeuratCellQC(   object,   features = c(\"nFeature_RNA\", \"nCount_RNA\", \"percent.mt\", \"percent.ribo\", \"percent.hb\",     \"percent.plat\"),   plot_type = c(\"violin\", \"box\", \"scatter\", \"ridge\"),   scatter_x = \"nCount_RNA\",   palette = \"Set2\",   ... )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratCellQC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Cell QC metrics of Seurat object — VizSeuratCellQC","text":"object Seurat object cell QC metrics features Features visualize plot_type Type plot generate One 'violin', 'box', 'scatter', 'ridge' scatter_x Feature use x-axis scatter plot. one features, removed features palette Color palette use ... Additional arguments pass plot function","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratCellQC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Cell QC metrics of Seurat object — VizSeuratCellQC","text":"plot","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratDoublets.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize detected doublets — VizSeuratDoublets","title":"Visualize detected doublets — VizSeuratDoublets","text":"Visualize detected doublets","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratDoublets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize detected doublets — VizSeuratDoublets","text":"","code":"VizSeuratDoublets(   object,   plot_type = c(\"dim\", \"pie\", \"pk\", \"pK\"),   palette = \"Set2\",   ... )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratDoublets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize detected doublets — VizSeuratDoublets","text":"object Seurat object detected doublets plot_type Type plot generate One 'dim', 'pie', 'pk', 'pK'. dim/pie show distribution doublets droplet type. pk/pK show relationship BC metric pK using DoubletFinder. palette Color palette use ... Additional arguments pass plot function 'dim',  additional arguments pass scplotter::CellDimPlot 'pie',  additional arguments pass plotthis::PieChart 'pk' 'pK', additional arguments pass plotthis::LinePlot","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratDoublets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize detected doublets — VizSeuratDoublets","text":"plot","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratGeneQC.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize gene QC metrics of Seurat object — VizSeuratGeneQC","title":"Visualize gene QC metrics of Seurat object — VizSeuratGeneQC","text":"Visualize gene QC metrics Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratGeneQC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize gene QC metrics of Seurat object — VizSeuratGeneQC","text":"","code":"VizSeuratGeneQC(object, max_features = 10, ...)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratGeneQC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize gene QC metrics of Seurat object — VizSeuratGeneQC","text":"object Seurat object gene QC metrics max_features Maximum number features visualize ... Additional arguments pass plot function plotthis::BarPlot","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratGeneQC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize gene QC metrics of Seurat object — VizSeuratGeneQC","text":"plot","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/bQuote.html","id":null,"dir":"Reference","previous_headings":"","what":"backtick quoting — bQuote","title":"backtick quoting — bQuote","text":"backtick quoting","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/bQuote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"backtick quoting — bQuote","text":"","code":"bQuote(x, force = FALSE)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/bQuote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"backtick quoting — bQuote","text":"x character vector force whether force backtick quoting","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/bQuote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"backtick quoting — bQuote","text":"backtick quoted character vector","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/bQuote.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"backtick quoting — bQuote","text":"","code":"bQuote(c(\"a\", \"b\", \"c\")) #> [1] \"a\" \"b\" \"c\" # [1] \"a\" \"b\" \"c\" bQuote(c(\"a 1\", \"b 2\", \"c 3\")) #> [1] \"`a 1`\" \"`b 2`\" \"`c 3`\" # [1] \"`a 1`\" \"`b 2`\" \"`c 3`\""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/case_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Create information for a casename — case_info","title":"Create information for a casename — case_info","text":"Create information casename","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/case_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create information for a casename — case_info","text":"","code":"case_info(name, outdir, is_dir = TRUE, create = FALSE)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/case_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create information for a casename — case_info","text":"name casename Sections separated :: casename section specified, case created section directory outdir output directory, case directory created prefix is_dir Whether create directory case Otherwise, prefix returned. create Create directory exists is_dir TRUE, otherwise, create parent directory prefix.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/case_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create information for a casename — case_info","text":"list information, including: name: name case, without sections section: sections case vector slug: slugified name section_slug: slugified sections prefix: prefix case, either directory file path prefix","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/do_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Call a function with a list of arguments — do_call","title":"Call a function with a list of arguments — do_call","text":"Different .call, faster version, especially big objects list.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/do_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call a function with a list of arguments — do_call","text":"","code":"do_call(fn, args, quote = FALSE, envir = parent.frame())"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/do_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call a function with a list of arguments — do_call","text":"fn function call args list arguments pass function quote Whether quote arguments envir environment evaluate function ","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/do_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call a function with a list of arguments — do_call","text":"result function call","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/expand_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand the cases with default values — expand_cases","title":"Expand the cases with default values — expand_cases","text":"Expand cases default values","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/expand_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand the cases with default values — expand_cases","text":"","code":"expand_cases(cases, defaults, post = NULL, default_case = \"DEFAULT\")"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/expand_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand the cases with default values — expand_cases","text":"cases list cases defaults list default values post function post-handling case, returning list name case. One can also return multiple cases based demand. cases returned finally merged. default_case name default case","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/expand_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand the cases with default values — expand_cases","text":"list expanded cases","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/extract_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract variables from a named list — extract_vars","title":"Extract variables from a named list — extract_vars","text":"Extract variables named list","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/extract_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract variables from a named list — extract_vars","text":"","code":"extract_vars(x, ..., keep = FALSE, env = parent.frame())"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/extract_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract variables from a named list — extract_vars","text":"x named list ... names variables named arguments allowed rename variables. b = \"\" extract assign b keep Keep extracted variables list env environment assign extracted variables","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/extract_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract variables from a named list — extract_vars","text":"list /ithout extracted variables","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/format_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Format the arguments for debugging — format_args","title":"Format the arguments for debugging — format_args","text":"Format arguments debugging","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/format_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format the arguments for debugging — format_args","text":"","code":"format_args(args)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/format_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format the arguments for debugging — format_args","text":"args arguments format","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/format_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format the arguments for debugging — format_args","text":"formatted arguments","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/gene_name_conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert gene names between different formats — gene_name_conversion","title":"Convert gene names between different formats — gene_name_conversion","text":"Convert gene names different formats","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/gene_name_conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert gene names between different formats — gene_name_conversion","text":"","code":"gene_name_conversion(   genes,   infmt,   outfmt,   dup = \"first\",   species = \"human\",   notfound = \"na\",   suppress_messages = TRUE )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/gene_name_conversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert gene names between different formats — gene_name_conversion","text":"genes character/integer vector gene names/ids infmt character vector input gene name formats See available scopes https://docs.mygene.info/en/latest/doc/data.html#available-fields can use ensg shortcut ensembl.gene outfmt character vector output gene name formats dup deal duplicate gene names found. \"first\": keep first one (default), sorted score descendingly \"last\": keep last one, sorted score descendingly \"\": keep , separate row \"<X>\": combine single string, separated X species character vector species names notfound deal gene names found \"error\": stop error message \"use-query\": use query gene name converted gene name \"skip\": skip gene names found \"ignore\": \"skip\" \"na\"/\"NA\": use NA converted gene name (default) suppress_messages Whether suppress warning messages","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/gene_name_conversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert gene names between different formats — gene_name_conversion","text":"tibble query gene names converted gene names gene name found, converted name NA duplicate gene names found, one highest score kept","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_cached.html","id":null,"dir":"Reference","previous_headings":"","what":"Get signatures and cached data — get_cached","title":"Get signatures and cached data — get_cached","text":"Get signatures cached data","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_cached.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get signatures and cached data — get_cached","text":"","code":"get_cached(x, kind, cache_dir)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_cached.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get signatures and cached data — get_cached","text":"x object infer signature kind string indicating kind object Used part filename cached file cache_dir string indicating directory store cached files","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_cached.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get signatures and cached data — get_cached","text":"list containing signature, digested signature cached data","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_cached.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get signatures and cached data — get_cached","text":"function used get signature object cached data exists. signature used identify object cached data used avoid recomputing object.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup and return the logger — get_logger","title":"Setup and return the logger — get_logger","text":"Setup return logger","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup and return the logger — get_logger","text":"","code":"get_logger(   format =     \"{sprintf(\\\"%-7s\\\", level)} [{format(time, \\\"%Y-%m-%d %H:%M:%S\\\")}] {msg}\",   appender = \"stdout\",   level = \"INFO\" )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup and return the logger — get_logger","text":"format format log message. format passed logger::layout_glue_generator. default format generate log message like: INFO    [2021-01-01 00:00:00] Hello world appender appender use. Default \"stdout\" Either string logger appender object. string provided, converted corresponding logger appender object. example, \"stdout\" converted logger::appender_stdout level log level. Default \"INFO\" Either string logger level object. string provided, converted corresponding logger level object. example, \"INFO\" converted logger::INFO","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup and return the logger — get_logger","text":"list logging functions","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_reporter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a reporter object — get_reporter","title":"Get a reporter object — get_reporter","text":"shortcut create reporter object Reporter$new()","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_reporter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a reporter object — get_reporter","text":"","code":"get_reporter()"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_reporter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a reporter object — get_reporter","text":"reporter object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/gettempdir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the temporary directory, without suffix. It works like tempfile.gettempdir() in Python. — gettempdir","title":"Get the temporary directory, without suffix. It works like tempfile.gettempdir() in Python. — gettempdir","text":"Get temporary directory, without suffix. works like tempfile.gettempdir() Python.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/gettempdir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the temporary directory, without suffix. It works like tempfile.gettempdir() in Python. — gettempdir","text":"","code":"gettempdir()"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/gettempdir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the temporary directory, without suffix. It works like tempfile.gettempdir() in Python. — gettempdir","text":"temporary directory","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/html_escape.html","id":null,"dir":"Reference","previous_headings":"","what":"Escape HTML entities — html_escape","title":"Escape HTML entities — html_escape","text":"Escape HTML entities","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/html_escape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Escape HTML entities — html_escape","text":"","code":"html_escape(text)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/html_escape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Escape HTML entities — html_escape","text":"text Text escape","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/html_escape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Escape HTML entities — html_escape","text":"Escaped text","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the first list based on other lists — list_update","title":"Update the first list based on other lists — list_update","text":"Update first list based lists","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the first list based on other lists — list_update","text":"","code":"list_update(x, ..., depth = -1L)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the first list based on other lists — list_update","text":"x first list ... lists depth depth update, -1 means update ","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the first list based on other lists — list_update","text":"updated list","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_update2.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a list with another list — list_update2","title":"Update a list with another list — list_update2","text":"Update list another list","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_update2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a list with another list — list_update2","text":"","code":"list_update2(x, y, depth = -1L)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_update2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a list with another list — list_update2","text":"x list y list depth depth update, -1 means update ","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_update2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a list with another list — list_update2","text":"updated list","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-1.html","id":null,"dir":"Reference","previous_headings":"","what":"Get more_than, less_than, emerged or vanished entities from a data frame. — .size_compare","title":"Get more_than, less_than, emerged or vanished entities from a data frame. — .size_compare","text":"more_than: Select entities counts first group second group. less_than: Select entities less counts first group second group. emerged: Select entities counts first group second group. vanished: Select entities counts second group first group.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get more_than, less_than, emerged or vanished entities from a data frame. — .size_compare","text":"","code":".size_compare(   df,   group_by,   idents,   id,   fun,   compare = \".n\",   split_by = NULL,   order = \"desc(sum)\",   subset = NULL,   return_type = c(\"uids\", \"ids\", \"subdf\", \"df\", \"interdf\"),   include_zeros = FALSE )  more_than(   df = \".\",   group_by,   idents,   id,   subset = NULL,   split_by = NULL,   compare = \".n\",   return_type = c(\"uids\", \"ids\", \"subdf\", \"df\", \"interdf\"),   order = \"desc(sum)\",   include_zeros = FALSE )  less_than(   df = \".\",   group_by,   idents,   id,   subset = NULL,   split_by = NULL,   compare = \".n\",   return_type = c(\"uids\", \"ids\", \"subdf\", \"df\", \"interdf\"),   order = \"desc(sum)\",   include_zeros = FALSE )  emerged(   df = \".\",   group_by,   idents,   id,   subset = NULL,   split_by = NULL,   compare = \".n\",   return_type = c(\"uids\", \"ids\", \"subdf\", \"df\", \"interdf\"),   order = \"desc(sum)\",   include_zeros = FALSE )  vanished(   df = \".\",   group_by,   idents,   id,   subset = NULL,   split_by = NULL,   compare = \".n\",   return_type = c(\"uids\", \"ids\", \"subdf\", \"df\", \"interdf\"),   order = \"desc(sum)\",   include_zeros = FALSE )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get more_than, less_than, emerged or vanished entities from a data frame. — .size_compare","text":"df data frame group_by column name data frame group entities. quoted string bare variable, defines groups entities comparison. idents groups entities compare (values group_by column). Either length 1 (ident_1) length 2 (ident_1 ident_2). length 1, rest cells non-NA values group_by used ident_2. id column name data frame mark entities group. fun way compare groups. Either \"more_than\", \"less_than\", \"emerged\" \"vanished\". compare Either (numeric) column name (.e. Count) data frame compare groups, .n compare number (count) entities group. column name given, first value entities id used. make sure values group (id). split_by column name data frame split entities. comparison done split column. order expression order intermediate data frame returning final result. Default NULL. work subdf df. subset expression subset cells, passed dplyr::filter(). Default NULL (filtering). return_type type returned value. Default uids. one uids: return unique ids selected entities ids: return ids entities order df, non-selected ids NA subdf: return subset df selected entities df: return original df new logical column .selected mark selected entities interdf: return intermediate data frame id column, ident_1, ident_2, predicate, sum, diff split_by column provided. include_zeros Whether include zero entities group more_than less_than comparisons. Default FALSE. default, zero entities excluded, meaning entities must exist groups selected.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get more_than, less_than, emerged or vanished entities from a data frame. — .size_compare","text":"Depending return_type, function return different values. uids: vector unique ids selected entities ids: vector ids entities order df, non-selected ids NA subdf: subset df selected entities df: original df new logical column .selected mark selected entities interdf: intermediate data frame id column, ident_1, ident_2, predicate, sum, diff split_by column provided.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get more_than, less_than, emerged or vanished entities from a data frame. — .size_compare","text":"","code":"df <- data.frame(     id = c(\"A\", \"A\", \"A\", \"B\", \"B\", \"B\", \"C\", \"C\", \"D\", \"D\"),     group = c(\"G1\", \"G1\", \"G2\", \"G1\", \"G2\", \"G2\", \"G1\", \"G2\", \"G1\", \"G2\"),     count = rep(1, 10),     split = c(\"S1\", \"S2\", \"S1\", \"S1\", \"S2\", \"S1\", \"S1\", \"S2\", \"S1\", \"S2\") ) more_than(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = count,   return_type = \"uids\") #> character(0) more_than(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = \".n\",   return_type = \"uids\") #> [1] \"A\" more_than(df, group_by = group, split_by = split, idents = c(\"G1\", \"G2\"), id = id,   compare = count, return_type = \"ids\") #>  [1] NA NA NA NA NA NA NA NA NA NA more_than(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = count,   return_type = \"subdf\") #> [1] id    group count split #> <0 rows> (or 0-length row.names) more_than(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = count,   return_type = \"ids\") #>  [1] NA NA NA NA NA NA NA NA NA NA more_than(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = count,   return_type = \"interdf\") #> # A tibble: 4 × 6 #>   id    ident_1 ident_2 predicate   sum  diff #>   <chr>   <dbl>   <dbl> <lgl>     <dbl> <dbl> #> 1 A           1       1 FALSE         2     0 #> 2 B           1       1 FALSE         2     0 #> 3 C           1       1 FALSE         2     0 #> 4 D           1       1 FALSE         2     0 more_than(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = count,   return_type = \"df\") #>    id group count split .selected #> 1   A    G1     1    S1     FALSE #> 2   A    G1     1    S2     FALSE #> 3   A    G2     1    S1     FALSE #> 4   B    G1     1    S1     FALSE #> 5   B    G2     1    S2     FALSE #> 6   B    G2     1    S1     FALSE #> 7   C    G1     1    S1     FALSE #> 8   C    G2     1    S2     FALSE #> 9   D    G1     1    S1     FALSE #> 10  D    G2     1    S2     FALSE more_than(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id,   return_type = \"uids\", subset = id %in% c(\"A\", \"B\")) #> [1] \"A\" dplyr::mutate(df, selected = more_than(group_by = group, idents = c(\"G1\", \"G2\"),   id = id, compare = count, return_type = \"ids\")) #>    id group count split selected #> 1   A    G1     1    S1     <NA> #> 2   A    G1     1    S2     <NA> #> 3   A    G2     1    S1     <NA> #> 4   B    G1     1    S1     <NA> #> 5   B    G2     1    S2     <NA> #> 6   B    G2     1    S1     <NA> #> 7   C    G1     1    S1     <NA> #> 8   C    G2     1    S2     <NA> #> 9   D    G1     1    S1     <NA> #> 10  D    G2     1    S2     <NA> less_than(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = count,   return_type = \"uids\") #> character(0) emerged(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = count,   return_type = \"uids\", order = sum) #> character(0) vanished(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = count,   return_type = \"uids\") #> character(0)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-2.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paired entities from a data frame based on the other column — paired","title":"Get paired entities from a data frame based on the other column — paired","text":"Get paired entities data frame based column","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paired entities from a data frame based on the other column — paired","text":"","code":"paired(df = \".\", id, compare, idents = 2, uniq = TRUE)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paired entities from a data frame based on the other column — paired","text":"df data frame. id column name df ids returned final output compare column name df compare values id id. idents values compare compare. either integer vector. integer, number values compare must integer id regarded paired. vector, values compare must values idents id regarded paired. uniq Whether return unique ids . Default TRUE. FALSE, can mutate meta data frame returned ids. Non-paired ids NA.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paired entities from a data frame based on the other column — paired","text":"vector paired ids (id column)","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paired entities from a data frame based on the other column — paired","text":"","code":"df <- data.frame(     id = c(\"A\", \"A\", \"B\", \"B\", \"C\", \"C\", \"D\", \"D\"),     compare = c(1, 2, 1, 1, 1, 2, 1, 2) ) paired(df, id, compare, 2) #> [1] \"A\" \"B\" \"C\" \"D\" paired(df, id, compare, c(1, 2)) #> [1] \"A\" \"C\" \"D\" paired(df, id, compare, c(1, 2), uniq = FALSE) #> [1] \"A\" \"A\" NA  NA  \"C\" \"C\" \"D\" \"D\""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-3.html","id":null,"dir":"Reference","previous_headings":"","what":"Get top entities from a data frame based on the number of entities in each group — top","title":"Get top entities from a data frame based on the number of entities in each group — top","text":"Get top entities data frame based number entities group","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get top entities from a data frame based on the number of entities in each group — top","text":"","code":"top(   df = \".\",   id,   n = 10,   compare = \".n\",   subset = NULL,   with_ties = FALSE,   split_by = NULL,   return_type = c(\"uids\", \"ids\", \"subdf\", \"df\", \"interdf\") )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get top entities from a data frame based on the number of entities in each group — top","text":"df data frame. Use . function called dplyr pipe. id column name df groups. n number top entities return. n < 1, regarded percentage total number entities group (subsetting applied). Specify 0 return entities. compare column name df compare values group. either numeric column .n compare number entities group. column passed, values column must numeric group. checked. subset expression subset entities, passed dplyr::filter(). Default TRUE (filtering). with_ties Whether return entities size last entity top list. Default FALSE. split_by column name (without quotes) metadata split cells. return_type type returned value. Default uids. one uids: return unique ids selected entities ids: return ids entities order df, non-selected ids NA subdf: return subset df selected entities df: return original df new logical column .mark selected entities interdf: return intermediate data frame id column, <compare>, predicate split_by column provided.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get top entities from a data frame based on the number of entities in each group — top","text":"Depending return_type, function return different values.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get top entities from a data frame based on the number of entities in each group — top","text":"","code":"df <- data.frame(     id = c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"),     value = c(10, 20, 30, 40, 50, 60, 80, 80) ) top(df, id, n = 1, compare = value, with_ties = TRUE, return_type = \"uids\") #> [1] \"G\" \"H\" top(df, \"id\", n = 2, compare = \"value\", return_type = \"subdf\") #>   id value #> 1  G    80 #> 2  H    80 top(df, \"id\", n = 2, compare = \"value\", return_type = \"df\") #>   id value .selected #> 1  A    10     FALSE #> 2  B    20     FALSE #> 3  C    30     FALSE #> 4  D    40     FALSE #> 5  E    50     FALSE #> 6  F    60     FALSE #> 7  G    80      TRUE #> 8  H    80      TRUE top(df, \"id\", n = 2, compare = \"value\", return_type = \"interdf\") #>   id value predicate #> 1  A    10     FALSE #> 2  B    20     FALSE #> 3  C    30     FALSE #> 4  D    40     FALSE #> 5  E    50     FALSE #> 6  F    60     FALSE #> 7  G    80      TRUE #> 8  H    80      TRUE top(df, id, n = 0.25, compare = value, return_type = \"uids\") #> [1] \"G\" \"H\" top(df, id, n = 0, compare = value, return_type = \"uids\") #> [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\"  df <- data.frame(id = c(\"A\", \"A\", \"B\", \"B\", \"B\", \"C\", \"C\", \"C\", \"D\", \"D\", \"D\", \"D\")) top(df, id, n = 2, compare = \".n\", return_type = \"uids\", with_ties = TRUE) #> [1] \"B\" \"C\" \"D\" dplyr::mutate(df, selected = top(id = id, n = 2, compare = \".n\", return_type = \"ids\",   with_ties = TRUE)) #>    id selected #> 1   A     <NA> #> 2   A     <NA> #> 3   B        B #> 4   B        B #> 5   B        B #> 6   C        C #> 7   C        C #> 8   C        C #> 9   D        D #> 10  D        D #> 11  D        D #> 12  D        D"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/repr.html","id":null,"dir":"Reference","previous_headings":"","what":"The string representation of an object — repr","title":"The string representation of an object — repr","text":"string representation object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/repr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The string representation of an object — repr","text":"","code":"repr(x, newline = FALSE, ...)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/repr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The string representation of an object — repr","text":"x object newline Whether add newlines output element ... arguments passed .repr API.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/repr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The string representation of an object — repr","text":"string representation","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/repr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The string representation of an object — repr","text":"","code":"repr(1:10) #> [1] \"c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\" # [1] \"c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/run_command.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a command — run_command","title":"Run a command — run_command","text":"Run command","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/run_command.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a command — run_command","text":"","code":"run_command(   cmd,   fg = FALSE,   wait = TRUE,   print_command = cat,   stdout = \"\",   stderr = \"\",   ... )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/run_command.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a command — run_command","text":"cmd command run fg Whether run command foreground wait Whether wait command finish print_command handler print command stdout See base::system2 stderr See base::system2 ... Additional arguments pass system2","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/run_command.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a command — run_command","text":"output command stdout stderr TRUE, output returned character vector Otherwise, output returned integer exit code","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the plot into multiple formats — save_plot","title":"Save the plot into multiple formats — save_plot","text":"Save plot multiple formats","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the plot into multiple formats — save_plot","text":"","code":"save_plot(   plot,   prefix,   devpars = NULL,   bg = \"white\",   formats = c(\"png\", \"pdf\") )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the plot into multiple formats — save_plot","text":"plot plot object prefix prefix file ending . removed prefix. /path//file /path//file. valid save files /path//file.png, /path//file.pdf /path//file.<format> etc. devpars device parameters bg background color formats formats save","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_plotcode.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the plot code and data to reproduce the plot — save_plotcode","title":"Save the plot code and data to reproduce the plot — save_plotcode","text":"plot generated functions registered gglogger::register","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_plotcode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the plot code and data to reproduce the plot — save_plotcode","text":"","code":"save_plotcode(   plot,   prefix,   setup = NULL,   ...,   auto_data_setup = TRUE,   envir = parent.frame() )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_plotcode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the plot code and data to reproduce the plot — save_plotcode","text":"plot plot object prefix prefix file ending . removed prefix. /path//file /path//file. valid save files /path//file.code.zip. setup code setup environment plot generation ... names variables save environment auto_data_setup Whether automatically save variables environment envir environment save variables ","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_to_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Save an object to cache — save_to_cache","title":"Save an object to cache — save_to_cache","text":"Save object cache","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_to_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save an object to cache — save_to_cache","text":"","code":"save_to_cache(to_cache, kind, cache_dir)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_to_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save an object to cache — save_to_cache","text":"to_cache list cache, including signature, digested signature data kind string indicating kind object Used part filename cached file cache_dir string indicating directory store cached files","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/slugify.html","id":null,"dir":"Reference","previous_headings":"","what":"Slugify strings — slugify","title":"Slugify strings — slugify","text":"Slugify strings","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/slugify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slugify strings — slugify","text":"","code":"slugify(   x,   non_alphanum_replace = \"-\",   collapse_replace = TRUE,   tolower = FALSE )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/slugify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slugify strings — slugify","text":"x strings slugify non_alphanum_replace Replace non-alphanumeric characters collapse_replace Collapse consecutive non-alphanumeric character replacements tolower Convert lowercase","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/slugify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Slugify strings — slugify","text":"slugified strings","code":""}]
