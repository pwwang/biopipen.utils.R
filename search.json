[{"path":"https://pwwang.github.io/biopipen.utils.R/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 biopipen.utils authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Panwen Wang. Author, maintainer.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang P (2025). biopipen.utils: Common Utility Functions Biopipen. R package version 0.0.6.","code":"@Manual{,   title = {biopipen.utils: Common Utility Functions for Biopipen},   author = {Panwen Wang},   year = {2025},   note = {R package version 0.0.6}, }"},{"path":"https://pwwang.github.io/biopipen.utils.R/index.html","id":"biopipenutilsr","dir":"","previous_headings":"","what":"Common Utility Functions for Biopipen","title":"Common Utility Functions for Biopipen","text":"Common utility R functions biopipen processes.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Common Utility Functions for Biopipen","text":"","code":"devtools::install_github(\"pwwang/biopipen-utils.R\")"},{"path":"https://pwwang.github.io/biopipen.utils.R/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Common Utility Functions for Biopipen","text":"","code":"library(biopipen.utils)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/AddSeuratCommand.html","id":null,"dir":"Reference","previous_headings":"","what":"AddSeuratCommand — AddSeuratCommand","title":"AddSeuratCommand — AddSeuratCommand","text":"Add command Seurat object @commands slot","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/AddSeuratCommand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AddSeuratCommand — AddSeuratCommand","text":"","code":"AddSeuratCommand(   object,   name,   call.string = paste0(name, \"(object, ...)\"),   params = list(),   assay.used = NULL )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/AddSeuratCommand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AddSeuratCommand — AddSeuratCommand","text":"object Seurat object name Name command call.string Call string command params Parameters command assay.used Assay used command","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/AddSeuratCommand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AddSeuratCommand — AddSeuratCommand","text":"Seurat object command added","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/AddSeuratCommand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AddSeuratCommand — AddSeuratCommand","text":"","code":"object <- SeuratObject::pbmc_small names(object@commands) #>  [1] \"NormalizeData.RNA\"        \"ScaleData.RNA\"            #>  [3] \"RunPCA.RNA\"               \"BuildSNN.RNA.pca\"         #>  [5] \"FindClusters\"             \"RunTSNE.pca\"              #>  [7] \"JackStraw.RNA.pca\"        \"ScoreJackStraw.pca\"       #>  [9] \"ProjectDim.RNA.pca\"       \"FindVariableFeatures.RNA\"  object <- AddSeuratCommand(object, \"RunSeuratDEAnalysis\",  \"RunSeuratDEAnalysis(object, group.by = 'groups', ident.1 = 'g1', ident.2 = 'g2')\",  list(group.by = 'groups', ident.1 = 'g1', ident.2 = 'g2')) object@commands$RunSeuratDEAnalysis #> Command: RunSeuratDEAnalysis(object, group.by = 'groups', ident.1 = 'g1', ident.2 = 'g2') #> Time: 2025-01-21 02:51:24.943669 #> group.by : groups  #> ident.1 : g1  #> ident.2 : g2"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/LoadSeuratAndPerformQC.html","id":null,"dir":"Reference","previous_headings":"","what":"Load samples into a Seurat object — LoadSeuratAndPerformQC","title":"Load samples into a Seurat object — LoadSeuratAndPerformQC","text":"Cell QC performed, either per-sample whole object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/LoadSeuratAndPerformQC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load samples into a Seurat object — LoadSeuratAndPerformQC","text":"","code":"LoadSeuratAndPerformQC(   meta,   samples = NULL,   per_sample_qc = FALSE,   cell_qc = NULL,   gene_qc = NULL,   tmpdir = NULL,   log = NULL,   cache = NULL )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/LoadSeuratAndPerformQC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load samples into a Seurat object — LoadSeuratAndPerformQC","text":"meta Metadata samples Required columns: Sample, RNAData. RNAData column contain path 10X data, either directory file path directory, function look barcodes.tsv.gz, features.tsv.gz matrix.mtx.gz. directory loaded Seurat::Read10X. Sometimes, may prefix file names, e.g. \"'prefix'.barcodes.tsv.gz\", also supported. path file, h5 file can loaded Seurat::Read10X_h5 samples Samples load. NULL, samples loaded per_sample_qc Whether perform per-sample cell QC cell_qc Cell QC criteria gene_qc Gene QC criteria list containing following fields: min_cells: Minimum number cells gene expressed kept excludes: string strings exclude certain genes. Regular expressions supported. Multiple strings can also separated commas single string. tmpdir Temporary directory store intermediate files prefix file names log Logger cache Directory cache results. Set FALSE disable caching","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/LoadSeuratAndPerformQC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load samples into a Seurat object — LoadSeuratAndPerformQC","text":"Seurat object. slot misc, two fields: cell_qc_df gene_qc, list gene QC results","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/LoadSeuratAndPerformQC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load samples into a Seurat object — LoadSeuratAndPerformQC","text":"","code":"# \\donttest{ datadir <- system.file(\"extdata\", \"scrna\", package = \"biopipen.utils\") meta <- data.frame(     Sample = c(\"Sample1\", \"Sample2\"),     RNAData = c(         file.path(datadir, \"Sample1\"),         file.path(datadir, \"Sample2\")     ) ) obj <- LoadSeuratAndPerformQC(meta, cache = FALSE, gene_qc = list(min_cells = 3)) #> INFO    [2025-01-21 02:51:25] Loading each sample ... #> INFO    [2025-01-21 02:51:25] - Loading sample Sample1 ... #> INFO    [2025-01-21 02:51:25] - Loading sample Sample2 ... #> INFO    [2025-01-21 02:51:25] Merging samples ... #> INFO    [2025-01-21 02:51:26] Performing cell QC ... #> INFO    [2025-01-21 02:51:26] Performing gene QC ... head(obj@misc$cell_qc_df) #>                  Sample nFeature_RNA nCount_RNA percent.mt percent.ribo #> Sample1_TEINH_1 Sample1         1153       2196          0            0 #> Sample1_TEINH_2 Sample1         1219       2560          0            0 #> Sample1_TEINH_3 Sample1          981       1784          0            0 #> Sample1_TEINH_4 Sample1         1159       2159          0            0 #> Sample1_TEINH_5 Sample1         1111       1841          0            0 #> Sample1_TEINH_6 Sample1          766       1236          0            0 #>                 percent.hb percent.plat  .QC #> Sample1_TEINH_1          0            0 TRUE #> Sample1_TEINH_2          0            0 TRUE #> Sample1_TEINH_3          0            0 TRUE #> Sample1_TEINH_4          0            0 TRUE #> Sample1_TEINH_5          0            0 TRUE #> Sample1_TEINH_6          0            0 TRUE print(obj@misc$gene_qc) #> $before #> [1] 3636 #>  #> $criteria #> $criteria$min_cells #> [1] 3 #>  #>  #> $ncells #>       Sample         feature ncells #> 79   Sample1 ENSG00000145708      2 #> 182  Sample1 ENSG00000100097      4 #> 383  Sample1 ENSG00000225968      3 #> 398  Sample1 ENSG00000211445      0 #> 703  Sample1 ENSG00000152822      1 #> 749  Sample1 ENSG00000277586      5 #> 996  Sample1 ENSG00000143479      4 #> 1054 Sample1 ENSG00000072657      2 #> 1547 Sample1 ENSG00000101463      0 #> 1554 Sample1 ENSG00000079102      0 #> 1558 Sample1 ENSG00000172137      2 #> 1560 Sample1 ENSG00000188803      2 #> 1684 Sample1 ENSG00000183773      2 #> 1703 Sample1 ENSG00000150556      3 #> 1785 Sample1 ENSG00000101327      1 #> 1942 Sample1 ENSG00000106852      2 #> 2011 Sample1 ENSG00000006128      2 #> 2040 Sample1 ENSG00000130751      1 #> 2126 Sample1 ENSG00000082074      2 #> 2279 Sample1 ENSG00000188647      1 #> 2316 Sample1 ENSG00000166407      0 #> 2340 Sample1 ENSG00000118733      3 #> 2343 Sample1 ENSG00000151693      3 #> 2446 Sample1 ENSG00000166863      2 #> 2453 Sample1 ENSG00000133101      2 #> 2543 Sample1 ENSG00000185513      1 #> 2561 Sample1 ENSG00000123096      2 #> 2881 Sample1 ENSG00000162631      4 #> 2982 Sample1 ENSG00000163873      2 #> 3028 Sample1 ENSG00000112893      2 #> 3057 Sample1 ENSG00000262655      1 #> 3085 Sample1 ENSG00000164326      0 #> 3172 Sample1 ENSG00000090006      5 #> 3188 Sample1 ENSG00000181234      1 #> 3202 Sample1 ENSG00000113657      4 #> 3386 Sample1 ENSG00000168546      2 #> 3506 Sample1 ENSG00000189409      2 #> 3510 Sample1 ENSG00000165973      2 #> 3594 Sample1 ENSG00000054803      0 #> 3715 Sample2 ENSG00000145708      5 #> 3818 Sample2 ENSG00000100097      2 #> 4019 Sample2 ENSG00000225968      0 #> 4034 Sample2 ENSG00000211445      3 #> 4339 Sample2 ENSG00000152822      3 #> 4385 Sample2 ENSG00000277586      2 #> 4632 Sample2 ENSG00000143479      1 #> 4690 Sample2 ENSG00000072657      3 #> 5183 Sample2 ENSG00000101463      0 #> 5190 Sample2 ENSG00000079102      1 #> 5194 Sample2 ENSG00000172137      1 #> 5196 Sample2 ENSG00000188803      0 #> 5320 Sample2 ENSG00000183773      4 #> 5339 Sample2 ENSG00000150556      2 #> 5421 Sample2 ENSG00000101327      0 #> 5578 Sample2 ENSG00000106852      2 #> 5647 Sample2 ENSG00000006128      1 #> 5676 Sample2 ENSG00000130751      4 #> 5762 Sample2 ENSG00000082074      5 #> 5915 Sample2 ENSG00000188647      3 #> 5952 Sample2 ENSG00000166407      0 #> 5976 Sample2 ENSG00000118733      1 #> 5979 Sample2 ENSG00000151693      2 #> 6082 Sample2 ENSG00000166863      1 #> 6089 Sample2 ENSG00000133101      2 #> 6179 Sample2 ENSG00000185513      5 #> 6197 Sample2 ENSG00000123096      5 #> 6517 Sample2 ENSG00000162631      1 #> 6618 Sample2 ENSG00000163873      1 #> 6664 Sample2 ENSG00000112893      2 #> 6693 Sample2 ENSG00000262655      0 #> 6721 Sample2 ENSG00000164326      0 #> 6808 Sample2 ENSG00000090006      2 #> 6824 Sample2 ENSG00000181234      2 #> 6838 Sample2 ENSG00000113657      2 #> 7022 Sample2 ENSG00000168546      3 #> 7142 Sample2 ENSG00000189409      1 #> 7146 Sample2 ENSG00000165973      2 #> 7230 Sample2 ENSG00000054803      1 #>  #> $after #> [1] 3597 #>  # }"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/PerformSeuratCellQC.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform cell QC — PerformSeuratCellQC","title":"Perform cell QC — PerformSeuratCellQC","text":"Perform cell QC","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/PerformSeuratCellQC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform cell QC — PerformSeuratCellQC","text":"","code":"PerformSeuratCellQC(object, cell_qc)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/PerformSeuratCellQC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform cell QC — PerformSeuratCellQC","text":"object Seurat object cell_qc Cell QC criteria","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/PerformSeuratCellQC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform cell QC — PerformSeuratCellQC","text":"Seurat object cell QC results @misc$cell_qc_df","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":null,"dir":"Reference","previous_headings":"","what":"Add and save report — Reporter","title":"Add and save report — Reporter","text":"Add report report.json pipen-report build report","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Add and save report — Reporter","text":"report report","code":""},{"path":[]},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Add and save report — Reporter","text":"Reporter$new() Reporter$add() Reporter$add2() Reporter$image() Reporter$clear() Reporter$save() Reporter$clone()","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Add and save report — Reporter","text":"Initialize reporter","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add and save report — Reporter","text":"","code":"Reporter$new()"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"method-add-","dir":"Reference","previous_headings":"","what":"Method add()","title":"Add and save report — Reporter","text":"Add content report","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Add and save report — Reporter","text":"","code":"Reporter$add(..., h1, h2 = \"#\", h3 = \"#\", ui = \"flat\")"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add and save report — Reporter","text":"... content add h1 first level heading report h2 second level heading report h3 third level heading report ui user interface report","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"method-add--1","dir":"Reference","previous_headings":"","what":"Method add2()","title":"Add and save report — Reporter","text":"Add content report, infer headings headings sub-headings","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Add and save report — Reporter","text":"","code":"Reporter$add2(..., hs, hs2 = c(), ui = \"flat\", collapse = \": \")"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add and save report — Reporter","text":"... content add hs headings case hs2 headings must shown. items hs, concatenated. example, hs = c(\"Section1\", \"Case1\"), hs2 = c(\"\", \"B\"), headings h1 = \"Section1: Case1\" h2 = \"\" h3 = \"B\". ui user interface report collapse separator concatenate headings","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"method-image-","dir":"Reference","previous_headings":"","what":"Method image()","title":"Add and save report — Reporter","text":"Generate report image added","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Add and save report — Reporter","text":"","code":"Reporter$image(prefix, more_formats, save_code, kind = \"image\", ...)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add and save report — Reporter","text":"prefix prefix image more_formats formats image available save_code Whether save code reproduce plot kind kind report, default \"image\" ... arguments add report","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Add and save report — Reporter","text":"list report image","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add and save report — Reporter","text":"","code":"reporter <- get_reporter() reporter$add(   list(      name = \"Image 1\",      contents = list(reporter$image(\"/path/to/image1\", \"pdf\", save_code = TRUE))   ),   h1 = \"Images\",   h2 = \"Image 1\" )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"method-clear-","dir":"Reference","previous_headings":"","what":"Method clear()","title":"Add and save report — Reporter","text":"Clear report","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Add and save report — Reporter","text":"","code":"Reporter$clear()"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"method-save-","dir":"Reference","previous_headings":"","what":"Method save()","title":"Add and save report — Reporter","text":"Save report file","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Add and save report — Reporter","text":"","code":"Reporter$save(path, clear = TRUE)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add and save report — Reporter","text":"path path save report path directory, report saved report.json directory Otherwise, report saved path clear Whether clear report saving","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Add and save report — Reporter","text":"objects class cloneable method.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Add and save report — Reporter","text":"","code":"Reporter$clone(deep = FALSE)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add and save report — Reporter","text":"deep Whether make deep clone.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/Reporter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add and save report — Reporter","text":"","code":"## ------------------------------------------------ ## Method `Reporter$image` ## ------------------------------------------------  reporter <- get_reporter() reporter$add(   list(      name = \"Image 1\",      contents = list(reporter$image(\"/path/to/image1\", \"pdf\", save_code = TRUE))   ),   h1 = \"Images\",   h2 = \"Image 1\" )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunEnrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Enrichment Analysis (Over-representation Analysis) — RunEnrichment","title":"Run Enrichment Analysis (Over-representation Analysis) — RunEnrichment","text":"Run enrichment analysis list differentially expressed genes (DEGs)","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunEnrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Enrichment Analysis (Over-representation Analysis) — RunEnrichment","text":"","code":"RunEnrichment(   degs,   deg = \"p_val_adj < 0.05\",   dbs = \"KEGG_2021_Human\",   cache = NULL,   error = TRUE,   site = \"Enrichr\",   ... )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunEnrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Enrichment Analysis (Over-representation Analysis) — RunEnrichment","text":"degs data frame DEGs, typically generated RunSeuratDEAnalysis deg string specifying condition gene considered differentially expressed dbs string specifying database use enrichment analysis list available databases can found https://maayanlab.cloud/Enrichr/#libraries cache string specifying directory cache results Set FALSE disable caching error boolean specifying whether throw error enrichment analysis fails site string specifying Enrichr site use ... Additional arguments pass RunEnrichment","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunEnrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Enrichment Analysis (Over-representation Analysis) — RunEnrichment","text":"","code":"degs <- suppressWarnings(RunSeuratDEAnalysis(SeuratObject::pbmc_small, \"groups\", \"g1\", \"g2\")) RunEnrichment(degs, deg = \"abs(avg_log2FC) > 1\") #> Connection changed to https://maayanlab.cloud/Enrichr/ #> Connection is Live! #> Uploading data to Enrichr... Done. #>   Querying KEGG_2021_Human... Done. #> Parsing results... Done. #>                                                              Term Overlap #> 1                                      Hematopoietic cell lineage    8/99 #> 2                                       Graft-versus-host disease    3/42 #> 3                                        Type I diabetes mellitus    3/43 #> 4                                                    Tuberculosis   5/180 #> 5                                                   Leishmaniasis    3/77 #> 6                               B cell receptor signaling pathway    3/81 #> 7                                         IL-17 signaling pathway    3/94 #> 8                                 Staphylococcus aureus infection    3/95 #> 9                         Neutrophil extracellular trap formation   4/189 #> 10                                                         Asthma    2/31 #> 11                                                     Amoebiasis   3/102 #> 12                           Toll-like receptor signaling pathway   3/104 #> 13                                   NF-kappa B signaling pathway   3/104 #> 14                                   Epstein-Barr virus infection   4/202 #> 15                                            Allograft rejection    2/38 #> 16                                 Sphingolipid signaling pathway   3/119 #> 17                                Human cytomegalovirus infection   4/225 #> 18                                     Osteoclast differentiation   3/127 #> 19                      Natural killer cell mediated cytotoxicity   3/131 #> 20                                     Autoimmune thyroid disease    2/53 #> 21                                                  Legionellosis    2/57 #> 22                                                      Phagosome   3/152 #> 23                                              Viral myocarditis    2/60 #> 24                                                    Necroptosis   3/159 #> 25                                  Cytosolic DNA-sensing pathway    2/63 #> 26                                     Inflammatory bowel disease    2/65 #> 27                         Cytokine-cytokine receptor interaction   4/295 #> 28                                                    Influenza A   3/172 #> 29                                                      Pertussis    2/76 #> 30                                    Chemokine signaling pathway   3/192 #> 31                                     PI3K-Akt signaling pathway   4/354 #> 32                                      Lipid and atherosclerosis   3/215 #> 33                                           Rheumatoid arthritis    2/93 #> 34  Viral protein interaction with cytokine and cytokine receptor   2/100 #> 35                                      Th17 cell differentiation   2/107 #> 36                                   Systemic lupus erythematosus   2/135 #> 37                         Fluid shear stress and atherosclerosis   2/139 #> 38                                                        Measles   2/139 #> 39                                                      Apoptosis   2/142 #> 40                                      Pentose phosphate pathway    1/30 #> 41                              Non-alcoholic fatty liver disease   2/155 #> 42                                            Cellular senescence   2/156 #> 43                               Herpes simplex virus 1 infection   4/498 #> 44                         Nicotinate and nicotinamide metabolism    1/35 #> 45                                                    Hepatitis B   2/162 #> 46                                        African trypanosomiasis    1/37 #> 47                                       Primary immunodeficiency    1/38 #> 48                        Neuroactive ligand-receptor interaction   3/341 #> 49                                                    Ferroptosis    1/41 #> 50                            NOD-like receptor signaling pathway   2/181 #> 51                           Porphyrin and chlorophyll metabolism    1/43 #> 52                                    Basal transcription factors    1/45 #> 53                                              Alzheimer disease   3/369 #> 54                        Transcriptional misregulation in cancer   2/192 #> 55                Kaposi sarcoma-associated herpesvirus infection   2/193 #> 56                   Intestinal immune network for IgA production    1/48 #> 57                                         Cholesterol metabolism    1/50 #> 58                                                        Malaria    1/50 #> 59                                                 Focal adhesion   2/201 #> 60                                         Rap1 signaling pathway   2/210 #> 61                                          Pyrimidine metabolism    1/56 #> 62                       Human immunodeficiency virus 1 infection   2/212 #> 63                        Human T-cell leukemia virus 1 infection   2/219 #> 64                                         Acute myeloid leukemia    1/67 #> 65                                Fc epsilon RI signaling pathway    1/68 #> 66                                                    Shigellosis   2/246 #> 67                                          p53 signaling pathway    1/73 #> 68                                           Salmonella infection   2/249 #> 69                                      Thyroid hormone synthesis    1/75 #> 70                Arrhythmogenic right ventricular cardiomyopathy    1/77 #> 71                            Antigen processing and presentation    1/78 #> 72                                                RNA degradation    1/79 #> 73                                  Pathways of neurodegeneration   3/475 #> 74                                                  Prion disease   2/273 #> 75                                       ECM-receptor interaction    1/88 #> 76                                              GABAergic synapse    1/89 #> 77                                    Hypertrophic cardiomyopathy    1/90 #> 78                                             Morphine addiction    1/91 #> 79                                         Small cell lung cancer    1/92 #> 80                               Th1 and Th2 cell differentiation    1/92 #> 81                                         Dilated cardiomyopathy    1/96 #> 82                                         MAPK signaling pathway   2/294 #> 83                                          Circadian entrainment    1/97 #> 84                               Fc gamma R-mediated phagocytosis    1/97 #> 85               Inflammatory mediator regulation of TRP channels    1/98 #> 86           AGE-RAGE signaling pathway in diabetic complications   1/100 #> 87                                                 Chagas disease   1/102 #> 88                       C-type lectin receptor signaling pathway   1/104 #> 89                                             Pathways in cancer   3/531 #> 90                              Ribosome biogenesis in eukaryotes   1/108 #> 91                                          TNF signaling pathway   1/112 #> 92                                                  Toxoplasmosis   1/112 #> 93                                           Serotonergic synapse   1/113 #> 94                                            Cholinergic synapse   1/113 #> 95                                          Glutamatergic synapse   1/114 #> 96                                            Platelet activation   1/124 #> 97                                              Purine metabolism   1/129 #> 98                                      Relaxin signaling pathway   1/129 #> 99                                         FoxO signaling pathway   1/131 #> 100                                          Dopaminergic synapse   1/132 #> 101                                 Amyotrophic lateral sclerosis   2/364 #> 102                                      Apelin signaling pathway   1/137 #> 103                                            Yersinia infection   1/137 #> 104                                        Spinocerebellar ataxia   1/143 #> 105                                       Cell adhesion molecules   1/148 #> 106                             Phospholipase D signaling pathway   1/148 #> 107                          Retrograde endocannabinoid signaling   1/148 #> 108                                                   Spliceosome   1/150 #> 109                                                   Hepatitis C   1/157 #> 110                                    cGMP-PKG signaling pathway   1/167 #> 111                                                Tight junction   1/169 #> 112                                                    Alcoholism   1/186 #> 113                                                 RNA transport   1/186 #> 114                         Pathogenic Escherichia coli infection   1/197 #> 115                                          Viral carcinogenesis   1/203 #> 116                                       Diabetic cardiomyopathy   1/203 #> 117                              Regulation of actin cytoskeleton   1/218 #> 118                                           Coronavirus disease   1/232 #> 119                                         Ras signaling pathway   1/232 #> 120                                     Calcium signaling pathway   1/240 #> 121                                             Parkinson disease   1/249 #> 122                                                   Endocytosis   1/252 #> 123                                            Huntington disease   1/306 #> 124                                Human papillomavirus infection   1/331 #>          P.value Adjusted.P.value Old.P.value Old.Adjusted.P.value Odds.Ratio #> 1   3.864191e-09     4.791597e-07           0                    0 25.6405947 #> 2   5.441297e-04     1.908538e-02           0                    0 20.9536354 #> 3   5.833473e-04     1.908538e-02           0                    0 20.4287671 #> 4   6.156575e-04     1.908538e-02           0                    0  7.9472837 #> 5   3.152458e-03     6.515878e-02           0                    0 11.0236949 #> 6   3.637281e-03     6.515878e-02           0                    0 10.4562698 #> 7   5.516829e-03     6.515878e-02           0                    0  8.9566461 #> 8   5.681341e-03     6.515878e-02           0                    0  8.8588446 #> 9   5.837599e-03     6.515878e-02           0                    0  5.9276276 #> 10  6.170140e-03     6.515878e-02           0                    0 18.5414725 #> 11  6.915482e-03     6.515878e-02           0                    0  8.2295558 #> 12  7.295013e-03     6.515878e-02           0                    0  8.0657806 #> 13  7.295013e-03     6.515878e-02           0                    0  8.0657806 #> 14  7.356637e-03     6.515878e-02           0                    0  5.5347924 #> 15  9.169706e-03     7.580290e-02           0                    0 14.9309309 #> 16  1.053421e-02     7.763074e-02           0                    0  7.0174776 #> 17  1.064292e-02     7.763074e-02           0                    0  4.9529915 #> 18  1.255218e-02     8.647057e-02           0                    0  6.5620857 #> 19  1.363853e-02     8.900938e-02           0                    0  6.3557363 #> 20  1.732811e-02     1.074343e-01           0                    0 10.5315315 #> 21  1.987498e-02     1.138674e-01           0                    0  9.7636364 #> 22  2.020228e-02     1.138674e-01           0                    0  5.4541693 #> 23  2.188161e-02     1.173583e-01           0                    0  9.2572227 #> 24  2.271451e-02     1.173583e-01           0                    0  5.2075869 #> 25  2.396862e-02     1.188844e-01           0                    0  8.8006203 #> 26  2.540362e-02     1.193474e-01           0                    0  8.5203775 #> 27  2.598693e-02     1.193474e-01           0                    0  3.7481863 #> 28  2.781207e-02     1.231677e-01           0                    0  4.8038421 #> 29  3.389234e-02     1.449190e-01           0                    0  7.2498174 #> 30  3.674508e-02     1.518797e-01           0                    0  4.2911503 #> 31  4.584599e-02     1.833840e-01           0                    0  3.1069841 #> 32  4.862084e-02     1.834801e-01           0                    0  3.8211424 #> 33  4.882938e-02     1.834801e-01           0                    0  5.8904069 #> 34  5.555659e-02     2.026182e-01           0                    0  5.4677330 #> 35  6.258860e-02     2.217425e-01           0                    0  5.1014157 #> 36  9.337261e-02     3.200272e-01           0                    0  4.0217435 #> 37  9.807285e-02     3.200272e-01           0                    0  3.9035313 #> 38  9.807285e-02     3.200272e-01           0                    0  3.9035313 #> 39  1.016415e-01     3.231679e-01           0                    0  3.8193050 #> 40  1.080095e-01     3.348295e-01           0                    0  9.1471264 #> 41  1.175045e-01     3.480007e-01           0                    0  3.4924925 #> 42  1.187498e-01     3.480007e-01           0                    0  3.4696385 #> 43  1.212348e-01     3.480007e-01           0                    0  2.1851102 #> 44  1.248558e-01     3.480007e-01           0                    0  7.8000000 #> 45  1.262906e-01     3.480007e-01           0                    0  3.3385135 #> 46  1.315060e-01     3.544944e-01           0                    0  7.3659259 #> 47  1.348124e-01     3.556752e-01           0                    0  7.1664865 #> 48  1.401998e-01     3.621827e-01           0                    0  2.3813731 #> 49  1.446572e-01     3.660713e-01           0                    0  6.6280000 #> 50  1.508671e-01     3.675236e-01           0                    0  2.9812774 #> 51  1.511589e-01     3.675236e-01           0                    0  6.3117460 #> 52  1.576118e-01     3.702298e-01           0                    0  6.0242424 #> 53  1.653864e-01     3.702298e-01           0                    0  2.1960476 #> 54  1.655039e-01     3.702298e-01           0                    0  2.8071124 #> 55  1.668471e-01     3.702298e-01           0                    0  2.7922739 #> 56  1.672006e-01     3.702298e-01           0                    0  5.6388652 #> 57  1.735331e-01     3.710019e-01           0                    0  5.4081633 #> 58  1.735331e-01     3.710019e-01           0                    0  5.4081633 #> 59  1.776604e-01     3.733879e-01           0                    0  2.6789352 #> 60  1.899537e-01     3.854038e-01           0                    0  2.5618503 #> 61  1.922471e-01     3.854038e-01           0                    0  4.8167273 #> 62  1.927019e-01     3.854038e-01           0                    0  2.5371943 #> 63  2.023614e-01     3.982987e-01           0                    0  2.4544775 #> 64  2.254763e-01     4.357730e-01           0                    0  4.0117172 #> 65  2.284294e-01     4.357730e-01           0                    0  3.9516418 #> 66  2.400637e-01     4.454554e-01           0                    0  2.1798848 #> 67  2.430289e-01     4.454554e-01           0                    0  3.6762963 #> 68  2.442820e-01     4.454554e-01           0                    0  2.1530802 #> 69  2.487921e-01     4.471046e-01           0                    0  3.5765766 #> 70  2.545120e-01     4.481030e-01           0                    0  3.4821053 #> 71  2.573558e-01     4.481030e-01           0                    0  3.4367100 #> 72  2.601889e-01     4.481030e-01           0                    0  3.3924786 #> 73  2.699582e-01     4.552048e-01           0                    0  1.6936383 #> 74  2.781015e-01     4.552048e-01           0                    0  1.9600080 #> 75  2.852114e-01     4.552048e-01           0                    0  3.0401533 #> 76  2.879396e-01     4.552048e-01           0                    0  3.0054545 #> 77  2.906576e-01     4.552048e-01           0                    0  2.9715356 #> 78  2.933652e-01     4.552048e-01           0                    0  2.9383704 #> 79  2.960627e-01     4.552048e-01           0                    0  2.9059341 #> 80  2.960627e-01     4.552048e-01           0                    0  2.9059341 #> 81  3.067514e-01     4.552048e-01           0                    0  2.7830175 #> 82  3.076467e-01     4.552048e-01           0                    0  1.8171048 #> 83  3.093985e-01     4.552048e-01           0                    0  2.7538889 #> 84  3.093985e-01     4.552048e-01           0                    0  2.7538889 #> 85  3.120355e-01     4.552048e-01           0                    0  2.7253608 #> 86  3.172799e-01     4.572461e-01           0                    0  2.6700337 #> 87  3.224848e-01     4.572461e-01           0                    0  2.6168977 #> 88  3.276505e-01     4.572461e-01           0                    0  2.5658252 #> 89  3.281847e-01     4.572461e-01           0                    0  1.5096513 #> 90  3.378657e-01     4.606299e-01           0                    0  2.4694081 #> 91  3.479277e-01     4.606299e-01           0                    0  2.3799399 #> 92  3.479277e-01     4.606299e-01           0                    0  2.3799399 #> 93  3.504195e-01     4.606299e-01           0                    0  2.3585714 #> 94  3.504195e-01     4.606299e-01           0                    0  2.3585714 #> 95  3.529019e-01     4.606299e-01           0                    0  2.3375811 #> 96  3.772170e-01     4.872386e-01           0                    0  2.1464499 #> 97  3.890341e-01     4.905620e-01           0                    0  2.0620833 #> 98  3.890341e-01     4.905620e-01           0                    0  2.0620833 #> 99  3.936988e-01     4.905620e-01           0                    0  2.0301538 #> 100 3.960179e-01     4.905620e-01           0                    0  2.0145547 #> 101 4.038144e-01     4.905620e-01           0                    0  1.4605047 #> 102 4.074829e-01     4.905620e-01           0                    0  1.9400000 #> 103 4.074829e-01     4.905620e-01           0                    0  1.9400000 #> 104 4.209577e-01     5.005837e-01           0                    0  1.8574648 #> 105 4.319553e-01     5.005837e-01           0                    0  1.7938322 #> 106 4.319553e-01     5.005837e-01           0                    0  1.7938322 #> 107 4.319553e-01     5.005837e-01           0                    0  1.7938322 #> 108 4.362964e-01     5.009329e-01           0                    0  1.7695749 #> 109 4.512340e-01     5.133304e-01           0                    0  1.6895726 #> 110 4.718981e-01     5.316782e-01           0                    0  1.5869880 #> 111 4.759378e-01     5.316782e-01           0                    0  1.5679365 #> 112 5.090666e-01     5.586218e-01           0                    0  1.4226306 #> 113 5.090666e-01     5.586218e-01           0                    0  1.4226306 #> 114 5.293925e-01     5.758305e-01           0                    0  1.3420408 #> 115 5.401270e-01     5.773771e-01           0                    0  1.3017822 #> 116 5.401270e-01     5.773771e-01           0                    0  1.3017822 #> 117 5.659174e-01     5.997757e-01           0                    0  1.2108756 #> 118 5.886982e-01     6.134334e-01           0                    0  1.1366811 #> 119 5.886982e-01     6.134334e-01           0                    0  1.1366811 #> 120 6.011817e-01     6.212211e-01           0                    0  1.0981869 #> 121 6.147791e-01     6.293601e-01           0                    0  1.0578495 #> 122 6.192091e-01     6.293601e-01           0                    0  1.0450465 #> 123 6.908733e-01     6.964901e-01           0                    0  0.8576612 #> 124 7.193720e-01     7.193720e-01           0                    0  0.7916768 #>     Combined.Score                                          Genes #> 1      496.6971266 FCER2;HLA-DMA;IL1B;CD19;ITGA2B;CD14;CD1C;MS4A1 #> 2      157.4942918                              HLA-DMA;IL1B;GZMB #> 3      152.1274703                              HLA-DMA;IL1B;GZMB #> 4       58.7528355                   FCGR3A;HLA-DMA;IL1B;CD14;BID #> 5       63.4917729                            FCGR3A;HLA-DMA;IL1B #> 6       58.7278355                              CD79B;CD19;LILRA3 #> 7       46.5741304                             IL1B;S100A8;IL17RA #> 8       45.8052573                            FCGR3A;HLA-DMA;FPR1 #> 9       30.4883714                       FCGR3A;ITGA2B;VDAC3;FPR1 #> 10      94.3396393                                 HLA-DMA;FCER1A #> 11      40.9337495                                 IL1B;CD14;CD1C #> 12      39.6881925                                 IL1B;CCL4;CD14 #> 13      39.6881925                                 IL1B;CCL4;CD14 #> 14      27.1877438                         FCER2;HLA-DMA;CD19;BID #> 15      70.0536893                                   HLA-DMA;GZMB #> 16      31.9514685                               FCER1A;BID;S1PR4 #> 17      22.5007466                            IL1B;CCL4;BID;GNG11 #> 18      28.7278988                             FCGR3A;IL1B;LILRA3 #> 19      27.2969728                                FCGR3A;GZMB;BID #> 20      42.7098384                                   HLA-DMA;GZMB #> 21      38.2567922                                      IL1B;CD14 #> 22      21.2819495                            FCGR3A;HLA-DMA;CD14 #> 23      35.3821120                                    HLA-DMA;BID #> 24      19.7094217                                 IL1B;VDAC3;BID #> 25      32.8351999                                      IL1B;CCL4 #> 26      31.2941854                                   HLA-DMA;IL1B #> 27      13.6814864                          IL1B;CCL4;CCR7;IL17RA #> 28      17.2087329                               HLA-DMA;IL1B;BID #> 29      24.5374866                                      IL1B;CD14 #> 30      14.1768919                                CCL4;CCR7;GNG11 #> 31       9.5771778                        TCL1A;CD19;ITGA2B;GNG11 #> 32      11.5539998                                  IL1B;CD14;BID #> 33      17.7856301                                   HLA-DMA;IL1B #> 34      15.8036792                                      CCL4;CCR7 #> 35      14.1369007                                   HLA-DMA;IL1B #> 36       9.5361862                                 FCGR3A;HLA-DMA #> 37       9.0641742                                    IL1B;ITGA2B #> 38       9.0641742                                       IL1B;BID #> 39       8.7320888                                       GZMB;BID #> 40      20.3572579                                         TALDO1 #> 41       7.4783993                                       IL1B;BID #> 42       7.3928857                                  VDAC3;ZFP36L1 #> 43       4.6106392                         HLA-DMA;IL1B;BID;SRSF7 #> 44      16.2286503                                           NT5C #> 45       6.9079518                                      VDAC3;BID #> 46      14.9432755                                           IL1B #> 47      14.3607166                                           CD19 #> 48       4.6786526                               FPR1;S1PR4;PTGDR #> 49      12.8144994                                          VDAC3 #> 50       5.6386575                                     IL1B;VDAC3 #> 51      11.9255625                                          BLVRA #> 52      11.1305110                                           TAF7 #> 53       3.9517238                                 IL1B;VDAC3;BID #> 54       5.0493231                                      GZMB;CD14 #> 55       5.0000618                                      BID;GNG11 #> 56      10.0854555                                        HLA-DMA #> 57       9.4717853                                          VDAC3 #> 58       9.4717853                                           IL1B #> 59       4.6288830                                   ITGA2B;PARVB #> 60       4.2551685                                    ITGA2B;FPR1 #> 61       7.9426568                                           NT5C #> 62       4.1777717                                      BID;GNG11 #> 63       3.9215185                                  HLA-DMA;VDAC3 #> 64       5.9756141                                           CD14 #> 65       5.8347105                                         FCER1A #> 66       3.1103704                                      IL1B;CD14 #> 67       5.2003963                                            BID #> 68       3.0346201                                      IL1B;CD14 #> 69       4.9755105                                          ASGR1 #> 70       4.7649386                                         ITGA2B #> 71       4.6646321                                        HLA-DMA #> 72       4.5674552                                       MPHOSPH6 #> 73       2.2177995                                 IL1B;VDAC3;BID #> 74       2.5083574                                     IL1B;VDAC3 #> 75       3.8139466                                         ITGA2B #> 76       3.7418041                                          GNG11 #> 77       3.6716575                                         ITGA2B #> 78       3.6034320                                          GNG11 #> 79       3.5370563                                         ITGA2B #> 80       3.5370563                                        HLA-DMA #> 81       3.2887409                                         ITGA2B #> 82       2.1420090                                      IL1B;CD14 #> 83       3.2306569                                          GNG11 #> 84       3.2306569                                         FCGR3A #> 85       3.1740594                                           IL1B #> 86       3.0651211                                           IL1B #> 87       2.9615412                                           IL1B #> 88       2.8629674                                           IL1B #> 89       1.6820213                               ITGA2B;BID;GNG11 #> 90       2.6795714                                           POP7 #> 91       2.5126468                                           IL1B #> 92       2.5126468                                        HLA-DMA #> 93       2.4732551                                          GNG11 #> 94       2.4732551                                          GNG11 #> 95       2.4347428                                          GNG11 #> 96       2.0926484                                         ITGA2B #> 97       1.9467885                                           NT5C #> 98       1.9467885                                          GNG11 #> 99       1.8924468                                          S1PR4 #> 100      1.8660736                                          GNG11 #> 101      1.3243856                                      BID;SRSF7 #> 102      1.7416472                                          GNG11 #> 103      1.7416472                                           IL1B #> 104      1.6071212                                          VDAC3 #> 105      1.5058023                                        HLA-DMA #> 106      1.5058023                                         FCER1A #> 107      1.5058023                                          GNG11 #> 108      1.4677447                                          SRSF7 #> 109      1.3445100                                            BID #> 110      1.1918157                                          VDAC3 #> 111      1.1641429                                           CD1C #> 112      0.9605267                                          GNG11 #> 113      0.9605267                                           POP7 #> 114      0.8535717                                           IL1B #> 115      0.8018341                                          VDAC3 #> 116      0.8018341                                          VDAC3 #> 117      0.6893601                                         ITGA2B #> 118      0.6022610                                           IL1B #> 119      0.6022610                                          GNG11 #> 120      0.5588213                                          VDAC3 #> 121      0.5146355                                          VDAC3 #> 122      0.5009036                                          VPS28 #> 123      0.3171621                                          VDAC3 #> 124      0.2607599                                         ITGA2B #>                  db #> 1   KEGG_2021_Human #> 2   KEGG_2021_Human #> 3   KEGG_2021_Human #> 4   KEGG_2021_Human #> 5   KEGG_2021_Human #> 6   KEGG_2021_Human #> 7   KEGG_2021_Human #> 8   KEGG_2021_Human #> 9   KEGG_2021_Human #> 10  KEGG_2021_Human #> 11  KEGG_2021_Human #> 12  KEGG_2021_Human #> 13  KEGG_2021_Human #> 14  KEGG_2021_Human #> 15  KEGG_2021_Human #> 16  KEGG_2021_Human #> 17  KEGG_2021_Human #> 18  KEGG_2021_Human #> 19  KEGG_2021_Human #> 20  KEGG_2021_Human #> 21  KEGG_2021_Human #> 22  KEGG_2021_Human #> 23  KEGG_2021_Human #> 24  KEGG_2021_Human #> 25  KEGG_2021_Human #> 26  KEGG_2021_Human #> 27  KEGG_2021_Human #> 28  KEGG_2021_Human #> 29  KEGG_2021_Human #> 30  KEGG_2021_Human #> 31  KEGG_2021_Human #> 32  KEGG_2021_Human #> 33  KEGG_2021_Human #> 34  KEGG_2021_Human #> 35  KEGG_2021_Human #> 36  KEGG_2021_Human #> 37  KEGG_2021_Human #> 38  KEGG_2021_Human #> 39  KEGG_2021_Human #> 40  KEGG_2021_Human #> 41  KEGG_2021_Human #> 42  KEGG_2021_Human #> 43  KEGG_2021_Human #> 44  KEGG_2021_Human #> 45  KEGG_2021_Human #> 46  KEGG_2021_Human #> 47  KEGG_2021_Human #> 48  KEGG_2021_Human #> 49  KEGG_2021_Human #> 50  KEGG_2021_Human #> 51  KEGG_2021_Human #> 52  KEGG_2021_Human #> 53  KEGG_2021_Human #> 54  KEGG_2021_Human #> 55  KEGG_2021_Human #> 56  KEGG_2021_Human #> 57  KEGG_2021_Human #> 58  KEGG_2021_Human #> 59  KEGG_2021_Human #> 60  KEGG_2021_Human #> 61  KEGG_2021_Human #> 62  KEGG_2021_Human #> 63  KEGG_2021_Human #> 64  KEGG_2021_Human #> 65  KEGG_2021_Human #> 66  KEGG_2021_Human #> 67  KEGG_2021_Human #> 68  KEGG_2021_Human #> 69  KEGG_2021_Human #> 70  KEGG_2021_Human #> 71  KEGG_2021_Human #> 72  KEGG_2021_Human #> 73  KEGG_2021_Human #> 74  KEGG_2021_Human #> 75  KEGG_2021_Human #> 76  KEGG_2021_Human #> 77  KEGG_2021_Human #> 78  KEGG_2021_Human #> 79  KEGG_2021_Human #> 80  KEGG_2021_Human #> 81  KEGG_2021_Human #> 82  KEGG_2021_Human #> 83  KEGG_2021_Human #> 84  KEGG_2021_Human #> 85  KEGG_2021_Human #> 86  KEGG_2021_Human #> 87  KEGG_2021_Human #> 88  KEGG_2021_Human #> 89  KEGG_2021_Human #> 90  KEGG_2021_Human #> 91  KEGG_2021_Human #> 92  KEGG_2021_Human #> 93  KEGG_2021_Human #> 94  KEGG_2021_Human #> 95  KEGG_2021_Human #> 96  KEGG_2021_Human #> 97  KEGG_2021_Human #> 98  KEGG_2021_Human #> 99  KEGG_2021_Human #> 100 KEGG_2021_Human #> 101 KEGG_2021_Human #> 102 KEGG_2021_Human #> 103 KEGG_2021_Human #> 104 KEGG_2021_Human #> 105 KEGG_2021_Human #> 106 KEGG_2021_Human #> 107 KEGG_2021_Human #> 108 KEGG_2021_Human #> 109 KEGG_2021_Human #> 110 KEGG_2021_Human #> 111 KEGG_2021_Human #> 112 KEGG_2021_Human #> 113 KEGG_2021_Human #> 114 KEGG_2021_Human #> 115 KEGG_2021_Human #> 116 KEGG_2021_Human #> 117 KEGG_2021_Human #> 118 KEGG_2021_Human #> 119 KEGG_2021_Human #> 120 KEGG_2021_Human #> 121 KEGG_2021_Human #> 122 KEGG_2021_Human #> 123 KEGG_2021_Human #> 124 KEGG_2021_Human"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDEAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"RunSeuratDEAnalysis — RunSeuratDEAnalysis","title":"RunSeuratDEAnalysis — RunSeuratDEAnalysis","text":"Run differential expression analysis Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDEAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RunSeuratDEAnalysis — RunSeuratDEAnalysis","text":"","code":"RunSeuratDEAnalysis(   object,   group.by,   ident.1 = NULL,   ident.2 = NULL,   assay = NULL,   subset = NULL,   cache = NULL,   error = TRUE,   ... )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDEAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RunSeuratDEAnalysis — RunSeuratDEAnalysis","text":"object Seurat object group.Column name meta.data group cells ident.1 Identity first group cells ident.2 Identity second group cells assay Assay use analysis subset Subset cells use analysis string expression pass dplyr::filter function cache Directory cache results. Set FALSE disable caching results analysis saved directory Anything changed object arguments trigger re-run error Whether raise error analysis fails Otherwise, return empty data frame ... Additional arguments pass Seurat::FindMarkers","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDEAnalysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RunSeuratDEAnalysis — RunSeuratDEAnalysis","text":"","code":"RunSeuratDEAnalysis(SeuratObject::pbmc_small, \"groups\", \"g1\", \"g2\") #>                    p_val avg_log2FC pct.1 pct.2 p_val_adj          gene groups #> NOSIP         0.02870319  1.2224797 0.455 0.194         1         NOSIP     NA #> LYAR          0.02920961  0.8205500 0.159 0.389         1          LYAR     NA #> SNHG7         0.03189563  0.9583741 0.295 0.083         1         SNHG7     NA #> TMUB1         0.03592718  1.7965894 0.182 0.028         1         TMUB1     NA #> ZNF330        0.03911949  9.7197369 0.114 0.000         1        ZNF330     NA #> FUOM          0.03911949  7.6369685 0.114 0.000         1          FUOM     NA #> CCL4          0.04262696  3.6666376 0.205 0.056         1          CCL4     NA #> LINC00936     0.04918625  0.7604677 0.386 0.167         1     LINC00936     NA #> TSPO          0.05000053  0.8252648 0.659 0.361         1          TSPO     NA #> IFI6          0.05588343  0.8570195 0.432 0.222         1          IFI6     NA #> VDAC3         0.06665008  3.6742886 0.318 0.139         1         VDAC3     NA #> SPON2         0.07526141  1.7237839 0.273 0.111         1         SPON2     NA #> LGALS2        0.08238383  1.4537375 0.341 0.167         1        LGALS2     NA #> RPL7L1        0.08259804 -2.5594238 0.091 0.222         1        RPL7L1     NA #> TAF7          0.08349570  1.5772505 0.341 0.167         1          TAF7     NA #> FCGR3A        0.08436567  1.1275295 0.432 0.250         1        FCGR3A     NA #> LGALS9        0.08733037  1.1241969 0.273 0.111         1        LGALS9     NA #> GZMB          0.08733037  1.1698448 0.273 0.111         1          GZMB     NA #> CLEC10A       0.09071524  1.6996524 0.182 0.056         1       CLEC10A     NA #> FCER1A        0.09397257  1.9329064 0.182 0.056         1        FCER1A     NA #> LRRC25        0.09529164  0.4200849 0.273 0.111         1        LRRC25     NA #> BANK1         0.09545145  2.0219200 0.136 0.028         1         BANK1     NA #> GSTP1         0.09628003  0.7713358 0.591 0.444         1         GSTP1     NA #> SIT1          0.09934503 -3.6034439 0.023 0.111         1          SIT1     NA #> ARHGDIA       0.10084609 -0.4601009 0.432 0.250         1       ARHGDIA     NA #> HLA-DMA       0.10813435  1.0195709 0.386 0.222         1       HLA-DMA     NA #> GRN           0.11667166  0.5547349 0.409 0.222         1           GRN     NA #> RUFY1         0.11768586 -0.9810894 0.091 0.222         1         RUFY1     NA #> MS4A7         0.12277557  0.5415504 0.227 0.083         1         MS4A7     NA #> IFI30         0.13211385  0.4138543 0.341 0.167         1         IFI30     NA #> RGS1          0.13634254  2.5506416 0.159 0.056         1          RGS1     NA #> THYN1         0.14336601  1.5281674 0.205 0.083         1         THYN1     NA #> PARVB         0.15081270 -1.4496990 0.068 0.167         1         PARVB     NA #> PCMT1         0.15207496  3.3593272 0.295 0.167         1         PCMT1     NA #> FCGRT         0.16468927  0.9702779 0.409 0.250         1         FCGRT     NA #> BID           0.17214063  1.1827776 0.386 0.222         1           BID     NA #> GNLY          0.17975936  1.3725474 0.295 0.167         1          GNLY     NA #> FCER1G        0.18735817  0.6490939 0.636 0.472         1        FCER1G     NA #> TAGAP         0.18771440 -0.4875612 0.114 0.222         1         TAGAP     NA #> BLVRA         0.19048552 -1.1214685 0.227 0.333         1         BLVRA     NA #> COTL1         0.19393336  0.4875465 0.750 0.583         1         COTL1     NA #> HLA-DQA1      0.21368858  0.9605902 0.386 0.250         1      HLA-DQA1     NA #> VPS28         0.21488446 -1.2334213 0.318 0.444         1         VPS28     NA #> GIMAP1        0.22134291  0.9678929 0.409 0.250         1        GIMAP1     NA #> PRF1          0.22555711  0.3097331 0.295 0.167         1          PRF1     NA #> SAFB2         0.23520876  2.4093824 0.091 0.028         1         SAFB2     NA #> EIF3G         0.23894997  0.7393618 0.591 0.417         1         EIF3G     NA #> NRBP1         0.24206600 -2.2937805 0.091 0.167         1         NRBP1     NA #> HLA-DQA2      0.24489452  0.6449536 0.250 0.139         1      HLA-DQA2     NA #> SCO2          0.24808905  0.8095112 0.182 0.083         1          SCO2     NA #> PTPN22        0.25724622 -2.1902685 0.045 0.111         1        PTPN22     NA #> PPP3CC        0.26106405  0.7908963 0.136 0.056         1        PPP3CC     NA #> ZNF76         0.26360996  1.2855973 0.091 0.028         1         ZNF76     NA #> CD1C          0.26360996  1.5571143 0.091 0.028         1          CD1C     NA #> WARS          0.26808657 -1.3804565 0.159 0.250         1          WARS     NA #> EPC1          0.27173354  0.8665448 0.205 0.111         1          EPC1     NA #> TCL1A         0.27307223 -1.8951067 0.068 0.139         1         TCL1A     NA #> CCDC104       0.27358239  0.9099128 0.091 0.028         1       CCDC104     NA #> GZMH          0.28136356  1.6970640 0.159 0.083         1          GZMH     NA #> HLA-DRA       0.28215715  0.2258141 0.727 0.639         1       HLA-DRA     NA #> RBP7          0.28966268 -1.1441332 0.068 0.139         1          RBP7     NA #> RGS2          0.29358016 -0.6789153 0.409 0.278         1          RGS2     NA #> MPHOSPH6      0.29667195  1.4082929 0.159 0.083         1      MPHOSPH6     NA #> TREML1        0.29820733 -1.3982890 0.068 0.139         1        TREML1     NA #> TCF7          0.30419782 -0.9406441 0.114 0.194         1          TCF7     NA #> PTCRA         0.30440015 -0.2643378 0.045 0.111         1         PTCRA     NA #> BLOC1S4       0.30851235 -1.2148305 0.091 0.167         1       BLOC1S4     NA #> CD9           0.30851235  0.1021292 0.091 0.167         1           CD9     NA #> TNFRSF1B      0.30987432  0.8275763 0.227 0.139         1      TNFRSF1B     NA #> TPM4          0.31495381  0.4273507 0.409 0.278         1          TPM4     NA #> LST1          0.32907845  0.1394113 0.500 0.361         1          LST1     NA #> FAM96A        0.33150327 -0.4500508 0.205 0.111         1        FAM96A     NA #> SERPINA1      0.33384685  0.8580429 0.341 0.250         1      SERPINA1     NA #> C12orf75      0.34229821 -0.5783239 0.114 0.194         1      C12orf75     NA #> HLA-DRB1      0.34667535  0.3435079 0.568 0.444         1      HLA-DRB1     NA #> HLA-DPA1      0.35432386  0.6422033 0.545 0.500         1      HLA-DPA1     NA #> CARD16        0.35475812  0.1396680 0.409 0.278         1        CARD16     NA #> HLA-DRB5      0.35956376  0.1505533 0.523 0.361         1      HLA-DRB5     NA #> ZFP36L1       0.36236507 -2.0075334 0.136 0.194         1       ZFP36L1     NA #> RHOC          0.36735744 -0.2360902 0.409 0.250         1          RHOC     NA #> CD247         0.37584672  0.4950876 0.250 0.167         1         CD247     NA #> CFP           0.38055093 -0.4032603 0.364 0.250         1           CFP     NA #> GZMM          0.38163435  0.7040406 0.273 0.194         1          GZMM     NA #> SAT1          0.38637069  0.1496136 0.773 0.639         1          SAT1     NA #> TALDO1        0.38799801 -1.4821323 0.500 0.500         1        TALDO1     NA #> YWHAB         0.40132815  0.3123683 0.523 0.528         1         YWHAB     NA #> FPR1          0.40338593 -1.3374693 0.136 0.194         1          FPR1     NA #> TNFAIP8       0.41017526 -0.6427122 0.250 0.306         1       TNFAIP8     NA #> TTC38         0.41239096  1.2736847 0.136 0.083         1         TTC38     NA #> HVCN1         0.41463077 -2.2939901 0.114 0.167         1         HVCN1     NA #> CCL5          0.41474716 -0.9043819 0.432 0.472         1          CCL5     NA #> LYZ           0.42215674  0.2979607 0.682 0.583         1           LYZ     NA #> VSTM1         0.42420482 -0.2914488 0.114 0.056         1         VSTM1     NA #> CD8A          0.42421612 -0.4965425 0.114 0.056         1          CD8A     NA #> LAMP1         0.42538075 -0.5861493 0.205 0.278         1         LAMP1     NA #> CD200         0.43621807 -2.5445648 0.023 0.056         1         CD200     NA #> CD19          0.44237088 -1.0048143 0.068 0.028         1          CD19     NA #> DLGAP1-AS1    0.44237088  0.5505892 0.068 0.028         1    DLGAP1-AS1     NA #> FCER2         0.45379221 -1.7096009 0.045 0.083         1         FCER2     NA #> FCRLA         0.45379221 -2.2473152 0.045 0.083         1         FCRLA     NA #> TMEM40        0.45934038 -1.4708196 0.068 0.111         1        TMEM40     NA #> ASGR1         0.46444068  1.3781397 0.136 0.083         1         ASGR1     NA #> MMADHC        0.46691934 -1.2601668 0.205 0.250         1        MMADHC     NA #> RP11-693J15.5 0.46780299 -1.9053842 0.045 0.083         1 RP11-693J15.5     NA #> IGLL5         0.47162751 -0.2402105 0.023 0.056         1         IGLL5     NA #> ANXA2         0.47261188  0.1269778 0.614 0.444         1         ANXA2     NA #> S1PR4         0.47993990  1.7654906 0.273 0.194         1         S1PR4     NA #> MYL9          0.48363363 -0.9581845 0.068 0.111         1          MYL9     NA #> COPS6         0.49620744 -0.8663350 0.273 0.194         1         COPS6     NA #> FCN1          0.49830814 -0.5499683 0.386 0.417         1          FCN1     NA #> CD68          0.49979451  0.4068668 0.295 0.222         1          CD68     NA #> SP100         0.50025570 -0.5112157 0.295 0.194         1         SP100     NA #> CD79A         0.50287239 -0.6183097 0.136 0.194         1         CD79A     NA #> GPX1          0.51192812 -0.6122229 0.682 0.639         1          GPX1     NA #> CCR7          0.51836193  1.9506907 0.091 0.056         1          CCR7     NA #> ADAR          0.52877864 -0.1155165 0.182 0.222         1          ADAR     NA #> ACRBP         0.53424169  0.8715893 0.068 0.111         1         ACRBP     NA #> FGFBP2        0.53811724  1.3991481 0.250 0.222         1        FGFBP2     NA #> TYROBP        0.54258037  0.1047340 0.636 0.500         1        TYROBP     NA #> GP9           0.54308166 -0.2629969 0.091 0.139         1           GP9     NA #> ODC1          0.54704146 -0.8462178 0.182 0.222         1          ODC1     NA #> MS4A1         0.54893336 -1.7447339 0.136 0.167         1         MS4A1     NA #> KLRD1         0.55544738  0.5675050 0.159 0.111         1         KLRD1     NA #> LY86          0.56056635  0.1599974 0.250 0.194         1          LY86     NA #> NFKBIA        0.56488054  0.6054230 0.591 0.472         1        NFKBIA     NA #> NKG7          0.56823957  0.2819263 0.477 0.389         1          NKG7     NA #> DNAJB1        0.57140408 -0.2655006 0.227 0.278         1        DNAJB1     NA #> LCK           0.57352870  0.3533948 0.318 0.250         1           LCK     NA #> MPEG1         0.57892640 -0.7608735 0.205 0.139         1         MPEG1     NA #> SMCO4         0.58895599 -0.3460177 0.205 0.139         1         SMCO4     NA #> IL1B          0.60418281  1.0822189 0.205 0.167         1          IL1B     NA #> AIF1          0.60882656  0.1259509 0.545 0.444         1          AIF1     NA #> HNRNPA3       0.60921704 -0.1623689 0.409 0.306         1       HNRNPA3     NA #> AKR1C3        0.61597272  0.9619857 0.114 0.083         1        AKR1C3     NA #> CD14          0.61951529 -1.2948842 0.159 0.194         1          CD14     NA #> CD3E          0.62522103  0.4977330 0.341 0.278         1          CD3E     NA #> GNG11         0.63742523 -1.1347009 0.114 0.139         1         GNG11     NA #> CLIC3         0.64234460  0.9081385 0.114 0.083         1         CLIC3     NA #> CLU           0.64949087 -0.9996102 0.114 0.139         1           CLU     NA #> CTSW          0.65028217 -0.3922628 0.341 0.250         1          CTSW     NA #> STX10         0.65074656 -0.7783398 0.159 0.194         1         STX10     NA #> GZMK          0.66243894 -1.7574529 0.091 0.111         1          GZMK     NA #> IL7R          0.66674361  0.2082191 0.341 0.333         1          IL7R     NA #> PTGDR         0.66918992 -2.7669811 0.114 0.083         1         PTGDR     NA #> S100B         0.67009042  4.1497946 0.045 0.028         1         S100B     NA #> LILRA3        0.67596773 -1.9791945 0.091 0.111         1        LILRA3     NA #> DNAJC2        0.67885156 -0.1544783 0.182 0.139         1        DNAJC2     NA #> GYPC          0.68005668 -0.8651684 0.250 0.278         1          GYPC     NA #> MYO1G         0.68065858  0.6695113 0.409 0.333         1         MYO1G     NA #> IL2RB         0.68277191  0.2945914 0.114 0.083         1         IL2RB     NA #> PPP1R18       0.68939101  0.3244785 0.318 0.278         1       PPP1R18     NA #> NT5C          0.70343211 -1.2694963 0.227 0.167         1          NT5C     NA #> S100A11       0.70479142  0.1499056 0.591 0.528         1       S100A11     NA #> XBP1          0.71198923  0.1016697 0.318 0.250         1          XBP1     NA #> TMEM204       0.71342360  0.4482229 0.045 0.028         1       TMEM204     NA #> S100A8        0.71501151 -1.2624184 0.409 0.306         1        S100A8     NA #> NCOA4         0.73091444 -0.8719660 0.250 0.194         1         NCOA4     NA #> PGRMC1        0.73809476 -0.4498943 0.114 0.083         1        PGRMC1     NA #> CTSB          0.73923287 -0.6614962 0.318 0.250         1          CTSB     NA #> IGFBP7        0.75069884 -0.5043795 0.205 0.222         1        IGFBP7     NA #> CD79B         0.76680522 -1.2150744 0.295 0.278         1         CD79B     NA #> SATB1         0.76687418 -3.0600459 0.068 0.083         1         SATB1     NA #> RP11-290F20.3 0.76832326  0.1220792 0.136 0.111         1 RP11-290F20.3     NA #> HLA-DMB       0.77306125 -0.3343191 0.341 0.278         1       HLA-DMB     NA #> CD2           0.77334050  0.5941658 0.159 0.139         1           CD2     NA #> PIK3IP1       0.77930880  1.4533085 0.159 0.139         1       PIK3IP1     NA #> GZMA          0.78049937 -0.1186839 0.227 0.250         1          GZMA     NA #> PMPCB         0.78121854  0.1265535 0.136 0.111         1         PMPCB     NA #> KIAA0125      0.80780244 -1.8552812 0.045 0.056         1      KIAA0125     NA #> CYB561A3      0.80780244 -1.8289438 0.045 0.056         1      CYB561A3     NA #> CD180         0.80780244 -1.5002871 0.045 0.056         1         CD180     NA #> HNRNPH1       0.82024117 -0.2902894 0.136 0.111         1       HNRNPH1     NA #> IL32          0.82066860 -0.5310219 0.295 0.306         1          IL32     NA #> ASNSD1        0.82403692 -0.2054350 0.068 0.083         1        ASNSD1     NA #> MAL           0.83229313  0.2357011 0.068 0.083         1           MAL     NA #> LINC00926     0.84467238 -0.3201780 0.068 0.056         1     LINC00926     NA #> PPBP          0.85072316 -0.8161701 0.159 0.167         1          PPBP     NA #> HNRNPF        0.85270253 -0.1318392 0.432 0.361         1        HNRNPF     NA #> IL17RA        0.86275280 -1.1075541 0.068 0.056         1        IL17RA     NA #> SRSF7         0.87608406 -1.5599110 0.500 0.472         1         SRSF7     NA #> POP7          0.87628706  1.5192430 0.159 0.139         1          POP7     NA #> PPAPDC1B      0.88090539 -0.8740292 0.068 0.056         1      PPAPDC1B     NA #> NRGN          0.88965687  0.1178269 0.182 0.167         1          NRGN     NA #> XCL2          0.89794707  0.3356016 0.091 0.083         1          XCL2     NA #> CFD           0.90550039 -0.4594260 0.273 0.250         1           CFD     NA #> ITGA2B        0.90877741 -1.4419882 0.114 0.111         1        ITGA2B     NA #> LDHB          0.90895712 -0.1769172 0.523 0.444         1          LDHB     NA #> SDPR          0.91637557 -0.7586314 0.136 0.139         1          SDPR     NA #> EIF4A2        0.92216620 -0.1168652 0.523 0.500         1        EIF4A2     NA #> SPARC         0.92920397 -0.6536246 0.136 0.139         1         SPARC     NA #> S100A9        0.93413505 -0.7924142 0.386 0.389         1        S100A9     NA #> EAF2          0.93677400 -2.6687209 0.114 0.111         1          EAF2     NA #> KHDRBS1       0.94760219 -2.8736243 0.182 0.167         1       KHDRBS1     NA #> C5AR1         0.95034695 -0.9861914 0.159 0.139         1         C5AR1     NA #> HLA-DPB1      0.95531585  0.2193854 0.523 0.556         1      HLA-DPB1     NA #> TYMP          0.95715084 -0.1454613 0.432 0.417         1          TYMP     NA #> CRBN          0.95942509 -0.8320513 0.273 0.222         1          CRBN     NA #> CTSS          0.96412214  0.1540970 0.591 0.611         1          CTSS     NA #> KLRG1         0.96484898 -0.3207581 0.114 0.111         1         KLRG1     NA #> MS4A6A        0.98895497 -0.5252983 0.205 0.194         1        MS4A6A     NA #> NGFRAP1       0.99296761 -0.6881485 0.114 0.111         1       NGFRAP1     NA #> CA2           0.99296761  0.8072664 0.114 0.111         1           CA2     NA #> CD3D          0.99517096 -0.5121695 0.295 0.278         1          CD3D     NA #> RARRES3       0.99556237  0.1837819 0.364 0.389         1       RARRES3     NA #>               diff_pct #> NOSIP            0.261 #> LYAR            -0.230 #> SNHG7            0.212 #> TMUB1            0.154 #> ZNF330           0.114 #> FUOM             0.114 #> CCL4             0.149 #> LINC00936        0.219 #> TSPO             0.298 #> IFI6             0.210 #> VDAC3            0.179 #> SPON2            0.162 #> LGALS2           0.174 #> RPL7L1          -0.131 #> TAF7             0.174 #> FCGR3A           0.182 #> LGALS9           0.162 #> GZMB             0.162 #> CLEC10A          0.126 #> FCER1A           0.126 #> LRRC25           0.162 #> BANK1            0.108 #> GSTP1            0.147 #> SIT1            -0.088 #> ARHGDIA          0.182 #> HLA-DMA          0.164 #> GRN              0.187 #> RUFY1           -0.131 #> MS4A7            0.144 #> IFI30            0.174 #> RGS1             0.103 #> THYN1            0.122 #> PARVB           -0.099 #> PCMT1            0.128 #> FCGRT            0.159 #> BID              0.164 #> GNLY             0.128 #> FCER1G           0.164 #> TAGAP           -0.108 #> BLVRA           -0.106 #> COTL1            0.167 #> HLA-DQA1         0.136 #> VPS28           -0.126 #> GIMAP1           0.159 #> PRF1             0.128 #> SAFB2            0.063 #> EIF3G            0.174 #> NRBP1           -0.076 #> HLA-DQA2         0.111 #> SCO2             0.099 #> PTPN22          -0.066 #> PPP3CC           0.080 #> ZNF76            0.063 #> CD1C             0.063 #> WARS            -0.091 #> EPC1             0.094 #> TCL1A           -0.071 #> CCDC104          0.063 #> GZMH             0.076 #> HLA-DRA          0.088 #> RBP7            -0.071 #> RGS2             0.131 #> MPHOSPH6         0.076 #> TREML1          -0.071 #> TCF7            -0.080 #> PTCRA           -0.066 #> BLOC1S4         -0.076 #> CD9             -0.076 #> TNFRSF1B         0.088 #> TPM4             0.131 #> LST1             0.139 #> FAM96A           0.094 #> SERPINA1         0.091 #> C12orf75        -0.080 #> HLA-DRB1         0.124 #> HLA-DPA1         0.045 #> CARD16           0.131 #> HLA-DRB5         0.162 #> ZFP36L1         -0.058 #> RHOC             0.159 #> CD247            0.083 #> CFP              0.114 #> GZMM             0.079 #> SAT1             0.134 #> TALDO1           0.000 #> YWHAB           -0.005 #> FPR1            -0.058 #> TNFAIP8         -0.056 #> TTC38            0.053 #> HVCN1           -0.053 #> CCL5            -0.040 #> LYZ              0.099 #> VSTM1            0.058 #> CD8A             0.058 #> LAMP1           -0.073 #> CD200           -0.033 #> CD19             0.040 #> DLGAP1-AS1       0.040 #> FCER2           -0.038 #> FCRLA           -0.038 #> TMEM40          -0.043 #> ASGR1            0.053 #> MMADHC          -0.045 #> RP11-693J15.5   -0.038 #> IGLL5           -0.033 #> ANXA2            0.170 #> S1PR4            0.079 #> MYL9            -0.043 #> COPS6            0.079 #> FCN1            -0.031 #> CD68             0.073 #> SP100            0.101 #> CD79A           -0.058 #> GPX1             0.043 #> CCR7             0.035 #> ADAR            -0.040 #> ACRBP           -0.043 #> FGFBP2           0.028 #> TYROBP           0.136 #> GP9             -0.048 #> ODC1            -0.040 #> MS4A1           -0.031 #> KLRD1            0.048 #> LY86             0.056 #> NFKBIA           0.119 #> NKG7             0.088 #> DNAJB1          -0.051 #> LCK              0.068 #> MPEG1            0.066 #> SMCO4            0.066 #> IL1B             0.038 #> AIF1             0.101 #> HNRNPA3          0.103 #> AKR1C3           0.031 #> CD14            -0.035 #> CD3E             0.063 #> GNG11           -0.025 #> CLIC3            0.031 #> CLU             -0.025 #> CTSW             0.091 #> STX10           -0.035 #> GZMK            -0.020 #> IL7R             0.008 #> PTGDR            0.031 #> S100B            0.017 #> LILRA3          -0.020 #> DNAJC2           0.043 #> GYPC            -0.028 #> MYO1G            0.076 #> IL2RB            0.031 #> PPP1R18          0.040 #> NT5C             0.060 #> S100A11          0.063 #> XBP1             0.068 #> TMEM204          0.017 #> S100A8           0.103 #> NCOA4            0.056 #> PGRMC1           0.031 #> CTSB             0.068 #> IGFBP7          -0.017 #> CD79B            0.017 #> SATB1           -0.015 #> RP11-290F20.3    0.025 #> HLA-DMB          0.063 #> CD2              0.020 #> PIK3IP1          0.020 #> GZMA            -0.023 #> PMPCB            0.025 #> KIAA0125        -0.011 #> CYB561A3        -0.011 #> CD180           -0.011 #> HNRNPH1          0.025 #> IL32            -0.011 #> ASNSD1          -0.015 #> MAL             -0.015 #> LINC00926        0.012 #> PPBP            -0.008 #> HNRNPF           0.071 #> IL17RA           0.012 #> SRSF7            0.028 #> POP7             0.020 #> PPAPDC1B         0.012 #> NRGN             0.015 #> XCL2             0.008 #> CFD              0.023 #> ITGA2B           0.003 #> LDHB             0.079 #> SDPR            -0.003 #> EIF4A2           0.023 #> SPARC           -0.003 #> S100A9          -0.003 #> EAF2             0.003 #> KHDRBS1          0.015 #> C5AR1            0.020 #> HLA-DPB1        -0.033 #> TYMP             0.015 #> CRBN             0.051 #> CTSS            -0.020 #> KLRG1            0.003 #> MS4A6A           0.011 #> NGFRAP1          0.003 #> CA2              0.003 #> CD3D             0.017 #> RARRES3         -0.025"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDoubletDetection.html","id":null,"dir":"Reference","previous_headings":"","what":"Run doublet detection on a Seurat object — RunSeuratDoubletDetection","title":"Run doublet detection on a Seurat object — RunSeuratDoubletDetection","text":"Run doublet detection Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDoubletDetection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run doublet detection on a Seurat object — RunSeuratDoubletDetection","text":"","code":"RunSeuratDoubletDetection(   object,   tool = \"DoubletFinder\",   DoubletFinderArgs = list(),   scDblFinderArgs = list(),   filter = TRUE,   log = NULL,   cache = NULL )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDoubletDetection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run doublet detection on a Seurat object — RunSeuratDoubletDetection","text":"object Seurat object tool Doublet detection tool. Either \"DoubletFinder\" \"scDblFinder\" DoubletFinderArgs Arguments pass RunSeuratDoubletFinder scDblFinderArgs Arguments pass RunSeuratScDblFinder filter Whether filter doublets. Default TRUE. want visualize singlets doublets, set FALSE doublets filtered . need filter manually. example: object <- subset(object, subset = DoubletFinder_DropletType != \"doublet\") log Logger cache Directory cache results. Set FALSE disable caching","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDoubletDetection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run doublet detection on a Seurat object — RunSeuratDoubletDetection","text":"Seurat object doublet detection results @misc$doublets","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDoubletFinder.html","id":null,"dir":"Reference","previous_headings":"","what":"Run DoubletFinder on a Seurat object — RunSeuratDoubletFinder","title":"Run DoubletFinder on a Seurat object — RunSeuratDoubletFinder","text":"Run DoubletFinder Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDoubletFinder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run DoubletFinder on a Seurat object — RunSeuratDoubletFinder","text":"","code":"RunSeuratDoubletFinder(   object,   ncores = 1,   PCs = 30,   pN = 0.25,   doublets = 0.075,   log = NULL,   allow_warnings = FALSE )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDoubletFinder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run DoubletFinder on a Seurat object — RunSeuratDoubletFinder","text":"object Seurat object ncores Number cores use PCs Number statistically-significant principal components pN number generated artificial doublets, expressed proportion merged real-artificial data. Default set 0.25, based observation DoubletFinder performance largely pN-invariant (see McGinnis, Murrow Gartner 2019, Cell Systems). doublets expected proportion doublets dataset. Default set 0.075","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratDoubletFinder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run DoubletFinder on a Seurat object — RunSeuratDoubletFinder","text":"Seurat object doublet detection results @misc$doubletFinder","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratIntegration.html","id":null,"dir":"Reference","previous_headings":"","what":"Run data integration on Seurat object — RunSeuratIntegration","title":"Run data integration on Seurat object — RunSeuratIntegration","text":"Run data integration Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratIntegration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run data integration on Seurat object — RunSeuratIntegration","text":"","code":"RunSeuratIntegration(   object,   no_integration = FALSE,   IntegrateLayersArgs = list(),   log = NULL,   cache = NULL )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratIntegration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run data integration on Seurat object — RunSeuratIntegration","text":"object Seurat object no_integration Whether skip integration, just join layers IntegrateLayersArgs Arguments pass Seurat::IntegrateLayers log Logger cache Directory cache results. Set FALSE disable caching","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratIntegration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run data integration on Seurat object — RunSeuratIntegration","text":"Seurat object integrated data","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratScDblFinder.html","id":null,"dir":"Reference","previous_headings":"","what":"Run SCDblFinder on a Seurat object — RunSeuratScDblFinder","title":"Run SCDblFinder on a Seurat object — RunSeuratScDblFinder","text":"Run SCDblFinder Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratScDblFinder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run SCDblFinder on a Seurat object — RunSeuratScDblFinder","text":"","code":"RunSeuratScDblFinder(object, ncores = 1, ...)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratScDblFinder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run SCDblFinder on a Seurat object — RunSeuratScDblFinder","text":"object Seurat object ncores Number cores use ... Additional arguments pass scDblFinder::scDblFinder","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratScDblFinder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run SCDblFinder on a Seurat object — RunSeuratScDblFinder","text":"Seurat object doublet detection results @misc$scDblFinder","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratTransformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Run transformations on a Seurat object — RunSeuratTransformation","title":"Run transformations on a Seurat object — RunSeuratTransformation","text":"Run transformations Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratTransformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run transformations on a Seurat object — RunSeuratTransformation","text":"","code":"RunSeuratTransformation(   object,   use_sct = FALSE,   SCTransformArgs = list(),   NormalizeDataArgs = list(),   FindVariableFeaturesArgs = list(),   ScaleDataArgs = list(),   RunPCAArgs = list(),   log = NULL,   cache = NULL )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratTransformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run transformations on a Seurat object — RunSeuratTransformation","text":"object Seurat object use_sct Whether use Seurat::SCTransform SCTransformArgs Arguments pass Seurat::SCTransform NormalizeDataArgs Arguments pass Seurat::NormalizeData FindVariableFeaturesArgs Arguments pass Seurat::FindVariableFeatures ScaleDataArgs Arguments pass Seurat::ScaleData RunPCAArgs Arguments pass Seurat::RunPCA log Logger cache Directory cache results. Set FALSE disable caching","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratTransformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run transformations on a Seurat object — RunSeuratTransformation","text":"transformed Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/RunSeuratTransformation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run transformations on a Seurat object — RunSeuratTransformation","text":"","code":"# \\donttest{ RunSeuratTransformation(SeuratObject::pbmc_small) #> INFO    [2025-01-21 02:51:33] Performing data transformation and scaling ... #> INFO    [2025-01-21 02:51:33] - Running NormalizeData ... #> INFO    [2025-01-21 02:51:34] - Running FindVariableFeatures ... #> INFO    [2025-01-21 02:51:35] - Running ScaleData ... #> Centering and scaling data matrix #> INFO    [2025-01-21 02:51:36] - Running RunPCA ... #> Warning: You're computing too large a percentage of total singular values, use a standard svd instead. #> PC_ 1  #> Positive:  TYMP, LST1, AIF1, CST3, IFITM3, LYZ, FCGRT, GRN, BID, SERPINA1  #> \t   S100A11, IFI30, CFP, S100A8, S100A9, HLA-DPA1, HLA-DPB1, HLA-DRB1, FCER1G, HCK  #> \t   CTSS, FCN1, CFD, RNF130, TYROBP, HLA-DRB5, LINC00936, SMCO4, HLA-DRA, LGALS1  #> Negative:  CCL5, LCK, CTSW, GZMA, GZMM, CST7, CD7, PRF1, CD3D, RARRES3  #> \t   IL32, CD3E, CD247, FGFBP2, GNLY, LAMP1, GP9, NKG7, GZMH, NGFRAP1  #> \t   TUBB1, GZMB, PF4, GNG11, KLRG1, HIST1H2AC, XBP1, CLU, PGRMC1, GYPC  #> PC_ 2  #> Positive:  GNG11, CLU, SDPR, SPARC, GP9, PF4, HIST1H2AC, PPBP, CD9, ITGA2B  #> \t   CA2, NRGN, TUBB1, TREML1, TMEM40, NGFRAP1, MYL9, PTCRA, PGRMC1, NCOA4  #> \t   RUFY1, ODC1, TSC22D1, ACRBP, GPX1, TPM4, PARVB, FERMT3, TALDO1, SAT1  #> Negative:  IFITM2, NKG7, CST7, CTSW, GZMA, GZMM, LCK, CD7, GNLY, FGFBP2  #> \t   SSR2, XBP1, GZMB, IL32, PRF1, CD247, EIF4A2, HNRNPA3, SRSF7, SPON2  #> \t   CD3D, GZMH, HNRNPF, KLRD1, CCL4, LAMP1, YWHAB, GIMAP1, EIF3G, GYPC  #> PC_ 3  #> Positive:  MS4A1, CD79A, TCL1A, CD79B, LTB, FCER2, HLA-DQB1, HVCN1, PPAPDC1B, CYB561A3  #> \t   CD180, HLA-DMB, FCRLA, LINC00926, KIAA0125, RP11-693J15.5, CXCR4, CD19, LY86, CD200  #> \t   IGLL5, NCF1, SP100, HLA-DRB5, SNHG7, HLA-DQA1, NT5C, HLA-DRB1, HLA-DRA, BANK1  #> Negative:  LGALS1, FCER1G, TYROBP, GZMB, PRF1, GNLY, CCL4, CCL5, FCGR3A, AKR1C3  #> \t   GZMA, FGFBP2, KLRD1, PSAP, GZMH, TTC38, IGFBP7, NKG7, C12orf75, CST7  #> \t   SPON2, RHOC, GZMM, CD247, PCMT1, LAMP1, CTSW, PTGDR, SAT1, GSTP1  #> PC_ 4  #> Positive:  FGFBP2, AKR1C3, GZMB, CCL4, MS4A1, CLIC3, HLA-DRB1, TTC38, CD79A, NT5C  #> \t   TCL1A, IL2RB, GNLY, KLRD1, GZMH, HLA-DMB, PRF1, CTSW, HLA-DPA1, NKG7  #> \t   HLA-DPB1, ARHGDIA, HLA-DQB1, IGFBP7, CST7, C12orf75, XCL2, LY86, CD79B, PTGDR  #> Negative:  CD3D, MAL, SAFB2, IL7R, MPHOSPH6, THYN1, ASNSD1, TAGAP, LDHB, CD2  #> \t   NOSIP, TMEM204, DNAJB1, CCR7, CCDC104, ACAP1, TAF7, TMUB1, LTB, CD3E  #> \t   TMEM123, PIK3IP1, IL32, ACSM3, SRSF7, EPC1, EIF4A2, GYPC, TNFAIP8, BLOC1S4  #> PC_ 5  #> Positive:  FCGR3A, LILRA3, C5AR1, RP11-290F20.3, CD79B, TNFRSF1B, SMCO4, CFD, CD68, CTSS  #> \t   ADAR, VSTM1, EPC1, HVCN1, RHOC, FCN1, SERPINA1, MPHOSPH6, MS4A7, NCF1  #> \t   CLIC3, RBP7, WARS, FAM96A, STX10, FPR1, SCO2, AKR1C3, CD200, BLOC1S4  #> Negative:  FCER1A, CLEC10A, RGS1, CD1C, LGALS2, IL1B, HLA-DMA, HLA-DQA2, FUOM, ZNF330  #> \t   HLA-DQA1, MMADHC, RNF130, MS4A6A, POP7, HNRNPH1, RPL7L1, GPX1, ZFP36L1, LINC00936  #> \t   HLA-DMB, LY86, SRSF7, HSP90AA1, GSTP1, SSR2, SATB1, GZMK, CCL5, HLA-DQB1  #> Warning: Number of dimensions changing from 19 to 50 #> # A Seurat-tibble abstraction: 80 × 15 #> # Features=230 | Cells=80 | Active assay=RNA | Assays=RNA #>    .cell orig.ident nCount_RNA nFeature_RNA RNA_snn_res.0.8 letter.idents groups #>    <chr> <fct>           <dbl>        <int> <fct>           <fct>         <chr>  #>  1 ATGC… SeuratPro…         70           47 0               A             g2     #>  2 CATG… SeuratPro…         85           52 0               A             g1     #>  3 GAAC… SeuratPro…         87           50 1               B             g2     #>  4 TGAC… SeuratPro…        127           56 0               A             g2     #>  5 AGTC… SeuratPro…        173           53 0               A             g2     #>  6 TCTG… SeuratPro…         70           48 0               A             g1     #>  7 TGGT… SeuratPro…         64           36 0               A             g1     #>  8 GCAG… SeuratPro…         72           45 0               A             g1     #>  9 GATA… SeuratPro…         52           36 0               A             g1     #> 10 AATG… SeuratPro…        100           41 0               A             g1     #> # ℹ 70 more rows #> # ℹ 8 more variables: RNA_snn_res.1 <fct>, PC_1 <dbl>, PC_2 <dbl>, PC_3 <dbl>, #> #   PC_4 <dbl>, PC_5 <dbl>, tSNE_1 <dbl>, tSNE_2 <dbl> # }"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/ScRepMutate.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutate scRepertorie object — ScRepMutate","title":"Mutate scRepertorie object — ScRepMutate","text":"Mutate scRepertorie object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/ScRepMutate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutate scRepertorie object — ScRepMutate","text":"","code":"ScRepMutate(screp, mutaters)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/ScRepMutate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mutate scRepertorie object — ScRepMutate","text":"screp scRepertorie object. either Seurat object list data.frames mutaters list expressions (characters) mutate data","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/ScRepMutate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mutate scRepertorie object — ScRepMutate","text":"mutated scRepertorie object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/ScRepMutate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mutate scRepertorie object — ScRepMutate","text":"","code":"# \\donttest{ data(contig_list, package = \"scRepertoire\") screp <- scRepertoire::combineTCR(contig_list) head(ScRepMutate(screp, list(CTaa_len = \"nchar(CTaa)\"))[[1]]) #>               barcode                     TCR1           cdr3_aa1 #> 1  AAACCTGAGTACGACG-1       TRAV25.TRAJ20.TRAC        CGCSNDYKLSF #> 3  AAACCTGCAACACGCC-1 TRAV38-2/DV8.TRAJ52.TRAC CAYRSAQAGGTSYGKLTF #> 5  AAACCTGCAGGCGATA-1      TRAV12-1.TRAJ9.TRAC     CVVSDNTGGFKTIF #> 7  AAACCTGCATGAGCGA-1      TRAV12-1.TRAJ9.TRAC     CVVSDNTGGFKTIF #> 9  AAACGGGAGAGCCCAA-1        TRAV20.TRAJ8.TRAC      CAVRGEGFQKLVF #> 10 AAACGGGAGCGTTTAC-1      TRAV12-1.TRAJ9.TRAC     CVVSDNTGGFKTIF #>                                                  cdr3_nt1 #> 1                       TGTGGGTGTTCTAACGACTACAAGCTCAGCTTT #> 3  TGTGCTTATAGGAGCGCGCAGGCTGGTGGTACTAGCTATGGAAAGCTGACATTT #> 5              TGTGTGGTCTCCGATAATACTGGAGGCTTCAAAACTATCTTT #> 7              TGTGTGGTCTCCGATAATACTGGAGGCTTCAAAACTATCTTT #> 9                 TGTGCTGTGCGAGGAGAAGGCTTTCAGAAACTTGTATTT #> 10             TGTGTGGTCTCCGATAATACTGGAGGCTTCAAAACTATCTTT #>                           TCR2          cdr3_aa2 #> 1   TRBV5-1.None.TRBJ2-7.TRBC2    CASSLTDRTYEQYF #> 3  TRBV10-3.None.TRBJ2-2.TRBC2     CAISEQGKGELFF #> 5     TRBV9.None.TRBJ2-2.TRBC2 CASSVRRERANTGELFF #> 7     TRBV9.None.TRBJ2-2.TRBC2 CASSVRRERANTGELFF #> 9                         <NA>              <NA> #> 10    TRBV9.None.TRBJ2-2.TRBC2 CASSVRRERANTGELFF #>                                               cdr3_nt2 #> 1           TGCGCCAGCAGCTTGACCGACAGGACCTACGAGCAGTACTTC #> 3              TGTGCCATCAGTGAACAGGGGAAAGGGGAGCTGTTTTTT #> 5  TGTGCCAGCAGCGTAAGGAGGGAAAGGGCGAACACCGGGGAGCTGTTTTTT #> 7  TGTGCCAGCAGCGTAAGGAGGGAAAGGGCGAACACCGGGGAGCTGTTTTTT #> 9                                                 <NA> #> 10 TGTGCCAGCAGCGTAAGGAGGGAAAGGGCGAACACCGGGGAGCTGTTTTTT #>                                                  CTgene #> 1         TRAV25.TRAJ20.TRAC_TRBV5-1.None.TRBJ2-7.TRBC2 #> 3  TRAV38-2/DV8.TRAJ52.TRAC_TRBV10-3.None.TRBJ2-2.TRBC2 #> 5          TRAV12-1.TRAJ9.TRAC_TRBV9.None.TRBJ2-2.TRBC2 #> 7          TRAV12-1.TRAJ9.TRAC_TRBV9.None.TRBJ2-2.TRBC2 #> 9                                  TRAV20.TRAJ8.TRAC_NA #> 10         TRAV12-1.TRAJ9.TRAC_TRBV9.None.TRBJ2-2.TRBC2 #>                                                                                              CTnt #> 1                    TGTGGGTGTTCTAACGACTACAAGCTCAGCTTT_TGCGCCAGCAGCTTGACCGACAGGACCTACGAGCAGTACTTC #> 3  TGTGCTTATAGGAGCGCGCAGGCTGGTGGTACTAGCTATGGAAAGCTGACATTT_TGTGCCATCAGTGAACAGGGGAAAGGGGAGCTGTTTTTT #> 5  TGTGTGGTCTCCGATAATACTGGAGGCTTCAAAACTATCTTT_TGTGCCAGCAGCGTAAGGAGGGAAAGGGCGAACACCGGGGAGCTGTTTTTT #> 7  TGTGTGGTCTCCGATAATACTGGAGGCTTCAAAACTATCTTT_TGTGCCAGCAGCGTAAGGAGGGAAAGGGCGAACACCGGGGAGCTGTTTTTT #> 9                                                      TGTGCTGTGCGAGGAGAAGGCTTTCAGAAACTTGTATTT_NA #> 10 TGTGTGGTCTCCGATAATACTGGAGGCTTCAAAACTATCTTT_TGTGCCAGCAGCGTAAGGAGGGAAAGGGCGAACACCGGGGAGCTGTTTTTT #>                                CTaa #> 1        CGCSNDYKLSF_CASSLTDRTYEQYF #> 3  CAYRSAQAGGTSYGKLTF_CAISEQGKGELFF #> 5  CVVSDNTGGFKTIF_CASSVRRERANTGELFF #> 7  CVVSDNTGGFKTIF_CASSVRRERANTGELFF #> 9                  CAVRGEGFQKLVF_NA #> 10 CVVSDNTGGFKTIF_CASSVRRERANTGELFF #>                                                                                                                                               CTstrict #> 1                           TRAV25.TRAJ20.TRAC;TGTGGGTGTTCTAACGACTACAAGCTCAGCTTT_TRBV5-1.None.TRBJ2-7.TRBC2;TGCGCCAGCAGCTTGACCGACAGGACCTACGAGCAGTACTTC #> 3  TRAV38-2/DV8.TRAJ52.TRAC;TGTGCTTATAGGAGCGCGCAGGCTGGTGGTACTAGCTATGGAAAGCTGACATTT_TRBV10-3.None.TRBJ2-2.TRBC2;TGTGCCATCAGTGAACAGGGGAAAGGGGAGCTGTTTTTT #> 5          TRAV12-1.TRAJ9.TRAC;TGTGTGGTCTCCGATAATACTGGAGGCTTCAAAACTATCTTT_TRBV9.None.TRBJ2-2.TRBC2;TGTGCCAGCAGCGTAAGGAGGGAAAGGGCGAACACCGGGGAGCTGTTTTTT #> 7          TRAV12-1.TRAJ9.TRAC;TGTGTGGTCTCCGATAATACTGGAGGCTTCAAAACTATCTTT_TRBV9.None.TRBJ2-2.TRBC2;TGTGCCAGCAGCGTAAGGAGGGAAAGGGCGAACACCGGGGAGCTGTTTTTT #> 9                                                                                      TRAV20.TRAJ8.TRAC;TGTGCTGTGCGAGGAGAAGGCTTTCAGAAACTTGTATTT_NA;NA #> 10         TRAV12-1.TRAJ9.TRAC;TGTGTGGTCTCCGATAATACTGGAGGCTTCAAAACTATCTTT_TRBV9.None.TRBJ2-2.TRBC2;TGTGCCAGCAGCGTAAGGAGGGAAAGGGCGAACACCGGGGAGCTGTTTTTT #>    Sample CTaa_len #> 1      S1       26 #> 3      S1       32 #> 5      S1       32 #> 7      S1       32 #> 9      S1       16 #> 10     S1       32 # }"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/ScRepSubset.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset scRepertorie object — ScRepSubset","title":"Subset scRepertorie object — ScRepSubset","text":"Subset scRepertorie object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/ScRepSubset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset scRepertorie object — ScRepSubset","text":"","code":"ScRepSubset(screp, subset)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/ScRepSubset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset scRepertorie object — ScRepSubset","text":"screp scRepertorie object. either Seurat object list data.frames subset subset expression (characters)","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/ScRepSubset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset scRepertorie object — ScRepSubset","text":"subsetted scRepertorie object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/ScRepSubset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset scRepertorie object — ScRepSubset","text":"","code":"# \\donttest{ data(contig_list, package = \"scRepertoire\") screp <- scRepertoire::combineTCR(contig_list,    samples = c(\"P17B\", \"P17L\", \"P18B\", \"P18L\", \"P19B\",\"P19L\", \"P20B\", \"P20L\"))  head(ScRepSubset(screp, \"nchar(CTaa) < 20\")[[1]]) #>                   barcode sample              TCR1      cdr3_aa1 #> 1 P17B_AAACGGGAGAGCCCAA-1   P17B TRAV20.TRAJ8.TRAC CAVRGEGFQKLVF #> 2 P17B_AAAGTAGAGGCTACGA-1   P17B              <NA>          <NA> #> 3 P17B_AAATGCCGTCGACTGC-1   P17B              <NA>          <NA> #> 4 P17B_AACCATGCAACGATGG-1   P17B              <NA>          <NA> #> 5 P17B_AACCGCGCACTCGACG-1   P17B              <NA>          <NA> #> 6 P17B_AACTCAGGTCTAACGT-1   P17B              <NA>          <NA> #>                                  cdr3_nt1                       TCR2 #> 1 TGTGCTGTGCGAGGAGAAGGCTTTCAGAAACTTGTATTT                       <NA> #> 2                                    <NA> TRBV3-1.None.TRBJ1-1.TRBC1 #> 3                                    <NA> TRBV3-1.None.TRBJ1-1.TRBC1 #> 4                                    <NA>  TRBV27.None.TRBJ2-1.TRBC2 #> 5                                    <NA> TRBV4-3.None.TRBJ1-1.TRBC1 #> 6                                    <NA> TRBV6-2.None.TRBJ2-1.TRBC2 #>           cdr3_aa2                                         cdr3_nt2 #> 1             <NA>                                             <NA> #> 2   CAAGQGVMNTEAFF       TGTGCCGCGGGGCAGGGGGTCATGAACACTGAAGCTTTCTTT #> 3   CAAGQGVMNTEAFF       TGTGCCGCGGGGCAGGGGGTCATGAACACTGAAGCTTTCTTT #> 4 CASSLGSGGTGNEQFF TGTGCCAGCAGTTTAGGGTCGGGGGGGACGGGGAATGAGCAGTTCTTC #> 5    CASSQDSFTEAFF          TGCGCCAGCAGCCAAGACAGTTTCACTGAAGCTTTCTTT #> 6 CASSWSKTSGRDEQFF TGTGCCAGCAGTTGGAGTAAGACTAGCGGGAGGGATGAGCAGTTCTTC #>                          CTgene #> 1          TRAV20.TRAJ8.TRAC_NA #> 2 NA_TRBV3-1.None.TRBJ1-1.TRBC1 #> 3 NA_TRBV3-1.None.TRBJ1-1.TRBC1 #> 4  NA_TRBV27.None.TRBJ2-1.TRBC2 #> 5 NA_TRBV4-3.None.TRBJ1-1.TRBC1 #> 6 NA_TRBV6-2.None.TRBJ2-1.TRBC2 #>                                                  CTnt                CTaa #> 1          TGTGCTGTGCGAGGAGAAGGCTTTCAGAAACTTGTATTT_NA    CAVRGEGFQKLVF_NA #> 2       NA_TGTGCCGCGGGGCAGGGGGTCATGAACACTGAAGCTTTCTTT   NA_CAAGQGVMNTEAFF #> 3       NA_TGTGCCGCGGGGCAGGGGGTCATGAACACTGAAGCTTTCTTT   NA_CAAGQGVMNTEAFF #> 4 NA_TGTGCCAGCAGTTTAGGGTCGGGGGGGACGGGGAATGAGCAGTTCTTC NA_CASSLGSGGTGNEQFF #> 5          NA_TGCGCCAGCAGCCAAGACAGTTTCACTGAAGCTTTCTTT    NA_CASSQDSFTEAFF #> 6 NA_TGTGCCAGCAGTTGGAGTAAGACTAGCGGGAGGGATGAGCAGTTCTTC NA_CASSWSKTSGRDEQFF #>                                                                            CTstrict #> 1                   TRAV20.TRAJ8.TRAC;TGTGCTGTGCGAGGAGAAGGCTTTCAGAAACTTGTATTT_NA;NA #> 2       NA;NA_TRBV3-1.None.TRBJ1-1.TRBC1;TGTGCCGCGGGGCAGGGGGTCATGAACACTGAAGCTTTCTTT #> 3       NA;NA_TRBV3-1.None.TRBJ1-1.TRBC1;TGTGCCGCGGGGCAGGGGGTCATGAACACTGAAGCTTTCTTT #> 4  NA;NA_TRBV27.None.TRBJ2-1.TRBC2;TGTGCCAGCAGTTTAGGGTCGGGGGGGACGGGGAATGAGCAGTTCTTC #> 5          NA;NA_TRBV4-3.None.TRBJ1-1.TRBC1;TGCGCCAGCAGCCAAGACAGTTTCACTGAAGCTTTCTTT #> 6 NA;NA_TRBV6-2.None.TRBJ2-1.TRBC2;TGTGCCAGCAGTTGGAGTAAGACTAGCGGGAGGGATGAGCAGTTCTTC #>   Sample #> 1   P17B #> 2   P17B #> 3   P17B #> 4   P17B #> 5   P17B #> 6   P17B names(ScRepSubset(screp, \"Sample %in% c('P17B', 'P17L')\")) #> [1] \"P17B\" \"P17L\" # }"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizDEGs.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize DEGs — VizDEGs","title":"Visualize DEGs — VizDEGs","text":"Visualize differentially expressed genes","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizDEGs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize DEGs — VizDEGs","text":"","code":"VizDEGs(   degs,   plot_type = c(\"volcano_pct\", \"volcano_log2fc\", \"violin\", \"box\", \"bar\", \"ridge\", \"dim\",     \"heatmap\", \"dot\"),   order_by = \"desc(abs(avg_log2FC))\",   genes = 10,   outprefix = NULL,   devpars = list(res = 100),   more_formats = c(),   save_code = FALSE,   show_row_names = TRUE,   show_column_names = TRUE,   ... )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizDEGs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize DEGs — VizDEGs","text":"degs DEGs RunSeuratDEAnalysis plot_type Type plot generate One 'volcano_pct', 'volcano_log2fc', 'violin', 'box', 'bar', 'ridge', 'dim', 'heatmap', 'dot' order_by expression string order genes genes Number genes genes visualize (based 'order_by' expression) expression string filter genes (passed dplyr::filter) works plot_type volcano plot outprefix Prefix output file devpars List parameters save plot more_formats Additional formats save plot addition 'png' save_code Whether save code reproduce plot show_row_names Whether show row names heatmap show_column_names Whether show column names heatmap ... Additional arguments pass plot function 'volcano_pct' 'volcano_log2fc', additional arguments pass 'scplotter::VolcanoPlot' 'violin', 'box', 'bar', 'ridge', 'dim', 'heatmap', 'dot', additional arguments pass 'scplotter::FeatureStatPlot'","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizDEGs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize DEGs — VizDEGs","text":"ggplot object 'outprefix' NULL, otherwise, save plot output directory","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizDEGs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize DEGs — VizDEGs","text":"","code":"# \\donttest{ degs <- suppressWarnings(RunSeuratDEAnalysis(SeuratObject::pbmc_small, \"groups\", \"g1\", \"g2\")) VizDEGs(degs, plot_type = \"volcano_pct\")  VizDEGs(degs, plot_type = \"volcano_log2fc\")  VizDEGs(degs, plot_type = \"violin\")  VizDEGs(degs, plot_type = \"box\")  VizDEGs(degs, plot_type = \"bar\")  VizDEGs(degs, plot_type = \"ridge\") #> Picking joint bandwidth of 0.598 #> Picking joint bandwidth of 0.474 #> Picking joint bandwidth of 0.698 #> Picking joint bandwidth of 0.747 #> Picking joint bandwidth of 0.605 #> Picking joint bandwidth of 0.371 #> Picking joint bandwidth of 0.557 #> Picking joint bandwidth of 0.493 #> Picking joint bandwidth of 0.778 #> Picking joint bandwidth of 0.532 #> Picking joint bandwidth of 0.598 #> Picking joint bandwidth of 0.474 #> Picking joint bandwidth of 0.698 #> Picking joint bandwidth of 0.747 #> Picking joint bandwidth of 0.605 #> Picking joint bandwidth of 0.371 #> Picking joint bandwidth of 0.557 #> Picking joint bandwidth of 0.493 #> Picking joint bandwidth of 0.778 #> Picking joint bandwidth of 0.532  VizDEGs(degs, plot_type = \"dim\")  # VizDEGs(degs, plot_type = \"heatmap\") # VizDEGs(degs, plot_type = \"dot\") # }"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizEnrich.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Enrichment — VizEnrich","title":"Visualize Enrichment — VizEnrich","text":"Visualize enrichment (-representation) analysis results","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizEnrich.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Enrichment — VizEnrich","text":"","code":"VizEnrich(   enrich,   outprefix = NULL,   devpars = list(res = 100),   more_formats = c(),   save_code = FALSE,   ... )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizEnrich.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Enrichment — VizEnrich","text":"enrich Enrichment object RunEnrichment outprefix Prefix output file devpars List parameters save plot more_formats Additional formats save plot addition 'png' save_code Whether save code reproduce plot ... Additional arguments pass plot function scplotter::EnrichmentPlot","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizEnrich.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Enrichment — VizEnrich","text":"ggplot object 'outprefix' NULL, otherwise, save plot output directory","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizEnrich.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Enrichment — VizEnrich","text":"","code":"# \\donttest{ degs <- suppressWarnings(RunSeuratDEAnalysis(SeuratObject::pbmc_small, \"groups\", \"g1\", \"g2\")) enrich <- RunEnrichment(degs, deg = \"abs(avg_log2FC) > 1\") #> Connection changed to https://maayanlab.cloud/Enrichr/ #> Connection is Live! #> Uploading data to Enrichr... Done. #>   Querying KEGG_2021_Human... Done. #> Parsing results... Done. VizEnrich(enrich)  VizEnrich(enrich, plot_type = \"dot\")  VizEnrich(enrich, plot_type = \"lollipop\")  VizEnrich(enrich, plot_type = \"network\") #> Warning: Unknown or uninitialised column: `Database`.  # VizEnrich(enrich, plot_type = \"enrichmap\") # VizEnrich(enrich, plot_type = \"wordcloud\") # }"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratCellQC.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Cell QC metrics of Seurat object — VizSeuratCellQC","title":"Visualize Cell QC metrics of Seurat object — VizSeuratCellQC","text":"Visualize Cell QC metrics Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratCellQC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Cell QC metrics of Seurat object — VizSeuratCellQC","text":"","code":"VizSeuratCellQC(   object,   features = c(\"nFeature_RNA\", \"nCount_RNA\", \"percent.mt\", \"percent.ribo\", \"percent.hb\",     \"percent.plat\"),   plot_type = c(\"violin\", \"box\", \"scatter\", \"ridge\"),   scatter_x = \"nCount_RNA\",   palette = \"Set2\",   ... )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratCellQC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Cell QC metrics of Seurat object — VizSeuratCellQC","text":"object Seurat object cell QC metrics features Features visualize plot_type Type plot generate One 'violin', 'box', 'scatter', 'ridge' scatter_x Feature use x-axis scatter plot. one features, removed features palette Color palette use ... Additional arguments pass plot function","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratCellQC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Cell QC metrics of Seurat object — VizSeuratCellQC","text":"plot","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratDoublets.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize detected doublets — VizSeuratDoublets","title":"Visualize detected doublets — VizSeuratDoublets","text":"Visualize detected doublets","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratDoublets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize detected doublets — VizSeuratDoublets","text":"","code":"VizSeuratDoublets(   object,   plot_type = c(\"dim\", \"pie\", \"pk\", \"pK\"),   palette = \"Set2\",   ... )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratDoublets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize detected doublets — VizSeuratDoublets","text":"object Seurat object detected doublets plot_type Type plot generate One 'dim', 'pie', 'pk', 'pK'. dim/pie show distribution doublets droplet type. pk/pK show relationship BC metric pK using DoubletFinder. palette Color palette use ... Additional arguments pass plot function 'dim',  additional arguments pass scplotter::CellDimPlot 'pie',  additional arguments pass plotthis::PieChart 'pk' 'pK', additional arguments pass plotthis::LinePlot","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratDoublets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize detected doublets — VizSeuratDoublets","text":"plot","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratDoublets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize detected doublets — VizSeuratDoublets","text":"","code":"# \\donttest{ datadir <- system.file(\"extdata\", \"scrna\", package = \"biopipen.utils\") meta <- data.frame(     Sample = c(\"Sample1\", \"Sample2\"),     RNAData = c(         file.path(datadir, \"Sample1\"),         file.path(datadir, \"Sample2\")     ) )  obj <- LoadSeuratAndPerformQC(meta, cache = FALSE, gene_qc = list(min_cells = 3),     cell_qc = \"nFeature_RNA > 500\") #> INFO    [2025-01-21 02:51:52] Loading each sample ... #> INFO    [2025-01-21 02:51:52] - Loading sample Sample1 ... #> INFO    [2025-01-21 02:51:52] - Loading sample Sample2 ... #> INFO    [2025-01-21 02:51:52] Merging samples ... #> INFO    [2025-01-21 02:51:53] Performing cell QC ... #> INFO    [2025-01-21 02:51:53] Performing gene QC ... VizSeuratCellQC(obj)  VizSeuratCellQC(obj, plot_type = \"scatter\")  VizSeuratCellQC(obj, plot_type = \"ridge\") #> Picking joint bandwidth of 177 #> Picking joint bandwidth of 61.9 #> Picking joint bandwidth of 0.341 #> Picking joint bandwidth of 0.341 #> Picking joint bandwidth of 0.341 #> Picking joint bandwidth of 0.341 #> Picking joint bandwidth of 177 #> Picking joint bandwidth of 61.9 #> Picking joint bandwidth of 0.341 #> Picking joint bandwidth of 0.341 #> Picking joint bandwidth of 0.341 #> Picking joint bandwidth of 0.341  VizSeuratGeneQC(obj)   obj <- RunSeuratTransformation(obj) #> INFO    [2025-01-21 02:51:56] Performing data transformation and scaling ... #> INFO    [2025-01-21 02:51:56] - Running NormalizeData ... #> Normalizing layer: counts.Sample1 #> Normalizing layer: counts.Sample2 #> INFO    [2025-01-21 02:51:58] - Running FindVariableFeatures ... #> Finding variable features for layer counts.Sample1 #> Finding variable features for layer counts.Sample2 #> INFO    [2025-01-21 02:51:59] - Running ScaleData ... #> Centering and scaling data matrix #> INFO    [2025-01-21 02:52:00] - Running RunPCA ... #> PC_ 1  #> Positive:  ENSG00000172005, ENSG00000230885, ENSG00000013297, ENSG00000123560, ENSG00000168314, ENSG00000173786, ENSG00000174607, ENSG00000167641, ENSG00000105695, ENSG00000091513  #> \t   ENSG00000136541, ENSG00000103089, ENSG00000184221, ENSG00000197971, ENSG00000197430, ENSG00000115290, ENSG00000134198, ENSG00000159176, ENSG00000139433, ENSG00000188643  #> \t   ENSG00000104267, ENSG00000205116, ENSG00000171766, ENSG00000148180, ENSG00000120913, ENSG00000102934, ENSG00000127920, ENSG00000169562, ENSG00000189058, ENSG00000105894  #> Negative:  ENSG00000128683, ENSG00000143153, ENSG00000102804, ENSG00000197457, ENSG00000132639, ENSG00000139970, ENSG00000133169, ENSG00000125869, ENSG00000213190, ENSG00000101489  #> \t   ENSG00000213760, ENSG00000122952, ENSG00000182698, ENSG00000151778, ENSG00000152954, ENSG00000105649, ENSG00000168081, ENSG00000104490, ENSG00000170004, ENSG00000170091  #> \t   ENSG00000162188, ENSG00000148908, ENSG00000115738, ENSG00000250479, ENSG00000100092, ENSG00000273079, ENSG00000157152, ENSG00000152932, ENSG00000276734, ENSG00000119900  #> PC_ 2  #> Positive:  ENSG00000139182, ENSG00000172247, ENSG00000197106, ENSG00000092096, ENSG00000111897, ENSG00000101438, ENSG00000181790, ENSG00000071553, ENSG00000101180, ENSG00000187730  #> \t   ENSG00000143153, ENSG00000174437, ENSG00000179222, ENSG00000187957, ENSG00000171951, ENSG00000063015, ENSG00000163536, ENSG00000185818, ENSG00000163399, ENSG00000135472  #> \t   ENSG00000152583, ENSG00000105409, ENSG00000179218, ENSG00000182636, ENSG00000157087, ENSG00000180155, ENSG00000135916, ENSG00000069667, ENSG00000058404, ENSG00000144283  #> Negative:  ENSG00000143947, ENSG00000088986, ENSG00000126267, ENSG00000138326, ENSG00000109846, ENSG00000171858, ENSG00000145592, ENSG00000197756, ENSG00000108518, ENSG00000169567  #> \t   ENSG00000134419, ENSG00000142534, ENSG00000175130, ENSG00000088832, ENSG00000116030, ENSG00000147604, ENSG00000196531, ENSG00000240972, ENSG00000110700, ENSG00000233954  #> \t   ENSG00000100442, ENSG00000173915, ENSG00000177600, ENSG00000137154, ENSG00000114391, ENSG00000272835, ENSG00000177432, ENSG00000178449, ENSG00000156976, ENSG00000131495  #> PC_ 3  #> Positive:  ENSG00000087258, ENSG00000172809, ENSG00000213741, ENSG00000170027, ENSG00000142541, ENSG00000161016, ENSG00000161970, ENSG00000145592, ENSG00000233927, ENSG00000197756  #> \t   ENSG00000132535, ENSG00000146676, ENSG00000110076, ENSG00000071082, ENSG00000106244, ENSG00000198918, ENSG00000182899, ENSG00000048740, ENSG00000073969, ENSG00000173376  #> \t   ENSG00000175352, ENSG00000122026, ENSG00000161681, ENSG00000118473, ENSG00000189056, ENSG00000089169, ENSG00000118432, ENSG00000138326, ENSG00000136854, ENSG00000198300  #> Negative:  ENSG00000136156, ENSG00000166922, ENSG00000099797, ENSG00000110651, ENSG00000117410, ENSG00000101439, ENSG00000116459, ENSG00000143198, ENSG00000182698, ENSG00000111716  #> \t   ENSG00000184277, ENSG00000128463, ENSG00000102471, ENSG00000014641, ENSG00000005022, ENSG00000134333, ENSG00000144746, ENSG00000133872, ENSG00000182636, ENSG00000151729  #> \t   ENSG00000062716, ENSG00000123395, ENSG00000151366, ENSG00000140740, ENSG00000075415, ENSG00000109472, ENSG00000044574, ENSG00000080824, ENSG00000166736, ENSG00000277791  #> PC_ 4  #> Positive:  ENSG00000179218, ENSG00000128564, ENSG00000179292, ENSG00000105290, ENSG00000166963, ENSG00000174437, ENSG00000110025, ENSG00000167552, ENSG00000092096, ENSG00000176884  #> \t   ENSG00000156261, ENSG00000110955, ENSG00000054523, ENSG00000117691, ENSG00000166736, ENSG00000006451, ENSG00000143740, ENSG00000154917, ENSG00000167614, ENSG00000139182  #> \t   ENSG00000182636, ENSG00000166165, ENSG00000134121, ENSG00000273761, ENSG00000088367, ENSG00000152583, ENSG00000240849, ENSG00000006118, ENSG00000169925, ENSG00000188517  #> Negative:  ENSG00000113387, ENSG00000161970, ENSG00000100442, ENSG00000178531, ENSG00000233927, ENSG00000213741, ENSG00000182899, ENSG00000109270, ENSG00000196262, ENSG00000145592  #> \t   ENSG00000134809, ENSG00000173372, ENSG00000261857, ENSG00000119979, ENSG00000166441, ENSG00000172809, ENSG00000244694, ENSG00000135070, ENSG00000214736, ENSG00000131495  #> \t   ENSG00000156482, ENSG00000122026, ENSG00000213190, ENSG00000197756, ENSG00000240972, ENSG00000155849, ENSG00000197584, ENSG00000182698, ENSG00000137154, ENSG00000143727  #> PC_ 5  #> Positive:  ENSG00000155849, ENSG00000105048, ENSG00000188730, ENSG00000115738, ENSG00000089220, ENSG00000130066, ENSG00000171119, ENSG00000183166, ENSG00000119900, ENSG00000198739  #> \t   ENSG00000130592, ENSG00000278588, ENSG00000105516, ENSG00000174871, ENSG00000151276, ENSG00000157193, ENSG00000154229, ENSG00000076356, ENSG00000198363, ENSG00000168993  #> \t   ENSG00000130226, ENSG00000167549, ENSG00000240891, ENSG00000185630, ENSG00000119421, ENSG00000111674, ENSG00000120963, ENSG00000105364, ENSG00000135824, ENSG00000196353  #> Negative:  ENSG00000173376, ENSG00000189056, ENSG00000118432, ENSG00000198785, ENSG00000137726, ENSG00000143195, ENSG00000162545, ENSG00000178568, ENSG00000145242, ENSG00000196090  #> \t   ENSG00000134121, ENSG00000138650, ENSG00000120833, ENSG00000035862, ENSG00000155052, ENSG00000166006, ENSG00000182220, ENSG00000118971, ENSG00000122584, ENSG00000249992  #> \t   ENSG00000170419, ENSG00000092421, ENSG00000174460, ENSG00000115252, ENSG00000139970, ENSG00000153956, ENSG00000170540, ENSG00000145681, ENSG00000173805, ENSG00000134419  obj <- RunSeuratIntegration(obj) #> INFO    [2025-01-21 02:52:02] Performing data integration ... #> INFO    [2025-01-21 02:52:02] - Running IntegrateLayers (method = rpca) ... #> Computing within dataset neighborhoods #> Finding all pairwise anchors #> Projecting new data onto SVD #> Projecting new data onto SVD #> Finding neighborhoods #> Finding anchors #> \tFound 233 anchors #> Merging dataset 2 into 1 #> Extracting anchors for merged samples #> Finding integration vectors #> Finding integration vector weights #> Integrating data #> INFO    [2025-01-21 02:52:05] - Joining layers ... obj <- RunSeuratDoubletDetection(obj, tool = \"scDblFinder\", filter = FALSE) #> INFO    [2025-01-21 02:52:06] Running doublet detection using scDblFinder ... #> Assuming the input to be a matrix of counts or expected counts. #> Creating ~1500 artificial doublets... #> Dimensional reduction #> Evaluating kNN... #> Training model... #> iter=0, 23 cells excluded from training. #> iter=1, 21 cells excluded from training. #> iter=2, 21 cells excluded from training. #> Threshold found:0.725 #> 17 (4.2%) doublets called VizSeuratDoublets(obj)  VizSeuratDoublets(obj, plot_type = \"pie\")  # }"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratGeneQC.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize gene QC metrics of Seurat object — VizSeuratGeneQC","title":"Visualize gene QC metrics of Seurat object — VizSeuratGeneQC","text":"Visualize gene QC metrics Seurat object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratGeneQC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize gene QC metrics of Seurat object — VizSeuratGeneQC","text":"","code":"VizSeuratGeneQC(object, features = 10, ...)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratGeneQC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize gene QC metrics of Seurat object — VizSeuratGeneQC","text":"object Seurat object gene QC metrics features Number features/actual features visualize actual features given, must features excluded gene QC ... Additional arguments pass plot function plotthis::BarPlot","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/VizSeuratGeneQC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize gene QC metrics of Seurat object — VizSeuratGeneQC","text":"plot","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/bQuote.html","id":null,"dir":"Reference","previous_headings":"","what":"backtick quoting — bQuote","title":"backtick quoting — bQuote","text":"backtick quoting","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/bQuote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"backtick quoting — bQuote","text":"","code":"bQuote(x, force = FALSE)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/bQuote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"backtick quoting — bQuote","text":"x character vector force whether force backtick quoting","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/bQuote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"backtick quoting — bQuote","text":"backtick quoted character vector","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/bQuote.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"backtick quoting — bQuote","text":"","code":"bQuote(c(\"a\", \"b\", \"c\")) #> [1] \"a\" \"b\" \"c\" # [1] \"a\" \"b\" \"c\" bQuote(c(\"a 1\", \"b 2\", \"c 3\")) #> [1] \"`a 1`\" \"`b 2`\" \"`c 3`\" # [1] \"`a 1`\" \"`b 2`\" \"`c 3`\""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/case_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Create information for a casename — case_info","title":"Create information for a casename — case_info","text":"Create information casename","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/case_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create information for a casename — case_info","text":"","code":"case_info(name, outdir, is_dir = TRUE, create = FALSE)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/case_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create information for a casename — case_info","text":"name casename Sections separated :: casename section specified, case created section directory outdir output directory, case directory created prefix is_dir Whether create directory case Otherwise, prefix returned. create Create directory exists is_dir TRUE, otherwise, create parent directory prefix.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/case_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create information for a casename — case_info","text":"list information, including: name: name case, without sections section: sections case vector slug: slugified name section_slug: slugified sections prefix: prefix case, either directory file path prefix","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/do_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Call a function with a list of arguments — do_call","title":"Call a function with a list of arguments — do_call","text":"Different .call, faster version, especially big objects list.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/do_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call a function with a list of arguments — do_call","text":"","code":"do_call(fn, args, quote = FALSE, envir = parent.frame())"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/do_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call a function with a list of arguments — do_call","text":"fn function call args list arguments pass function quote Whether quote arguments envir environment evaluate function ","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/do_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call a function with a list of arguments — do_call","text":"result function call","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/expand_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand the cases with default values — expand_cases","title":"Expand the cases with default values — expand_cases","text":"Expand cases default values","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/expand_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand the cases with default values — expand_cases","text":"","code":"expand_cases(cases, defaults, post = NULL, default_case = \"DEFAULT\")"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/expand_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand the cases with default values — expand_cases","text":"cases list cases defaults list default values post function post-handling case, returning list name case. One can also return multiple cases based demand. cases returned finally merged. default_case name default case","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/expand_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand the cases with default values — expand_cases","text":"list expanded cases","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/extract_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract variables from a named list — extract_vars","title":"Extract variables from a named list — extract_vars","text":"Extract variables named list","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/extract_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract variables from a named list — extract_vars","text":"","code":"extract_vars(x, ..., keep = FALSE, env = parent.frame())"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/extract_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract variables from a named list — extract_vars","text":"x named list ... names variables named arguments allowed rename variables. b = \"\" extract assign b keep Keep extracted variables list env environment assign extracted variables","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/extract_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract variables from a named list — extract_vars","text":"list /ithout extracted variables","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/format_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Format the arguments for debugging — format_args","title":"Format the arguments for debugging — format_args","text":"Format arguments debugging","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/format_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format the arguments for debugging — format_args","text":"","code":"format_args(args)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/format_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format the arguments for debugging — format_args","text":"args arguments format","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/format_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format the arguments for debugging — format_args","text":"formatted arguments","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/gene_name_conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert gene names between different formats — gene_name_conversion","title":"Convert gene names between different formats — gene_name_conversion","text":"Convert gene names different formats","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/gene_name_conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert gene names between different formats — gene_name_conversion","text":"","code":"gene_name_conversion(   genes,   infmt,   outfmt,   dup = \"first\",   species = \"human\",   notfound = \"na\",   suppress_messages = TRUE )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/gene_name_conversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert gene names between different formats — gene_name_conversion","text":"genes character/integer vector gene names/ids infmt character vector input gene name formats See available scopes https://docs.mygene.info/en/latest/doc/data.html#available-fields can use ensg shortcut ensembl.gene outfmt character vector output gene name formats dup deal duplicate gene names found. \"first\": keep first one (default), sorted score descendingly \"last\": keep last one, sorted score descendingly \"\": keep , separate row \"<X>\": combine single string, separated X species character vector species names notfound deal gene names found \"error\": stop error message \"use-query\": use query gene name converted gene name \"skip\": skip gene names found \"ignore\": \"skip\" \"na\"/\"NA\": use NA converted gene name (default) suppress_messages Whether suppress warning messages","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/gene_name_conversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert gene names between different formats — gene_name_conversion","text":"tibble query gene names converted gene names gene name found, converted name NA duplicate gene names found, one highest score kept","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_cached.html","id":null,"dir":"Reference","previous_headings":"","what":"Get signatures and cached data — get_cached","title":"Get signatures and cached data — get_cached","text":"Get signatures cached data","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_cached.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get signatures and cached data — get_cached","text":"","code":"get_cached(x, kind, cache_dir)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_cached.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get signatures and cached data — get_cached","text":"x object infer signature kind string indicating kind object Used part filename cached file cache_dir string indicating directory store cached files","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_cached.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get signatures and cached data — get_cached","text":"list containing signature, digested signature cached data","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_cached.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get signatures and cached data — get_cached","text":"function used get signature object cached data exists. signature used identify object cached data used avoid recomputing object.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup and return the logger — get_logger","title":"Setup and return the logger — get_logger","text":"Setup return logger","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup and return the logger — get_logger","text":"","code":"get_logger(   format =     \"{sprintf(\\\"%-7s\\\", level)} [{format(time, \\\"%Y-%m-%d %H:%M:%S\\\")}] {msg}\",   appender = \"stdout\",   level = \"INFO\" )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup and return the logger — get_logger","text":"format format log message. format passed logger::layout_glue_generator. default format generate log message like: INFO    [2021-01-01 00:00:00] Hello world appender appender use. Default \"stdout\" Either string logger appender object. string provided, converted corresponding logger appender object. example, \"stdout\" converted logger::appender_stdout level log level. Default \"INFO\" Either string logger level object. string provided, converted corresponding logger level object. example, \"INFO\" converted logger::INFO","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup and return the logger — get_logger","text":"list logging functions","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_reporter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a reporter object — get_reporter","title":"Get a reporter object — get_reporter","text":"shortcut create reporter object Reporter$new()","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_reporter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a reporter object — get_reporter","text":"","code":"get_reporter()"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/get_reporter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a reporter object — get_reporter","text":"reporter object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/gettempdir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the temporary directory, without suffix. It works like tempfile.gettempdir() in Python. — gettempdir","title":"Get the temporary directory, without suffix. It works like tempfile.gettempdir() in Python. — gettempdir","text":"Get temporary directory, without suffix. works like tempfile.gettempdir() Python.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/gettempdir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the temporary directory, without suffix. It works like tempfile.gettempdir() in Python. — gettempdir","text":"","code":"gettempdir()"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/gettempdir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the temporary directory, without suffix. It works like tempfile.gettempdir() in Python. — gettempdir","text":"temporary directory","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/html_escape.html","id":null,"dir":"Reference","previous_headings":"","what":"Escape HTML entities — html_escape","title":"Escape HTML entities — html_escape","text":"Escape HTML entities","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/html_escape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Escape HTML entities — html_escape","text":"","code":"html_escape(text)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/html_escape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Escape HTML entities — html_escape","text":"text Text escape","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/html_escape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Escape HTML entities — html_escape","text":"Escaped text","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_rename.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename to names of a list — list_rename","title":"Rename to names of a list — list_rename","text":"Rename names list","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename to names of a list — list_rename","text":"","code":"list_rename(x, fn)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename to names of a list — list_rename","text":"x list fn function rename names. function returns NULL FALSE, name removed. function returns TRUE, name kept. function returns string, name changed string. function can take 1 2 arguments, first name, second value.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_rename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename to names of a list — list_rename","text":"list renamed names","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the first list based on other lists — list_update","title":"Update the first list based on other lists — list_update","text":"Update first list based lists","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the first list based on other lists — list_update","text":"","code":"list_update(x, ..., depth = -1L)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the first list based on other lists — list_update","text":"x first list ... lists depth depth update, -1 means update ","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the first list based on other lists — list_update","text":"updated list","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_update2.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a list with another list — list_update2","title":"Update a list with another list — list_update2","text":"Update list another list","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_update2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a list with another list — list_update2","text":"","code":"list_update2(x, y, depth = -1L)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_update2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a list with another list — list_update2","text":"x list y list depth depth update, -1 means update ","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/list_update2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a list with another list — list_update2","text":"updated list","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-1.html","id":null,"dir":"Reference","previous_headings":"","what":"Get more_than, less_than, emerged or vanished entities from a data frame. — .size_compare","title":"Get more_than, less_than, emerged or vanished entities from a data frame. — .size_compare","text":"more_than: Select entities counts first group second group. less_than: Select entities less counts first group second group. emerged: Select entities counts first group second group. vanished: Select entities counts second group first group.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get more_than, less_than, emerged or vanished entities from a data frame. — .size_compare","text":"","code":".size_compare(   df,   group_by,   idents,   id,   fun,   compare = \".n\",   split_by = NULL,   order = \"desc(sum)\",   subset = NULL,   return_type = c(\"uids\", \"ids\", \"subdf\", \"df\", \"interdf\"),   include_zeros = FALSE )  more_than(   df = \".\",   group_by,   idents,   id,   subset = NULL,   split_by = NULL,   compare = \".n\",   return_type = c(\"uids\", \"ids\", \"subdf\", \"df\", \"interdf\"),   order = \"desc(sum)\",   include_zeros = FALSE )  less_than(   df = \".\",   group_by,   idents,   id,   subset = NULL,   split_by = NULL,   compare = \".n\",   return_type = c(\"uids\", \"ids\", \"subdf\", \"df\", \"interdf\"),   order = \"desc(sum)\",   include_zeros = FALSE )  emerged(   df = \".\",   group_by,   idents,   id,   subset = NULL,   split_by = NULL,   compare = \".n\",   return_type = c(\"uids\", \"ids\", \"subdf\", \"df\", \"interdf\"),   order = \"desc(sum)\",   include_zeros = FALSE )  vanished(   df = \".\",   group_by,   idents,   id,   subset = NULL,   split_by = NULL,   compare = \".n\",   return_type = c(\"uids\", \"ids\", \"subdf\", \"df\", \"interdf\"),   order = \"desc(sum)\",   include_zeros = FALSE )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get more_than, less_than, emerged or vanished entities from a data frame. — .size_compare","text":"df data frame group_by column name data frame group entities. quoted string bare variable, defines groups entities comparison. idents groups entities compare (values group_by column). Either length 1 (ident_1) length 2 (ident_1 ident_2). length 1, rest cells non-NA values group_by used ident_2. id column name data frame mark entities group. fun way compare groups. Either \"more_than\", \"less_than\", \"emerged\" \"vanished\". compare Either (numeric) column name (.e. Count) data frame compare groups, .n compare number (count) entities group. column name given, first value entities id used. make sure values group (id). split_by column name data frame split entities. comparison done split column. order expression order intermediate data frame returning final result. Default NULL. work subdf df. subset expression subset cells, passed dplyr::filter(). Default NULL (filtering). return_type type returned value. Default uids. one uids: return unique ids selected entities ids: return ids entities order df, non-selected ids NA subdf: return subset df selected entities df: return original df new logical column .selected mark selected entities interdf: return intermediate data frame id column, ident_1, ident_2, predicate, sum, diff split_by column provided. include_zeros Whether include zero entities group more_than less_than comparisons. Default FALSE. default, zero entities excluded, meaning entities must exist groups selected.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get more_than, less_than, emerged or vanished entities from a data frame. — .size_compare","text":"Depending return_type, function return different values. uids: vector unique ids selected entities ids: vector ids entities order df, non-selected ids NA subdf: subset df selected entities df: original df new logical column .selected mark selected entities interdf: intermediate data frame id column, ident_1, ident_2, predicate, sum, diff split_by column provided.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get more_than, less_than, emerged or vanished entities from a data frame. — .size_compare","text":"","code":"df <- data.frame(     id = c(\"A\", \"A\", \"A\", \"B\", \"B\", \"B\", \"C\", \"C\", \"D\", \"D\"),     group = c(\"G1\", \"G1\", \"G2\", \"G1\", \"G2\", \"G2\", \"G1\", \"G2\", \"G1\", \"G2\"),     count = rep(1, 10),     split = c(\"S1\", \"S2\", \"S1\", \"S1\", \"S2\", \"S1\", \"S1\", \"S2\", \"S1\", \"S2\") ) more_than(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = count,   return_type = \"uids\") #> character(0) more_than(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = \".n\",   return_type = \"uids\") #> [1] \"A\" more_than(df, group_by = group, split_by = split, idents = c(\"G1\", \"G2\"), id = id,   compare = count, return_type = \"ids\") #>  [1] NA NA NA NA NA NA NA NA NA NA more_than(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = count,   return_type = \"subdf\") #> [1] id    group count split #> <0 rows> (or 0-length row.names) more_than(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = count,   return_type = \"ids\") #>  [1] NA NA NA NA NA NA NA NA NA NA more_than(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = count,   return_type = \"interdf\") #> # A tibble: 4 × 6 #>   id    ident_1 ident_2 predicate   sum  diff #>   <chr>   <dbl>   <dbl> <lgl>     <dbl> <dbl> #> 1 A           1       1 FALSE         2     0 #> 2 B           1       1 FALSE         2     0 #> 3 C           1       1 FALSE         2     0 #> 4 D           1       1 FALSE         2     0 more_than(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = count,   return_type = \"df\") #>    id group count split .selected #> 1   A    G1     1    S1     FALSE #> 2   A    G1     1    S2     FALSE #> 3   A    G2     1    S1     FALSE #> 4   B    G1     1    S1     FALSE #> 5   B    G2     1    S2     FALSE #> 6   B    G2     1    S1     FALSE #> 7   C    G1     1    S1     FALSE #> 8   C    G2     1    S2     FALSE #> 9   D    G1     1    S1     FALSE #> 10  D    G2     1    S2     FALSE more_than(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id,   return_type = \"uids\", subset = id %in% c(\"A\", \"B\")) #> [1] \"A\" dplyr::mutate(df, selected = more_than(group_by = group, idents = c(\"G1\", \"G2\"),   id = id, compare = count, return_type = \"ids\")) #>    id group count split selected #> 1   A    G1     1    S1     <NA> #> 2   A    G1     1    S2     <NA> #> 3   A    G2     1    S1     <NA> #> 4   B    G1     1    S1     <NA> #> 5   B    G2     1    S2     <NA> #> 6   B    G2     1    S1     <NA> #> 7   C    G1     1    S1     <NA> #> 8   C    G2     1    S2     <NA> #> 9   D    G1     1    S1     <NA> #> 10  D    G2     1    S2     <NA> less_than(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = count,   return_type = \"uids\") #> character(0) emerged(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = count,   return_type = \"uids\", order = sum) #> character(0) vanished(df, group_by = group, idents = c(\"G1\", \"G2\"), id = id, compare = count,   return_type = \"uids\") #> character(0)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-2.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paired entities from a data frame based on the other column — paired","title":"Get paired entities from a data frame based on the other column — paired","text":"Get paired entities data frame based column","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paired entities from a data frame based on the other column — paired","text":"","code":"paired(df = \".\", id, compare, idents = 2, uniq = TRUE)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paired entities from a data frame based on the other column — paired","text":"df data frame. id column name df ids returned final output compare column name df compare values id id. idents values compare compare. either integer vector. integer, number values compare must integer id regarded paired. vector, values compare must values idents id regarded paired. uniq Whether return unique ids . Default TRUE. FALSE, can mutate meta data frame returned ids. Non-paired ids NA.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paired entities from a data frame based on the other column — paired","text":"vector paired ids (id column)","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paired entities from a data frame based on the other column — paired","text":"","code":"df <- data.frame(     id = c(\"A\", \"A\", \"B\", \"B\", \"C\", \"C\", \"D\", \"D\"),     compare = c(1, 2, 1, 1, 1, 2, 1, 2) ) paired(df, id, compare, 2) #> [1] \"A\" \"B\" \"C\" \"D\" paired(df, id, compare, c(1, 2)) #> [1] \"A\" \"C\" \"D\" paired(df, id, compare, c(1, 2), uniq = FALSE) #> [1] \"A\" \"A\" NA  NA  \"C\" \"C\" \"D\" \"D\""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-3.html","id":null,"dir":"Reference","previous_headings":"","what":"Get top entities from a data frame based on the number of entities in each group — top","title":"Get top entities from a data frame based on the number of entities in each group — top","text":"Get top entities data frame based number entities group","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get top entities from a data frame based on the number of entities in each group — top","text":"","code":"top(   df = \".\",   id,   n = 10,   compare = \".n\",   subset = NULL,   with_ties = FALSE,   split_by = NULL,   return_type = c(\"uids\", \"ids\", \"subdf\", \"df\", \"interdf\") )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get top entities from a data frame based on the number of entities in each group — top","text":"df data frame. Use . function called dplyr pipe. id column name df groups. n number top entities return. n < 1, regarded percentage total number entities group (subsetting applied). Specify 0 return entities. compare column name df compare values group. either numeric column .n compare number entities group. column passed, values column must numeric group. checked. subset expression subset entities, passed dplyr::filter(). Default TRUE (filtering). with_ties Whether return entities size last entity top list. Default FALSE. split_by column name (without quotes) metadata split cells. return_type type returned value. Default uids. one uids: return unique ids selected entities ids: return ids entities order df, non-selected ids NA subdf: return subset df selected entities df: return original df new logical column .mark selected entities interdf: return intermediate data frame id column, <compare>, predicate split_by column provided.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get top entities from a data frame based on the number of entities in each group — top","text":"Depending return_type, function return different values.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/mutate-helper-3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get top entities from a data frame based on the number of entities in each group — top","text":"","code":"df <- data.frame(     id = c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"),     value = c(10, 20, 30, 40, 50, 60, 80, 80) ) top(df, id, n = 1, compare = value, with_ties = TRUE, return_type = \"uids\") #> [1] \"G\" \"H\" top(df, \"id\", n = 2, compare = \"value\", return_type = \"subdf\") #>   id value #> 1  G    80 #> 2  H    80 top(df, \"id\", n = 2, compare = \"value\", return_type = \"df\") #>   id value .selected #> 1  A    10     FALSE #> 2  B    20     FALSE #> 3  C    30     FALSE #> 4  D    40     FALSE #> 5  E    50     FALSE #> 6  F    60     FALSE #> 7  G    80      TRUE #> 8  H    80      TRUE top(df, \"id\", n = 2, compare = \"value\", return_type = \"interdf\") #>   id value predicate #> 1  A    10     FALSE #> 2  B    20     FALSE #> 3  C    30     FALSE #> 4  D    40     FALSE #> 5  E    50     FALSE #> 6  F    60     FALSE #> 7  G    80      TRUE #> 8  H    80      TRUE top(df, id, n = 0.25, compare = value, return_type = \"uids\") #> [1] \"G\" \"H\" top(df, id, n = 0, compare = value, return_type = \"uids\") #> [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\"  df <- data.frame(id = c(\"A\", \"A\", \"B\", \"B\", \"B\", \"C\", \"C\", \"C\", \"D\", \"D\", \"D\", \"D\")) top(df, id, n = 2, compare = \".n\", return_type = \"uids\", with_ties = TRUE) #> [1] \"B\" \"C\" \"D\" dplyr::mutate(df, selected = top(id = id, n = 2, compare = \".n\", return_type = \"ids\",   with_ties = TRUE)) #>    id selected #> 1   A     <NA> #> 2   A     <NA> #> 3   B        B #> 4   B        B #> 5   B        B #> 6   C        C #> 7   C        C #> 8   C        C #> 9   D        D #> 10  D        D #> 11  D        D #> 12  D        D"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/repr.html","id":null,"dir":"Reference","previous_headings":"","what":"The string representation of an object — repr","title":"The string representation of an object — repr","text":"string representation object","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/repr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The string representation of an object — repr","text":"","code":"repr(x, newline = FALSE, ...)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/repr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The string representation of an object — repr","text":"x object newline Whether add newlines output element ... arguments passed .repr API.","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/repr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The string representation of an object — repr","text":"string representation","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/repr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The string representation of an object — repr","text":"","code":"repr(1:10) #> [1] \"c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\" # [1] \"c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/run_command.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a command — run_command","title":"Run a command — run_command","text":"Run command","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/run_command.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a command — run_command","text":"","code":"run_command(   cmd,   fg = FALSE,   wait = TRUE,   print_command = cat,   stdout = \"\",   stderr = \"\",   ... )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/run_command.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a command — run_command","text":"cmd command run fg Whether run command foreground wait Whether wait command finish print_command handler print command stdout See base::system2 stderr See base::system2 ... Additional arguments pass system2","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/run_command.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a command — run_command","text":"output command stdout stderr TRUE, output returned character vector Otherwise, output returned integer exit code","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the plot into multiple formats — save_plot","title":"Save the plot into multiple formats — save_plot","text":"Save plot multiple formats","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the plot into multiple formats — save_plot","text":"","code":"save_plot(   plot,   prefix,   devpars = NULL,   bg = \"white\",   formats = c(\"png\", \"pdf\") )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the plot into multiple formats — save_plot","text":"plot plot object prefix prefix file ending . removed prefix. /path//file /path//file. valid save files /path//file.png, /path//file.pdf /path//file.<format> etc. devpars device parameters bg background color formats formats save","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_plotcode.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the plot code and data to reproduce the plot — save_plotcode","title":"Save the plot code and data to reproduce the plot — save_plotcode","text":"plot generated functions registered gglogger::register","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_plotcode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the plot code and data to reproduce the plot — save_plotcode","text":"","code":"save_plotcode(   plot,   prefix,   setup = NULL,   ...,   auto_data_setup = TRUE,   envir = parent.frame() )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_plotcode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the plot code and data to reproduce the plot — save_plotcode","text":"plot plot object prefix prefix file ending . removed prefix. /path//file /path//file. valid save files /path//file.code.zip. setup code setup environment plot generation ... names variables save environment auto_data_setup Whether automatically save variables environment envir environment save variables ","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_to_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Save an object to cache — save_to_cache","title":"Save an object to cache — save_to_cache","text":"Save object cache","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_to_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save an object to cache — save_to_cache","text":"","code":"save_to_cache(to_cache, kind, cache_dir)"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/save_to_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save an object to cache — save_to_cache","text":"to_cache list cache, including signature, digested signature data kind string indicating kind object Used part filename cached file cache_dir string indicating directory store cached files","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/slugify.html","id":null,"dir":"Reference","previous_headings":"","what":"Slugify strings — slugify","title":"Slugify strings — slugify","text":"Slugify strings","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/slugify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slugify strings — slugify","text":"","code":"slugify(   x,   non_alphanum_replace = \"-\",   collapse_replace = TRUE,   tolower = FALSE )"},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/slugify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slugify strings — slugify","text":"x strings slugify non_alphanum_replace Replace non-alphanumeric characters collapse_replace Collapse consecutive non-alphanumeric character replacements tolower Convert lowercase","code":""},{"path":"https://pwwang.github.io/biopipen.utils.R/reference/slugify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Slugify strings — slugify","text":"slugified strings","code":""}]
